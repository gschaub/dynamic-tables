{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACkD;AACF;AAChD,gCAAgC,sDAAI,CAAC,sDAAG;AACxC;AACA;AACA,yBAAyB,sDAAI,CAAC,uDAAI;AAClC;AACA,GAAG;AACH,CAAC;AACD,iEAAe,UAAU,EAAC;AAC1B;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACkD;AACF;AAChD,kCAAkC,sDAAI,CAAC,sDAAG;AAC1C;AACA;AACA,yBAAyB,sDAAI,CAAC,uDAAI;AAClC;AACA,GAAG;AACH,CAAC;AACD,iEAAe,YAAY,EAAC;AAC5B;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACkD;AACF;AAChD,4BAA4B,sDAAI,CAAC,sDAAG;AACpC;AACA;AACA,yBAAyB,sDAAI,CAAC,uDAAI;AAClC;AACA,GAAG;AACH,CAAC;AACD,iEAAe,MAAM,EAAC;AACtB;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACkD;AACa;AAC/D,8BAA8B,uDAAK,CAAC,sDAAG;AACvC;AACA;AACA,0BAA0B,sDAAI,CAAC,uDAAI;AACnC;AACA,GAAG,gBAAgB,sDAAI,CAAC,uDAAI;AAC5B;AACA,GAAG;AACH,CAAC;AACD,iEAAe,QAAQ,EAAC;AACxB;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACkD;AACF;AAChD,uCAAuC,sDAAI,CAAC,sDAAG;AAC/C;AACA;AACA,yBAAyB,sDAAI,CAAC,uDAAI;AAClC;AACA,GAAG;AACH,CAAC;AACD,iEAAe,iBAAiB,EAAC;AACjC;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACkD;AACF;AAChD,uCAAuC,sDAAI,CAAC,sDAAG;AAC/C;AACA;AACA,yBAAyB,sDAAI,CAAC,uDAAI;AAClC;AACA,GAAG;AACH,CAAC;AACD,iEAAe,iBAAiB,EAAC;AACjC;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACkD;AACF;AAChD,oCAAoC,sDAAI,CAAC,sDAAG;AAC5C;AACA;AACA,yBAAyB,sDAAI,CAAC,uDAAI;AAClC;AACA,GAAG;AACH,CAAC;AACD,iEAAe,cAAc,EAAC;AAC9B;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACkD;AACF;AAChD,oCAAoC,sDAAI,CAAC,sDAAG;AAC5C;AACA;AACA,yBAAyB,sDAAI,CAAC,uDAAI;AAClC;AACA,GAAG;AACH,CAAC;AACD,iEAAe,cAAc,EAAC;AAC9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACyD;AACiB;AACsB;;AAEhG;AACiE;AACtC;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA,SAASgB,UAAUA,CAACC,KAAK,EAAE;EAC1B,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGlB,4DAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,4DAAQ,CAAC,CAAC,CAAC,CAAC;EAE5D,MAAM;IAAEqB,OAAO;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,iBAAiB;IAAEC;EAAc,CAAC,GAAGT,KAAK;EAElFjB,6DAAS,CAAC,MAAM;IACfqB,mBAAmB,CAACJ,KAAK,CAACG,gBAAgB,CAAC;EAC5C,CAAC,EAAE,CAACH,KAAK,CAACG,gBAAgB,CAAC,CAAC;;EAE5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASO,cAAcA,CAACC,KAAK,EAAEL,QAAQ,EAAE;IACxCG,aAAa,CAACE,KAAK,EAAE,QAAQ,EAAEN,OAAO,EAAEC,QAAQ,EAAE,EAAE,CAAC;EACtD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASM,cAAcA,CAACD,KAAK,EAAEL,QAAQ,EAAE;IACxCG,aAAa,CAACE,KAAK,EAAE,QAAQ,EAAEN,OAAO,EAAEC,QAAQ,EAAE,EAAE,CAAC;EACtD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASO,mBAAmBA,CAACF,KAAK,EAAEG,uBAAuB,EAAE;IAC5D,IAAIb,oBAAoB,EAAE;MACzBC,uBAAuB,CAAC,KAAK,CAAC;MAC9BO,aAAa,CAACE,KAAK,EAAE,YAAY,EAAEN,OAAO,EAAEC,QAAQ,EAAEQ,uBAAuB,CAAC;IAC/E,CAAC,MAAM;MACNH,KAAK,CAACI,cAAc,CAAC,CAAC;MACtBb,uBAAuB,CAAC,IAAI,CAAC;IAC9B;EACD;EAEA,oBACCN,uDAAA,CAAAE,uDAAA;IAAAkB,QAAA,gBACCtB,sDAAA,CAACT,+DAAY;MAACgC,IAAI,EAAE7B,wDAAa;MAAC8B,WAAW,EAAC,MAAM;MAACC,KAAK,EAAEZ,WAAY;MAAAS,QAAA,EACtEA,CAAC;QAAEI;MAAQ,CAAC,kBACZxB,uDAAA,CAAAE,uDAAA;QAAAkB,QAAA,gBACCtB,sDAAA,CAACR,4DAAS;UAAA8B,QAAA,eACTtB,sDAAA,CAACP,2DAAQ;YAAC8B,IAAI,EAAE5B,wDAAS;YAACgC,OAAO,EAAER,mBAAoB;YAAAG,QAAA,EAAC;UAExD,CAAU;QAAC,CACD,CAAC,eACZpB,uDAAA,CAACV,4DAAS;UAAA8B,QAAA,gBACTtB,sDAAA,CAACP,2DAAQ;YAAC8B,IAAI,EAAE3B,wDAAkB;YAAC+B,OAAO,EAAEC,CAAC,IAAIZ,cAAc,CAACY,CAAC,EAAEhB,QAAQ,CAAE;YAAAU,QAAA,EAAC;UAE9E,CAAU,CAAC,eACXtB,sDAAA,CAACP,2DAAQ;YAAC8B,IAAI,EAAE1B,wDAAkB;YAAC8B,OAAO,EAAEC,CAAC,IAAIV,cAAc,CAACU,CAAC,EAAEhB,QAAQ,CAAE;YAAAU,QAAA,EAAC;UAE9E,CAAU,CAAC;QAAA,CACD,CAAC;MAAA,CACX;IACF,CACY,CAAC,EAEdf,oBAAoB,iBACpBP,sDAAA,CAACF,yEAAoB;MACpBc,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA,WAAY;MACzBJ,gBAAgB,EAAEA,gBAAiB;MACnCK,iBAAiB,EAAEA,iBAAkB;MACrCe,eAAe,EAAEV;IAAoB,CACf,CACvB;EAAA,CACA,CAAC;AAEL;;;;;;;;;;;;;;;;;;;;;;ACtGA;AACyD;AAO1B;;AAE/B;AACA;AACA;AACsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA,SAASrB,oBAAoBA,CAACQ,KAAK,EAAE;EACpC,MAAM;IAAEuB,eAAe;IAAEhB,WAAW;IAAEJ,gBAAgB;IAAEK;EAAkB,CAAC,GAAGR,KAAK;EAEnFjB,6DAAS,CAAC,MAAM;IACf,QAAQoB,gBAAgB,CAAC2B,eAAe;MACvC,KAAK,cAAc;QAAE;UACpBC,mBAAmB,CAAC,KAAK,CAAC;UAC1BC,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,IAAI,CAAC;UAClB;QACD;MAEA,KAAK,MAAM;QAAE;UACZF,mBAAmB,CAAC,IAAI,CAAC;UACzBC,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,IAAI,CAAC;UAClB;QACD;MAEA,KAAK,OAAO;QAAE;UACbF,mBAAmB,CAAC,IAAI,CAAC;UACzBC,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,KAAK,CAAC;UACnB;QACD;MAEA,KAAK,QAAQ;QAAE;UACdF,mBAAmB,CAAC,IAAI,CAAC;UACzBC,aAAa,CAAC,KAAK,CAAC;UACpBC,YAAY,CAAC,IAAI,CAAC;UAClB;QACD;IACD;IAEAC,kBAAkB,CAAC/B,gBAAgB,CAAC2B,eAAe,CAAC;IACpDK,WAAW,CAAChC,gBAAgB,CAACiC,QAAQ,CAAC;IACtCC,gBAAgB,CAAClC,gBAAgB,CAACmC,aAAa,CAAC;IAChDC,WAAW,CAACpC,gBAAgB,CAACqC,QAAQ,CAAC;IACtCC,gBAAgB,CAACtC,gBAAgB,CAACuC,aAAa,CAAC;IAChDC,aAAa,CAACxC,gBAAgB,CAACyC,UAAU,CAAC;IAC1CC,kBAAkB,CAAC1C,gBAAgB,CAACyC,UAAU,CAAC;IAC/CE,kBAAkB,CAAC3C,gBAAgB,CAAC4C,eAAe,CAAC;IACpDC,mBAAmB,CAAC7C,gBAAgB,CAAC8C,gBAAgB,CAAC;EACvD,CAAC,EAAE,CAAC9C,gBAAgB,CAAC,CAAC;;EAEtB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAAS+C,QAAQA,CAACvC,KAAK,EAAE;IACxBA,KAAK,CAACwC,eAAe,CAAC,CAAC;EACxB;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASC,YAAYA,CAACzC,KAAK,EAAE;IAC5BY,eAAe,CAAC,KAAK,CAAC;EACvB;EAEA,MAAM,CAACO,eAAe,EAAEI,kBAAkB,CAAC,GAAGlD,4DAAQ,CAAC,CAAC;EACxD,MAAM,CAACqE,gBAAgB,EAAEtB,mBAAmB,CAAC,GAAG/C,4DAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACsE,UAAU,EAAEtB,aAAa,CAAC,GAAGhD,4DAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACuE,SAAS,EAAEtB,YAAY,CAAC,GAAGjD,4DAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACoD,QAAQ,EAAED,WAAW,CAAC,GAAGnD,4DAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACsD,aAAa,EAAED,gBAAgB,CAAC,GAAGrD,4DAAQ,CAAC,CAAC;EACpD,MAAM,CAACwD,QAAQ,EAAED,WAAW,CAAC,GAAGvD,4DAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC0D,aAAa,EAAED,gBAAgB,CAAC,GAAGzD,4DAAQ,CAAC,CAAC;EACpD,MAAM,CAAC4D,UAAU,EAAED,aAAa,CAAC,GAAG3D,4DAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACwE,eAAe,EAAEX,kBAAkB,CAAC,GAAG7D,4DAAQ,CAAC,CAAC;EACxD,MAAM,CAACiE,gBAAgB,EAAED,mBAAmB,CAAC,GAAGhE,4DAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC+D,eAAe,EAAED,kBAAkB,CAAC,GAAG9D,4DAAQ,CAAC,KAAK,CAAC;;EAE7D;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASyE,WAAWA,CAAC9C,KAAK,EAAE;IAC3B,QAAQA,KAAK;MACZ,KAAK,cAAc;QAAE;UACpB4B,WAAW,CAAC,CAAC,CAAC;UACdE,gBAAgB,CAAC,IAAI,CAAC;UACtBN,WAAW,CAAC,EAAE,CAAC;UACfE,gBAAgB,CAAC,IAAI,CAAC;UACtBM,aAAa,CAAC,CAAC,CAAC;UAChBE,kBAAkB,CAAC,IAAI,CAAC;UACxBd,mBAAmB,CAAC,KAAK,CAAC;UAC1BC,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,IAAI,CAAC;UAClB;QACD;MAEA,KAAK,MAAM;QAAE;UACZM,WAAW,CAAC,CAAC,CAAC;UACdE,gBAAgB,CAAC,IAAI,CAAC;UACtBN,WAAW,CAAC,CAAC,CAAC;UACdE,gBAAgB,CAAC,IAAI,CAAC;UACtBM,aAAa,CAAC,CAAC,CAAC;UAChBE,kBAAkB,CAAC,IAAI,CAAC;UACxBd,mBAAmB,CAAC,IAAI,CAAC;UACzBC,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,IAAI,CAAC;UAClB;QACD;MAEA,KAAK,OAAO;QAAE;UACbM,WAAW,CAAC,CAAC,CAAC;UACdE,gBAAgB,CAAC,IAAI,CAAC;UACtBN,WAAW,CAAC,CAAC,CAAC;UACdE,gBAAgB,CAAC,IAAI,CAAC;UACtBM,aAAa,CAAC,EAAE,CAAC;UACjBE,kBAAkB,CAAC,IAAI,CAAC;UACxBd,mBAAmB,CAAC,IAAI,CAAC;UACzBC,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,KAAK,CAAC;UACnB;QACD;MAEA,KAAK,QAAQ;QAAE;UACdM,WAAW,CAAC,EAAE,CAAC;UACfE,gBAAgB,CAAC,IAAI,CAAC;UACtBN,WAAW,CAAC,EAAE,CAAC;UACfE,gBAAgB,CAAC,IAAI,CAAC;UACtBM,aAAa,CAAC,CAAC,CAAC;UAChBE,kBAAkB,CAAC,IAAI,CAAC;UACxBd,mBAAmB,CAAC,IAAI,CAAC;UACzBC,aAAa,CAAC,KAAK,CAAC;UACpBC,YAAY,CAAC,IAAI,CAAC;UAClB;QACD;IACD;IAEAC,kBAAkB,CAACvB,KAAK,CAAC;EAC1B;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAAS+C,cAAcA,CAAC/C,KAAK,EAAE;IAC9BwB,WAAW,CAACxB,KAAK,CAACgD,MAAM,CAACC,KAAK,CAAC;EAChC;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASC,mBAAmBA,CAAClD,KAAK,EAAE;IACnC0B,gBAAgB,CAAC1B,KAAK,CAAC;EACxB;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASmD,cAAcA,CAACnD,KAAK,EAAE;IAC9B4B,WAAW,CAAC5B,KAAK,CAACgD,MAAM,CAACC,KAAK,CAAC;EAChC;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASG,mBAAmBA,CAACpD,KAAK,EAAE;IACnC8B,gBAAgB,CAAC9B,KAAK,CAAC;EACxB;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASqD,YAAYA,CAACrD,KAAK,EAAE;IAC5BgC,aAAa,CAACsB,MAAM,CAACtD,KAAK,CAACgD,MAAM,CAACC,KAAK,CAAC,CAAC;EAC1C;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASM,iBAAiBA,CAACvD,KAAK,EAAE;IACjCkC,kBAAkB,CAAClC,KAAK,CAAC;EAC1B;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASwD,QAAQA,CAACC,OAAO,EAAE;IAC1BpB,mBAAmB,CAACoB,OAAO,CAAC;EAC7B;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASC,OAAOA,CAACD,OAAO,EAAE;IACzBtB,kBAAkB,CAACsB,OAAO,CAAC;EAC5B;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASE,QAAQA,CAAC3D,KAAK,EAAE;IACxB,MAAMG,uBAAuB,GAAG;MAC/BgB,eAAe,EAAEA,eAAe;MAChCM,QAAQ,EAAEA,QAAQ;MAClBE,aAAa,EAAEA,aAAa;MAC5BE,QAAQ,EAAEyB,MAAM,CAACzB,QAAQ,CAAC;MAC1BE,aAAa,EAAEA,aAAa;MAC5BE,UAAU,EAAEA,UAAU;MACtBY,eAAe,EAAEA,eAAe;MAChCP,gBAAgB,EAAEA,gBAAgB;MAClCF,eAAe,EAAEA,eAAe;MAChCwB,sBAAsB,EAAE,KAAK;MAC7BC,mBAAmB,EAAE;IACtB,CAAC;IACDjD,eAAe,CAAC,KAAK,EAAET,uBAAuB,CAAC;EAChD;EAEA,oBACCpB,sDAAA,CAAAI,uDAAA;IAAAkB,QAAA,EACEO,eAAe,iBACf3B,uDAAA,CAAC4B,wDAAK;MACLiD,KAAK,EAAC,wBAAwB;MAC9BC,cAAc,EAAEtB,YAAa;MAC7BuB,YAAY,EAAC,qBAAqB;MAClCC,aAAa,EAAC,OAAO;MACrBC,yBAAyB,EAAC,OAAO;MACjCC,IAAI,EAAC,OAAO;MAAA9D,QAAA,gBAEZpB,uDAAA;QAAGmF,SAAS,EAAC,cAAc;QAAA/D,QAAA,GAAC,aAAW,EAACT,WAAW;MAAA,CAAI,CAAC,eAExDX,uDAAA;QAAMoF,QAAQ,EAAEV,QAAS;QAACW,WAAW,EAAE/B,QAAS;QAAAlC,QAAA,gBAC/CtB,sDAAA,CAAC+B,gEAAa;UACbN,KAAK,EAAC,YAAY;UAClByC,KAAK,EAAE9B,eAAgB;UACvBoD,QAAQ,EAAE5D,CAAC,IAAImC,WAAW,CAACnC,CAAC,CAAE;UAC9B6D,OAAO,EAAE,CACR;YAAEvB,KAAK,EAAE,cAAc;YAAEzC,KAAK,EAAE;UAAe,CAAC,EAChD;YAAEyC,KAAK,EAAE,MAAM;YAAEzC,KAAK,EAAE;UAAY,CAAC,EACrC;YAAEyC,KAAK,EAAE,OAAO;YAAEzC,KAAK,EAAE;UAAc,CAAC,EACxC;YAAEyC,KAAK,EAAE,QAAQ;YAAEzC,KAAK,EAAE;UAAS,CAAC,CACnC;UACFiE,uBAAuB;QAAA,CACvB,CAAC,eAEFxF,uDAAA;UAAUmF,SAAS,EAAE1B,gBAAgB,KAAK,IAAI,GAAG,4BAA4B,GAAG,EAAG;UAAArC,QAAA,gBAClFtB,sDAAA;YAAAsB,QAAA,EAAQ;UAAsB,CAAQ,CAAC,eACvCtB,sDAAA,CAACmC,8EAAa;YACbkD,SAAS,EAAC,0BAA0B;YACpC5D,KAAK,EAAC,oBAAoB;YAC1BkE,aAAa,EAAC,MAAM;YACpBC,MAAM,EAAEhE,CAAC,IAAIwC,cAAc,CAACxC,CAAC,CAAE;YAC/BsC,KAAK,EAAEpB;UAAS,CAChB,CAAC,eAEF5C,uDAAA;YAAMmF,SAAS,EAAC,yBAAyB;YAAA/D,QAAA,gBACxCtB,sDAAA,CAACmC,8EAAa;cACbkD,SAAS,EAAC,0BAA0B;cACpC5D,KAAK,EAAC,eAAe;cACrBkE,aAAa,EAAC,MAAM;cACpBzB,KAAK,EAAExB,QAAS;cAChBkD,MAAM,EAAEhE,CAAC,IAAIoC,cAAc,CAACpC,CAAC;YAAE,CAC/B,CAAC,eAEF5B,sDAAA,CAAC+B,gEAAa;cACbsD,SAAS,EAAC,yBAAyB;cACnCM,aAAa,EAAC,MAAM;cACpBlE,KAAK,EAAC,OAAO;cACbyC,KAAK,EAAEtB,aAAc;cACrB4C,QAAQ,EAAE5D,CAAC,IAAIuC,mBAAmB,CAACvC,CAAC,CAAE;cACtC6D,OAAO,EAAE,CACR;gBAAEvB,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAa,CAAC,EACpC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAe,CAAC,CACrC;cACFiE,uBAAuB;YAAA,CACvB,CAAC;UAAA,CACG,CAAC;QAAA,CACE,CAAC,eAEXxF,uDAAA;UAAUmF,SAAS,EAAExB,SAAS,KAAK,IAAI,GAAG,2BAA2B,GAAG,EAAG;UAAAvC,QAAA,gBAC1EtB,sDAAA;YAAAsB,QAAA,EAAQ;UAAe,CAAQ,CAAC,eAEhCpB,uDAAA;YAAMmF,SAAS,EAAC,yBAAyB;YAAA/D,QAAA,gBACxCtB,sDAAA,CAACmC,8EAAa;cACbkD,SAAS,EAAC,oBAAoB;cAC9B5D,KAAK,EAAC,aAAa;cACnBkE,aAAa,EAAC,MAAM;cACpBzB,KAAK,EAAEhB,UAAW;cAClB0C,MAAM,EAAEhE,CAAC,IAAI0C,YAAY,CAAC1C,CAAC;YAAE,CAC7B,CAAC,eAEF5B,sDAAA,CAAC+B,gEAAa;cACbsD,SAAS,EAAC,yBAAyB;cACnC5D,KAAK,EAAC,OAAO;cACbkE,aAAa,EAAC,MAAM;cACpBzB,KAAK,EAAEJ,eAAgB;cACvB0B,QAAQ,EAAE5D,CAAC,IAAI4C,iBAAiB,CAAC5C,CAAC,CAAE;cACpC6D,OAAO,EAAE,CACR;gBAAEvB,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAO,CAAC,EAC9B;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAe,CAAC,CACrC;cACFiE,uBAAuB;YAAA,CACvB,CAAC;UAAA,CACG,CAAC;QAAA,CACE,CAAC,eAEXxF,uDAAA;UAAUmF,SAAS,EAAEzB,UAAU,KAAK,IAAI,GAAG,2BAA2B,GAAG,EAAG;UAAAtC,QAAA,gBAC3EtB,sDAAA;YAAAsB,QAAA,EAAQ;UAAgB,CAAQ,CAAC,eACjCpB,uDAAA;YAAMmF,SAAS,EAAC,yBAAyB;YAAA/D,QAAA,gBACxCtB,sDAAA,CAACmC,8EAAa;cACbkD,SAAS,EAAC,oBAAoB;cAC9B5D,KAAK,EAAC,eAAe;cACrBkE,aAAa,EAAC,MAAM;cACpBzB,KAAK,EAAExB,QAAS;cAChBkD,MAAM,EAAEhE,CAAC,IAAIoC,cAAc,CAACpC,CAAC;YAAE,CAC/B,CAAC,eAEF5B,sDAAA,CAAC+B,gEAAa;cACbsD,SAAS,EAAC,yBAAyB;cACnCM,aAAa,EAAC,MAAM;cACpBlE,KAAK,EAAC,OAAO;cACbyC,KAAK,EAAEtB,aAAc;cACrB4C,QAAQ,EAAE5D,CAAC,IAAIuC,mBAAmB,CAACvC,CAAC,CAAE;cACtC6D,OAAO,EAAE,CACR;gBAAEvB,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAa,CAAC,EACpC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAe,CAAC,CACrC;cACFiE,uBAAuB;YAAA,CACvB,CAAC;UAAA,CACG,CAAC,eAEPxF,uDAAA;YAAMmF,SAAS,EAAC,yBAAyB;YAAA/D,QAAA,gBACxCtB,sDAAA,CAACmC,8EAAa;cACbkD,SAAS,EAAC,oBAAoB;cAC9B5D,KAAK,EAAC,eAAe;cACrBkE,aAAa,EAAC,MAAM;cACpBzB,KAAK,EAAEpB,QAAS;cAChB8C,MAAM,EAAEhE,CAAC,IAAIwC,cAAc,CAACxC,CAAC;YAAE,CAC/B,CAAC,eAEF5B,sDAAA,CAAC+B,gEAAa;cACbsD,SAAS,EAAC,yBAAyB;cACnCM,aAAa,EAAC,MAAM;cACpBlE,KAAK,EAAC,OAAO;cACbyC,KAAK,EAAElB,aAAc;cACrBwC,QAAQ,EAAE5D,CAAC,IAAIyC,mBAAmB,CAACzC,CAAC,CAAE;cACtC6D,OAAO,EAAE,CACR;gBAAEvB,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAa,CAAC,EACpC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAe,CAAC,CACrC;cACFiE,uBAAuB;YAAA,CACvB,CAAC;UAAA,CACG,CAAC;QAAA,CACE,CAAC,EAEV5E,iBAAiB,iBACjBZ,uDAAA,CAAAE,uDAAA;UAAAkB,QAAA,gBACCtB,sDAAA,CAACgC,kEAAe;YACfP,KAAK,EAAC,iBAAiB;YACvBiD,OAAO,EAAEnB,gBAAiB;YAC1BiC,QAAQ,EAAEf;UAAS,CACnB,CAAC,eACFzE,sDAAA,CAACgC,kEAAe;YACfP,KAAK,EAAC,gBAAgB;YACtBiD,OAAO,EAAErB,eAAgB;YACzBmC,QAAQ,EAAEb;UAAQ,CAClB,CAAC;QAAA,CACD,CACF,eACDzE,uDAAA;UAAAoB,QAAA,gBACCtB,sDAAA,CAACiC,yDAAM;YAAC4D,OAAO,EAAC,WAAW;YAAClE,OAAO,EAAE+B,YAAa;YAAApC,QAAA,EAAC;UAEnD,CAAQ,CAAC,eAETtB,sDAAA,CAACiC,yDAAM;YAAC4D,OAAO,EAAC,SAAS;YAACC,IAAI,EAAC,QAAQ;YAAAxE,QAAA,EAAC;UAExC,CAAQ,CAAC;QAAA,CACJ,CAAC;MAAA,CACF,CAAC;IAAA,CACD;EACP,CACA,CAAC;AAEL;;;;;;;;;;;;ACzcA;;;;;;;;;;;;;;;;;;;;;;ACAA;AACyD;AAM1B;;AAE/B;AACA;AACA;AACsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA,SAASyE,kBAAkBA,CAACzF,KAAK,EAAE;EAClC,MAAM;IAAE0F,aAAa;IAAEC,QAAQ;IAAEC;EAAc,CAAC,GAAG5F,KAAK;EAExDjB,6DAAS,CAAC,MAAM;IACf,QAAQ6G,aAAa,CAACC,aAAa;MAClC,KAAK,MAAM;QAAE;UACZ7D,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,IAAI,CAAC;UAClB;QACD;MAEA,KAAK,OAAO;QAAE;UACbD,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,KAAK,CAAC;UACnB;QACD;MAEA,KAAK,QAAQ;QAAE;UACdD,aAAa,CAAC,KAAK,CAAC;UACpBC,YAAY,CAAC,IAAI,CAAC;UAClB;QACD;IACD;IAEA6D,gBAAgB,CAACF,aAAa,CAACC,aAAa,CAAC;IAC7CE,YAAY,CAACH,aAAa,CAACI,SAAS,CAAC;IACrCC,iBAAiB,CAACL,aAAa,CAACM,cAAc,CAAC;IAC/CC,YAAY,CAACP,aAAa,CAACQ,SAAS,CAAC;IACrCC,iBAAiB,CAACT,aAAa,CAACU,cAAc,CAAC;IAC/CC,cAAc,CAACX,aAAa,CAACY,WAAW,CAAC;IACzCC,mBAAmB,CAACb,aAAa,CAACc,gBAAgB,CAAC;EACpD,CAAC,EAAE,CAACd,aAAa,CAAC,CAAC;;EAEnB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAAS1C,QAAQA,CAACvC,KAAK,EAAE;IACxBA,KAAK,CAACwC,eAAe,CAAC,CAAC;EACxB;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASC,YAAYA,CAACzC,KAAK,EAAE;IAC5B+E,aAAa,CAAC,KAAK,CAAC;EACrB;EAEA,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAG9G,4DAAQ,CAAC,CAAC;EACpD,MAAM,CAACsE,UAAU,EAAEtB,aAAa,CAAC,GAAGhD,4DAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACuE,SAAS,EAAEtB,YAAY,CAAC,GAAGjD,4DAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACgH,SAAS,EAAED,YAAY,CAAC,GAAG/G,4DAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACkH,cAAc,EAAED,iBAAiB,CAAC,GAAGjH,4DAAQ,CAAC,CAAC;EACtD,MAAM,CAACoH,SAAS,EAAED,YAAY,CAAC,GAAGnH,4DAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACsH,cAAc,EAAED,iBAAiB,CAAC,GAAGrH,4DAAQ,CAAC,CAAC;EACtD,MAAM,CAACwH,WAAW,EAAED,cAAc,CAAC,GAAGvH,4DAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAAC0H,gBAAgB,EAAED,mBAAmB,CAAC,GAAGzH,4DAAQ,CAAC,CAAC;;EAE1D;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAAS2H,YAAYA,CAAChG,KAAK,EAAE;IAC5B,QAAQA,KAAK;MACZ,KAAK,MAAM;QAAE;UACZwF,YAAY,CAAC,CAAC,CAAC;UACfE,iBAAiB,CAAC,IAAI,CAAC;UACvBN,YAAY,CAAC,CAAC,CAAC;UACfE,iBAAiB,CAAC,IAAI,CAAC;UACvBM,cAAc,CAAC,CAAC,CAAC;UACjBE,mBAAmB,CAAC,IAAI,CAAC;UACzBzE,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,IAAI,CAAC;UAClB;QACD;MAEA,KAAK,OAAO;QAAE;UACbkE,YAAY,CAAC,CAAC,CAAC;UACfE,iBAAiB,CAAC,IAAI,CAAC;UACvBN,YAAY,CAAC,CAAC,CAAC;UACfE,iBAAiB,CAAC,IAAI,CAAC;UACvBM,cAAc,CAAC,EAAE,CAAC;UAClBE,mBAAmB,CAAC,IAAI,CAAC;UACzBzE,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,KAAK,CAAC;UACnB;QACD;MAEA,KAAK,QAAQ;QAAE;UACdkE,YAAY,CAAC,EAAE,CAAC;UAChBE,iBAAiB,CAAC,IAAI,CAAC;UACvBN,YAAY,CAAC,EAAE,CAAC;UAChBE,iBAAiB,CAAC,IAAI,CAAC;UACvBM,cAAc,CAAC,CAAC,CAAC;UACjBE,mBAAmB,CAAC,IAAI,CAAC;UACzBzE,aAAa,CAAC,KAAK,CAAC;UACpBC,YAAY,CAAC,IAAI,CAAC;UAClB;QACD;IACD;IAEA6D,gBAAgB,CAACnF,KAAK,CAAC;EACxB;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASiG,eAAeA,CAACjG,KAAK,EAAE;IAC/BoF,YAAY,CAACpF,KAAK,CAACgD,MAAM,CAACC,KAAK,CAAC;EACjC;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASiD,oBAAoBA,CAAClG,KAAK,EAAE;IACpCsF,iBAAiB,CAACtF,KAAK,CAAC;EACzB;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASmG,eAAeA,CAACnG,KAAK,EAAE;IAC/BwF,YAAY,CAACxF,KAAK,CAACgD,MAAM,CAACC,KAAK,CAAC;EACjC;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASmD,oBAAoBA,CAACpG,KAAK,EAAE;IACpC0F,iBAAiB,CAAC1F,KAAK,CAAC;EACzB;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASqG,aAAaA,CAACrG,KAAK,EAAE;IAC7B4F,cAAc,CAACtC,MAAM,CAACtD,KAAK,CAACgD,MAAM,CAACC,KAAK,CAAC,CAAC;EAC3C;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASqD,kBAAkBA,CAACtG,KAAK,EAAE;IAClC8F,mBAAmB,CAAC9F,KAAK,CAAC;EAC3B;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAAS2D,QAAQA,CAAC3D,KAAK,EAAE;IACxB,MAAMuG,oBAAoB,GAAG;MAC5BrB,aAAa,EAAEA,aAAa;MAC5BG,SAAS,EAAEA,SAAS;MACpBE,cAAc,EAAEA,cAAc;MAC9BE,SAAS,EAAEnC,MAAM,CAACmC,SAAS,CAAC;MAC5BE,cAAc,EAAEA,cAAc;MAC9BE,WAAW,EAAEA,WAAW;MACxBE,gBAAgB,EAAEA,gBAAgB;MAClCS,mBAAmB,EAAE,KAAK;MAC1B3C,mBAAmB,EAAE;IACtB,CAAC;IAEDkB,aAAa,CAAC,KAAK,EAAEwB,oBAAoB,CAAC;EAC3C;EAEA,oBACCxH,sDAAA,CAAAI,uDAAA;IAAAkB,QAAA,EACE0E,aAAa,iBACb9F,uDAAA,CAAC4B,wDAAK;MACLiD,KAAK,EAAC,sBAAsB;MAC5BC,cAAc,EAAEtB,YAAa;MAC7BuB,YAAY,EAAC,qBAAqB;MAClCC,aAAa,EAAC,OAAO;MACrBC,yBAAyB,EAAC,OAAO;MACjCC,IAAI,EAAC,OAAO;MAAA9D,QAAA,gBAEZpB,uDAAA;QAAGmF,SAAS,EAAC,WAAW;QAAA/D,QAAA,GAAC,UAAQ,EAAC2E,QAAQ;MAAA,CAAI,CAAC,eAE/C/F,uDAAA;QAAMoF,QAAQ,EAAEV,QAAS;QAACW,WAAW,EAAE/B,QAAS;QAAAlC,QAAA,gBAC/CtB,sDAAA,CAAC+B,gEAAa;UACbN,KAAK,EAAC,aAAa;UACnByC,KAAK,EAAEiC,aAAc;UACrBX,QAAQ,EAAE5D,CAAC,IAAIqF,YAAY,CAACrF,CAAC,CAAE;UAC/B6D,OAAO,EAAE,CACR;YAAEvB,KAAK,EAAE,MAAM;YAAEzC,KAAK,EAAE;UAAY,CAAC,EACrC;YAAEyC,KAAK,EAAE,OAAO;YAAEzC,KAAK,EAAE;UAAe,CAAC,EACzC;YAAEyC,KAAK,EAAE,QAAQ;YAAEzC,KAAK,EAAE;UAAS,CAAC,CACnC;UACFiE,uBAAuB;QAAA,CACvB,CAAC,eAEFxF,uDAAA;UAAUmF,SAAS,EAAExB,SAAS,KAAK,IAAI,GAAG,yBAAyB,GAAG,EAAG;UAAAvC,QAAA,gBACxEtB,sDAAA;YAAAsB,QAAA,EAAQ;UAAgB,CAAQ,CAAC,eAEjCpB,uDAAA;YAAMmF,SAAS,EAAC,uBAAuB;YAAA/D,QAAA,gBACtCtB,sDAAA,CAACmC,8EAAa;cACbkD,SAAS,EAAC,kBAAkB;cAC5B5D,KAAK,EAAC,cAAc;cACpBkE,aAAa,EAAC,MAAM;cACpBzB,KAAK,EAAE4C,WAAY;cACnBlB,MAAM,EAAEhE,CAAC,IAAI0F,aAAa,CAAC1F,CAAC;YAAE,CAC9B,CAAC,eAEF5B,sDAAA,CAAC+B,gEAAa;cACbsD,SAAS,EAAC,uBAAuB;cACjC5D,KAAK,EAAC,OAAO;cACbkE,aAAa,EAAC,MAAM;cACpBzB,KAAK,EAAE8C,gBAAiB;cACxBxB,QAAQ,EAAE5D,CAAC,IAAI2F,kBAAkB,CAAC3F,CAAC,CAAE;cACrC6D,OAAO,EAAE,CACR;gBAAEvB,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAO,CAAC,EAC9B;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAe,CAAC,CACrC;cACFiE,uBAAuB;YAAA,CACvB,CAAC;UAAA,CACG,CAAC;QAAA,CACE,CAAC,eAEXxF,uDAAA;UAAUmF,SAAS,EAAEzB,UAAU,KAAK,IAAI,GAAG,yBAAyB,GAAG,EAAG;UAAAtC,QAAA,gBACzEtB,sDAAA;YAAAsB,QAAA,EAAQ;UAAiB,CAAQ,CAAC,eAClCpB,uDAAA;YAAMmF,SAAS,EAAC,uBAAuB;YAAA/D,QAAA,gBACtCtB,sDAAA,CAACmC,8EAAa;cACbkD,SAAS,EAAC,kBAAkB;cAC5B5D,KAAK,EAAC,gBAAgB;cACtBkE,aAAa,EAAC,MAAM;cACpBzB,KAAK,EAAEoC,SAAU;cACjBV,MAAM,EAAEhE,CAAC,IAAIsF,eAAe,CAACtF,CAAC;YAAE,CAChC,CAAC,eAEF5B,sDAAA,CAAC+B,gEAAa;cACbsD,SAAS,EAAC,uBAAuB;cACjCM,aAAa,EAAC,MAAM;cACpBlE,KAAK,EAAC,OAAO;cACbyC,KAAK,EAAEsC,cAAe;cACtBhB,QAAQ,EAAE5D,CAAC,IAAIuF,oBAAoB,CAACvF,CAAC,CAAE;cACvC6D,OAAO,EAAE,CACR;gBAAEvB,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAa,CAAC,EACpC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAe,CAAC,CACrC;cACFiE,uBAAuB;YAAA,CACvB,CAAC;UAAA,CACG,CAAC,eAEPxF,uDAAA;YAAMmF,SAAS,EAAC,uBAAuB;YAAA/D,QAAA,gBACtCtB,sDAAA,CAACmC,8EAAa;cACbkD,SAAS,EAAC,kBAAkB;cAC5B5D,KAAK,EAAC,gBAAgB;cACtBkE,aAAa,EAAC,MAAM;cACpBzB,KAAK,EAAEwC,SAAU;cACjBd,MAAM,EAAEhE,CAAC,IAAIwF,eAAe,CAACxF,CAAC;YAAE,CAChC,CAAC,eAEF5B,sDAAA,CAAC+B,gEAAa;cACbsD,SAAS,EAAC,uBAAuB;cACjCM,aAAa,EAAC,MAAM;cACpBlE,KAAK,EAAC,OAAO;cACbyC,KAAK,EAAE0C,cAAe;cACtBpB,QAAQ,EAAE5D,CAAC,IAAIyF,oBAAoB,CAACzF,CAAC,CAAE;cACvC6D,OAAO,EAAE,CACR;gBAAEvB,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAa,CAAC,EACpC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAS,CAAC,EAChC;gBAAEyC,KAAK,EAAE,IAAI;gBAAEzC,KAAK,EAAE;cAAe,CAAC,CACrC;cACFiE,uBAAuB;YAAA,CACvB,CAAC;UAAA,CACG,CAAC;QAAA,CACE,CAAC,eAEXxF,uDAAA;UAAAoB,QAAA,gBACCtB,sDAAA,CAACiC,yDAAM;YAAC4D,OAAO,EAAC,WAAW;YAAClE,OAAO,EAAE+B,YAAa;YAAApC,QAAA,EAAC;UAEnD,CAAQ,CAAC,eAETtB,sDAAA,CAACiC,yDAAM;YAAC4D,OAAO,EAAC,SAAS;YAACC,IAAI,EAAC,QAAQ;YAAAxE,QAAA,EAAC;UAExC,CAAQ,CAAC;QAAA,CACJ,CAAC;MAAA,CACF,CAAC;IAAA,CACD;EACP,CACA,CAAC;AAEL;;;;;;;;;;;;AC9VA;;;;;;;;;;;;;;;;;;;;;;ACAA;AACoD;AACY;;AAEhE;AAC8C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACL9C;AACyD;AACiB;AACgB;;AAE1F;AAC6D;AAClC;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAQA,SAASoG,OAAOA,CAACpH,KAAK,EAAE;EACvB,MAAM,CAACuH,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGxI,4DAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAAC4G,aAAa,EAAE6B,gBAAgB,CAAC,GAAGzI,4DAAQ,CAAC,CAAC,CAAC,CAAC;EAEtD,MAAM;IAAEqB,OAAO;IAAEqH,KAAK;IAAE/B,QAAQ;IAAEgC;EAAW,CAAC,GAAG3H,KAAK;EAEtDjB,6DAAS,CAAC,MAAM;IACf0I,gBAAgB,CAACzH,KAAK,CAAC4F,aAAa,CAAC;EACtC,CAAC,EAAE,CAAC5F,KAAK,CAAC4F,aAAa,CAAC,CAAC;;EAEzB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASgC,WAAWA,CAACjH,KAAK,EAAE+G,KAAK,EAAE;IAClCC,UAAU,CAAChH,KAAK,EAAE,QAAQ,EAAEN,OAAO,EAAEqH,KAAK,EAAE,EAAE,CAAC;EAChD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASG,WAAWA,CAAClH,KAAK,EAAE+G,KAAK,EAAE;IAClCC,UAAU,CAAChH,KAAK,EAAE,QAAQ,EAAEN,OAAO,EAAEqH,KAAK,EAAE,EAAE,CAAC;EAChD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASI,iBAAiBA,CAACnH,KAAK,EAAEuG,oBAAoB,EAAE;IACvD,IAAIK,kBAAkB,EAAE;MACvBC,qBAAqB,CAAC,KAAK,CAAC;MAC5BG,UAAU,CAAChH,KAAK,EAAE,YAAY,EAAEN,OAAO,EAAEqH,KAAK,EAAER,oBAAoB,CAAC;IACtE,CAAC,MAAM;MACNvG,KAAK,CAACI,cAAc,CAAC,CAAC;MACtByG,qBAAqB,CAAC,IAAI,CAAC;IAC5B;EACD;EAEA,oBACC5H,uDAAA,CAAAE,uDAAA;IAAAkB,QAAA,gBACCtB,sDAAA,CAACT,+DAAYA;IACZ;IAAA;MACAgC,IAAI,EAAE7B,wDAAa;MACnB8B,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAEwE,QAAS;MAAA3E,QAAA,EAEfA,CAAC;QAAEI;MAAQ,CAAC,kBACZxB,uDAAA,CAAAE,uDAAA;QAAAkB,QAAA,gBACCtB,sDAAA,CAACR,4DAAS;UAAA8B,QAAA,eACTtB,sDAAA,CAACP,2DAAQ;YAAC8B,IAAI,EAAE5B,wDAAS;YAACgC,OAAO,EAAEyG,iBAAkB;YAAA9G,QAAA,EAAC;UAEtD,CAAU;QAAC,CACD,CAAC,eACZpB,uDAAA,CAACV,4DAAS;UAAA8B,QAAA,gBACTtB,sDAAA,CAACP,2DAAQ;YAAC8B,IAAI,EAAEoG,wDAAe;YAAChG,OAAO,EAAEC,CAAC,IAAIsG,WAAW,CAACtG,CAAC,EAAEoG,KAAK,CAAE;YAAA1G,QAAA,EAAC;UAErE,CAAU,CAAC,eACXtB,sDAAA,CAACP,2DAAQ;YAAC8B,IAAI,EAAEqG,wDAAe;YAACjG,OAAO,EAAEC,CAAC,IAAIuG,WAAW,CAACvG,CAAC,EAAEoG,KAAK,CAAE;YAAA1G,QAAA,EAAC;UAErE,CAAU,CAAC;QAAA,CACD,CAAC;MAAA,CACX;IACF,CACY,CAAC,EAEduG,kBAAkB,iBAClB7H,sDAAA,CAAC+F,qEAAkB;MAClBiC,KAAK,EAAEA,KAAM;MACb/B,QAAQ,EAAEA,QAAS;MACnBC,aAAa,EAAEA,aAAc;MAC7BF,aAAa,EAAEoC;IAAkB,CACb,CACrB;EAAA,CACA,CAAC;AAEL;;;;;;;;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAG;EACbC,YAAY,EAAE,cAAc;EAC5BC,aAAa,EAAE,eAAe;EAC9BC,UAAU,EAAE,YAAY;EACxBC,YAAY,EAAE,cAAc;EAC5BC,aAAa,EAAE,eAAe;EAC9BC,UAAU,EAAE,YAAY;EACxBC,eAAe,EAAE,iBAAiB;EAClCC,iBAAiB,EAAE,mBAAmB;EACtCC,iBAAiB,EAAE,mBAAmB;EACtCC,UAAU,EAAE,YAAY;EACxBC,aAAa,EAAE,eAAe;EAC9BC,WAAW,EAAE,aAAa;EAC1BC,eAAe,EAAE,iBAAiB;EAClCC,oBAAoB,EAAE,sBAAsB;EAC5CC,OAAO,EAAE,SAAS;EAClBC,eAAe,EAAE;AAClB,CAAC;AAED,iEAAehB,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BpB;AAC0D;AACU;;AAEpE;AACsC;;AAEtC;AACA,MAAM;EACLC,YAAY;EACZC,aAAa;EACbC,UAAU;EACVC,YAAY;EACZC,aAAa;EACbC,UAAU;EACVC,eAAe;EACfC,iBAAiB;EACjBC,iBAAiB;EACjBC,UAAU;EACVC,aAAa;EACbC,WAAW;EACXC,eAAe;EACfG;AACD,CAAC,GAAGhB,wDAAK;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASoB,eAAeA,CAACC,KAAK,EAAE;EACtCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClCD,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACA,KAAK,CAACG,QAAQ,CAAC;EAEjC,OAAO;IACN/D,IAAI,EAAEwC,YAAY;IAClB3H,OAAO,EAAE+I,KAAK,CAACA,KAAK,CAACG,QAAQ;IAC7B,GAAGH;EACJ,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,YAAYA,CAC3BD,QAAQ,EACRE,eAAe,EACfC,YAAY,EACZC,OAAO,EACPC,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,IAAI,EACJC,OAAO,EACPC,KAAK,EACJ;EACDZ,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;EACtDD,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAGC,QAAQ,CAAC;EAChDF,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGG,eAAe,CAAC;EAC7CJ,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGI,YAAY,CAAC;EAEvC,OAAO;IACNlE,IAAI,EAAEoD,eAAe;IACrBvI,OAAO,EAAEkJ,QAAQ;IACjBH,KAAK,EAAE;MACNG,QAAQ;MACRE,eAAe;MACfC,YAAY;MACZC,OAAO;MACPC,UAAU;MACVC,UAAU;MACVC,OAAO;MACPC,IAAI;MACJC,OAAO;MACPC;IACD;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,iBAAiB,GAC7BA,CAAA,KACA,OAAO;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EACzC,MAAM;IACLd,QAAQ;IACRE,eAAe;IACfE,OAAO;IACPC,UAAU;IACVC,UAAU;IACVC,OAAO;IACPC,IAAI;IACJC,OAAO;IACPC;EACD,CAAC,GAAGE,MAAM,CAACG,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC;EAC9B,MAAMC,QAAQ,GAAG;IAChB9F,KAAK,EAAEmF,UAAU;IACjBY,MAAM,EAAE;MACPC,EAAE,EAAElB,QAAQ;MACZE,eAAe,EAAEA,eAAe;MAChCiB,MAAM,EAAE,KAAK;MACbf,OAAO,EAAEA,OAAO;MAChBC,UAAU,EAAEA,UAAU;MACtBC,UAAU,EAAEA,UAAU;MACtBC,OAAO,EAAEA;IACV,CAAC;IACDC,IAAI,EAAE,CAAC,GAAGA,IAAI,CAAC;IACfC,OAAO,EAAE,CAAC,GAAGA,OAAO,CAAC;IACrBC,KAAK,EAAE,CAAC,GAAGA,KAAK;EACjB,CAAC;EAEDZ,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpCD,OAAO,CAACC,GAAG,CAACiB,QAAQ,CAAC;EAErB,IAAI;IACH,MAAMI,WAAW,GAAG,MAAMN,QAAQ,CAChCD,QAAQ,CAACnB,uDAAS,CAAC,CACnB2B,gBAAgB,CAAC,gBAAgB,EAAE,OAAO,EAAEL,QAAQ,CAAC;IAEvDH,QAAQ,CAACS,aAAa,CAACF,WAAW,CAACF,EAAE,CAAC;IAEtC,OAAOE,WAAW,CAACF,EAAE;EACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;IACfzB,OAAO,CAACC,GAAG,CACV,2CAA2C,GAC1CC,QAAQ,GACR,sBAAsB,GACtBE,eAAe,GACf,cAAc,GACdE,OACF,CAAC;EACF;AACD,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMoB,eAAe,GAC3B1K,OAAO,IACP,CAAC;EAAEgK;AAAS,CAAC,KAAK;EACjBhB,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAElC,IAAI;IACHe,QAAQ,CAACD,QAAQ,CAACnB,uDAAS,CAAC,CAAC+B,sBAAsB,CAAC,gBAAgB,EAAE,OAAO,EAAE3K,OAAO,CAAC;EACxF,CAAC,CAAC,OAAOyK,KAAK,EAAE;IACfzB,OAAO,CAACC,GAAG,CAAC,wCAAwC,GAAGjJ,OAAO,CAAC;IAC/D4K,KAAK,CAAC,mDAAmD,GAAGH,KAAK,CAAC;EACnE;AACD,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMI,iBAAiB,GAC7BA,CAAC7K,OAAO,EAAE8K,mBAAmB,GAAG,EAAE,KAClC,CAAC;EAAEhB,MAAM;EAAEE;AAAS,CAAC,KAAK;EACzB,MAAM;IACLd,QAAQ;IACRE,eAAe;IACfC,YAAY;IACZC,OAAO;IACPC,UAAU;IACVC,UAAU;IACVC,OAAO;IACPC,IAAI;IACJC,OAAO;IACPC;EACD,CAAC,GAAGE,MAAM,CAACG,QAAQ,CAACjK,OAAO,EAAE,KAAK,CAAC;;EAEnC;EACA,MAAM+K,YAAY,GAAGrB,IAAI,CAACsB,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,CAAC;;EAE3D;EACA,MAAMC,eAAe,GAAGxB,OAAO,CAACqB,MAAM,CAACI,MAAM,IAAIA,MAAM,CAACC,SAAS,KAAK,GAAG,CAAC;;EAE1E;EACA,MAAMC,aAAa,GAAG1B,KAAK,CAACoB,MAAM,CAACO,IAAI,IAAIA,IAAI,CAACL,MAAM,KAAK,GAAG,IAAIK,IAAI,CAACF,SAAS,KAAK,GAAG,CAAC;;EAEzF;EACA,MAAMG,gBAAgB,GAAGF,aAAa,CAACG,GAAG,CACzC,CAAC;IAAEvC,QAAQ;IAAEmC,SAAS;IAAEH,MAAM;IAAE1B,UAAU;IAAEC,OAAO;IAAEiC;EAAQ,CAAC,MAAM;IACnExC,QAAQ;IACRmC,SAAS;IACTH,MAAM;IACN1B,UAAU;IACVC,OAAO;IACPiC;EACD,CAAC,CACF,CAAC;EAED,MAAMC,WAAW,GAAGA,CAACb,mBAAmB,EAAEzB,YAAY,KAAK;IAC1D,IAAIyB,mBAAmB,EAAE;MACxB,OAAOA,mBAAmB;IAC3B;IACA,OAAOzB,YAAY;EACpB,CAAC;EAED,MAAMuC,YAAY,GAAG;IACpBxB,EAAE,EAAEpK,OAAO;IACXoE,KAAK,EAAEmF,UAAU;IACjBY,MAAM,EAAE;MACPC,EAAE,EAAElB,QAAQ;MACZE,eAAe,EAAEA,eAAe;MAChCiB,MAAM,EAAEsB,WAAW,CAACb,mBAAmB,EAAEzB,YAAY,CAAC;MACtDC,OAAO,EAAEA,OAAO;MAChBC,UAAU,EAAEA,UAAU;MACtBC,UAAU,EAAEA,UAAU;MACtBC,OAAO,EAAEA;IACV,CAAC;IACDC,IAAI,EAAE,CAAC,GAAGqB,YAAY,CAAC;IACvBpB,OAAO,EAAE,CAAC,GAAGwB,eAAe,CAAC;IAC7BvB,KAAK,EAAE,CAAC,GAAG4B,gBAAgB;EAC5B,CAAC;EAEDxC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpCD,OAAO,CAACC,GAAG,CAAC2C,YAAY,CAAC;;EAEzB;AACF;AACA;AACA;EACE,IAAI;IACH5B,QAAQ,CACND,QAAQ,CAACnB,uDAAS,CAAC,CACnBiD,gBAAgB,CAAC,gBAAgB,EAAE,OAAO,EAAE3C,QAAQ,EAAE0C,YAAY,CAAC;EACtE,CAAC,CAAC,OAAOnB,KAAK,EAAE;IACfzB,OAAO,CAACC,GAAG,CAAC,0CAA0C,GAAGjJ,OAAO,CAAC;IACjE4K,KAAK,CAAC,qDAAqD,GAAGH,KAAK,CAAC;EACrE;AACD,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMqB,iBAAiB,GAC7B9L,OAAO,IACP,OAAO;EAAE8J,MAAM;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EACzChB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAE1C,IAAI;IACH,MAAM8C,kBAAkB,GAAG,MAAM/B,QAAQ,CACvCD,QAAQ,CAACnB,uDAAS,CAAC,CACnBoD,kBAAkB,CAAC,gBAAgB,EAAE,OAAO,EAAEhM,OAAO,CAAC;IAExD+J,QAAQ,CAAC;MACR5E,IAAI,EAAE2C,YAAY;MAClB9H;IACD,CAAC,CAAC;EACH,CAAC,CAAC,OAAOyK,KAAK,EAAE;IACfzB,OAAO,CAACC,GAAG,CAAC,0CAA0C,GAAGjJ,OAAO,CAAC;IACjE4K,KAAK,CAAC,0CAA0C,GAAGH,KAAK,CAAC;EAC1D;EACAzB,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;AACtD,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMgD,oBAAoB,GAChCC,aAAa,IACb,CAAC;EAAEnC;AAAS,CAAC,KAAK;EACjBf,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;EAC7CkD,MAAM,CAACC,IAAI,CAACF,aAAa,CAAC,CAACG,OAAO,CAACC,GAAG,IAAI;IACzC,MAAMC,cAAc,GAAGL,aAAa,CAACI,GAAG,CAAC,CAACpD,QAAQ;IAClDF,OAAO,CAACC,GAAG,CAACsD,cAAc,CAAC;IAC3BxC,QAAQ,CAAC+B,iBAAiB,CAACI,aAAa,CAACI,GAAG,CAAC,CAACpD,QAAQ,CAAC;EACxD,CAAC,CAAC;AACH,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMsD,sBAAsB,GAClCC,eAAe,IACf,CAAC;EAAE1C,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAC3BhB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;EAC/CkD,MAAM,CAACC,IAAI,CAACK,eAAe,CAAC,CAACJ,OAAO,CAACC,GAAG,IAAI;IAC3C,MAAMI,qBAAqB,GAAGD,eAAe,CAACH,GAAG,CAAC,CAACK,iBAAiB;IACpE,MAAMC,WAAW,GAAGH,eAAe,CAACH,GAAG,CAAC,CAACO,YAAY;IACrD,MAAMC,UAAU,GAAG9C,QAAQ,CAACF,MAAM,CAACjB,0DAAgB,CAAC,CAACkE,QAAQ,CAACL,qBAAqB,CAAC;IACpF1D,OAAO,CAACC,GAAG,CAAC6D,UAAU,CAAC;IACvB,IAAIA,UAAU,EAAE;MACf/C,QAAQ,CAACiD,eAAe,CAACP,eAAe,CAACH,GAAG,CAAC,CAACpD,QAAQ,EAAE,cAAc,CAAC;MACvEa,QAAQ,CAACiD,eAAe,CAACP,eAAe,CAACH,GAAG,CAAC,CAACpD,QAAQ,EAAE,cAAc,EAAE0D,WAAW,CAAC;MACpF7C,QAAQ,CAACkD,eAAe,CAACR,eAAe,CAACH,GAAG,CAAC,CAACpD,QAAQ,EAAE,mBAAmB,CAAC;MAC5Ea,QAAQ,CAACkD,eAAe,CAACR,eAAe,CAACH,GAAG,CAAC,CAACpD,QAAQ,EAAE,cAAc,CAAC;MACvEa,QAAQ,CAACc,iBAAiB,CAAC4B,eAAe,CAACH,GAAG,CAAC,CAACpD,QAAQ,CAAC;IAC1D,CAAC,MAAM;MACNa,QAAQ,CAACiD,eAAe,CAACP,eAAe,CAACH,GAAG,CAAC,CAACpD,QAAQ,EAAE,cAAc,EAAE,SAAS,CAAC;MAClFa,QAAQ,CAACkD,eAAe,CAACR,eAAe,CAACH,GAAG,CAAC,CAACpD,QAAQ,EAAE,mBAAmB,CAAC;IAC7E;EACD,CAAC,CAAC;AACH,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMgE,SAAS,GAAGA,CAAClN,OAAO,EAAEC,QAAQ,EAAEkN,SAAS,EAAEC,WAAW,KAAK;EACvE,OAAO;IACNjI,IAAI,EAAEyC,aAAa;IACnB5H,OAAO;IACPC,QAAQ;IACRkN,SAAS;IACTC;EACD,CAAC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,MAAM,GAAGA,CAACrN,OAAO,EAAEqH,KAAK,EAAEiG,MAAM,EAAEC,QAAQ,KAAK;EAC3D,OAAO;IACNpI,IAAI,EAAE0C,UAAU;IAChB7H,OAAO;IACPqH,KAAK;IACLiG,MAAM;IACNC;EACD,CAAC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,YAAY,GAAGA,CAACxN,OAAO,EAAEC,QAAQ,KAAK;EAClD,OAAO;IACNkF,IAAI,EAAE4C,aAAa;IACnB/H,OAAO;IACPC;EACD,CAAC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMwN,SAAS,GAAGA,CAACzN,OAAO,EAAEqH,KAAK,KAAK;EAC5C,OAAO;IACNlC,IAAI,EAAE6C,UAAU;IAChBhI,OAAO;IACPqH;EACD,CAAC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMmD,aAAa,GAAGxK,OAAO,IAAI;EACvC,OAAO;IACNmF,IAAI,EAAE8C,eAAe;IACrBjI,OAAO,EAAE,GAAG;IACZ0N,UAAU,EAAEC,MAAM,CAAC3N,OAAO;EAC3B,CAAC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMgN,eAAe,GAAGA,CAAChN,OAAO,EAAE4N,SAAS,EAAErK,KAAK,KAAK;EAC7DyF,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxC,OAAO;IACN9D,IAAI,EAAE+C,iBAAiB;IACvBlI,OAAO,EAAEA,OAAO;IAChB4N,SAAS;IACTrK;EACD,CAAC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM0J,eAAe,GAAGA,CAACjN,OAAO,EAAE4N,SAAS,KAAK;EACtD5E,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxC,OAAO;IACN9D,IAAI,EAAEgD,iBAAiB;IACvBnI,OAAO,EAAEA,OAAO;IAChB4N;EACD,CAAC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,SAAS,GAAGA,CAAC7N,OAAO,EAAEqH,KAAK,EAAEuG,SAAS,EAAErK,KAAK,KAAK;EAC9DyF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClC,OAAO;IACN9D,IAAI,EAAEiD,UAAU;IAChBpI,OAAO;IACPqH,KAAK;IACLuG,SAAS;IACTrK;EACD,CAAC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMuK,YAAY,GAAGA,CAAC9N,OAAO,EAAEC,QAAQ,EAAE2N,SAAS,EAAErK,KAAK,KAAK;EACpEyF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACrC,OAAO;IACN9D,IAAI,EAAEkD,aAAa;IACnBrI,OAAO;IACPC,QAAQ;IACR2N,SAAS;IACTrK;EACD,CAAC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMwK,UAAU,GAAGA,CAAC/N,OAAO,EAAEgO,MAAM,EAAEJ,SAAS,EAAErK,KAAK,KAAK;EAChEyF,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACnC,OAAO;IACN9D,IAAI,EAAEmD,WAAW;IACjBtI,OAAO;IACPgO,MAAM;IACNJ,SAAS;IACTrK;EACD,CAAC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM0K,iBAAiB,GAC7BA,CAACjO,OAAO,EAAEkO,SAAS,EAAEC,YAAY,EAAEC,UAAU,KAC7C,OAAO;EAAErE;AAAS,CAAC,KAAK;EACvBf,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAE9B,MAAMc,QAAQ,CAAC;IACd5E,IAAI,EAAEuD,eAAe;IACrB1I,OAAO,EAAEA,OAAO;IAChB0J,IAAI,EAAEwE,SAAS;IACfvE,OAAO,EAAEwE,YAAY;IACrBvE,KAAK,EAAEwE;EACR,CAAC,CAAC;AACH,CAAC;;;;;;;;;;;;;;AC1jBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAG,sBAAsB;AACzC,iEAAeA,UAAU;;;;;;;;;;;;;;;;;;;;;ACTzB;AAC6D;;AAE7D;AACgC;AACS;AACJ;AACI;AACJ;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM1F,KAAK,GAAG2F,iEAAgB,CAACD,kDAAU,EAAE;EACjDG,OAAO;EACPC,SAAS;EACTC,OAAO;EACPC,SAASA,yCAAAA;AACV,CAAC,CAAC;AAEFJ,yDAAQ,CAAC5F,KAAK,CAAC;;;;;;;;;;;;;;;;ACxBf;AACmC;AAC+B;AAElE,MAAM;EACLhB,YAAY;EACZC,aAAa;EACbC,UAAU;EACVC,YAAY;EACZC,aAAa;EACbC,UAAU;EACVC,eAAe;EACfC,iBAAiB;EACjBC,iBAAiB;EACjBC,UAAU;EACVC,aAAa;EACbC,WAAW;EACXC,eAAe;EACfG;AACD,CAAC,GAAGhB,qDAAK;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMqB,KAAK,GAAGA,CACbgG,KAAK,GAAG;EACPhG,KAAK,EAAE,CAAC;AACT,CAAC,EACDiG,MAAM,KACF;EACJhG,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAGgG,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,CAAC;EAC7D/F,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAG+F,MAAM,CAAC7J,IAAI,CAAC;EAElD,QAAQ6J,MAAM,CAAC7J,IAAI;IAClB,KAAKwC,YAAY;MAChB,OAAO;QACNoB,KAAK,EAAE;UACN,GAAGiG,MAAM,CAACjG;QACX;MACD,CAAC;IAEF,KAAKd,eAAe;MACnBe,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC,MAAMkG,eAAe,GAAG;QAAE,GAAGJ;MAAM,CAAC;MACpC,MAAMK,sBAAsB,GAAG,EAAE;MACjC,MAAMC,yBAAyB,GAAG,EAAE;MACpC,MAAMC,uBAAuB,GAAG,EAAE;MAElCtG,OAAO,CAACC,GAAG,CAACkG,eAAe,CAACzF,IAAI,CAAC;MACjCyF,eAAe,CAACzF,IAAI,CAAC2C,OAAO,CAACpB,GAAG,IAAI;QACnCjC,OAAO,CAACC,GAAG,CAACgC,GAAG,CAAC;QAChB,MAAMsE,eAAe,GAAG;UACvB,GAAGtE,GAAG;UACN/B,QAAQ,EAAE8F,MAAM,CAACtB;QAClB,CAAC;QACD0B,sBAAsB,CAACI,IAAI,CAACD,eAAe,CAAC;MAC7C,CAAC,CAAC;MAEFJ,eAAe,CAACxF,OAAO,CAAC0C,OAAO,CAACjB,MAAM,IAAI;QACzC,MAAMqE,kBAAkB,GAAG;UAC1B,GAAGrE,MAAM;UACTlC,QAAQ,EAAE8F,MAAM,CAACtB;QAClB,CAAC;QACD2B,yBAAyB,CAACG,IAAI,CAACC,kBAAkB,CAAC;MACnD,CAAC,CAAC;MAEFN,eAAe,CAACvF,KAAK,CAACyC,OAAO,CAACd,IAAI,IAAI;QACrC,MAAMmE,gBAAgB,GAAG;UACxB,GAAGnE,IAAI;UACPrC,QAAQ,EAAE8F,MAAM,CAACtB;QAClB,CAAC;QACD4B,uBAAuB,CAACE,IAAI,CAACE,gBAAgB,CAAC;MAC/C,CAAC,CAAC;MAEF,MAAMC,cAAc,GAAG;QACtB,GAAGZ,KAAK;QACR7F,QAAQ,EAAE8F,MAAM,CAACtB,UAAU;QAC3BhE,IAAI,EAAE,CAAC,GAAG0F,sBAAsB,CAAC;QACjCzF,OAAO,EAAE,CAAC,GAAG0F,yBAAyB,CAAC;QACvCzF,KAAK,EAAE,CAAC,GAAG0F,uBAAuB;MACnC,CAAC;MACDtG,OAAO,CAACC,GAAG,CAAC0G,cAAc,CAAC;MAE3B,OAAO;QACN5G,KAAK,EAAE4G;MACR,CAAC;IAEF,KAAKzH,iBAAiB;MACrBc,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAE3C,MAAM2C,YAAY,GAAG;QACpB,GAAGmD,KAAK;QACR,CAACC,MAAM,CAACpB,SAAS,GAAGoB,MAAM,CAACzL;MAC5B,CAAC;MACDyF,OAAO,CAACC,GAAG,CAAC2C,YAAY,CAAC;MAEzB,OAAO;QACN7C,KAAK,EAAE6C;MACR,CAAC;IAEF,KAAKzD,iBAAiB;MACrB,MAAMyH,gBAAgB,GAAG;QAAE,GAAGb;MAAM,CAAC;MACrC;MACA,OAAOa,gBAAgB,CAACZ,MAAM,CAACpB,SAAS,CAAC;MAEzC,OAAO;QACN7E,KAAK,EAAE6G;MACR,CAAC;IAEF,KAAKhI,aAAa;MACjBoB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC,MAAM4G,iBAAiB,GAAG;QAAE,GAAGd;MAAM,CAAC;;MAEtC;AACH;AACA;MACG,MAAMe,6BAA6B,GAAG,EAAE;MACxCD,iBAAiB,CAAClG,OAAO,CAAC0C,OAAO,CAACjB,MAAM,IAAI;QAC3C,IAAIxH,MAAM,CAACwH,MAAM,CAACC,SAAS,CAAC,GAAGzH,MAAM,CAACoL,MAAM,CAAC/O,QAAQ,CAAC,EAAE;UACvD6P,6BAA6B,CAACN,IAAI,CAACpE,MAAM,CAAC;QAC3C,CAAC,MAAM;UACN,MAAM2E,sBAAsB,GAAG;YAC9B7G,QAAQ,EAAEkC,MAAM,CAAClC,QAAQ;YACzBmC,SAAS,EAAEsC,MAAM,CAAC/J,MAAM,CAACwH,MAAM,CAACC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC/C2E,WAAW,EAAE5E,MAAM,CAAC4E,WAAW;YAC/BxG,UAAU,EAAE4B,MAAM,CAAC5B,UAAU;YAC7BC,OAAO,EAAE2B,MAAM,CAAC3B;UACjB,CAAC;UACDqG,6BAA6B,CAACN,IAAI,CAACO,sBAAsB,CAAC;QAC3D;MACD,CAAC,CAAC;MACFD,6BAA6B,CAACN,IAAI,CAACR,MAAM,CAAC7B,SAAS,CAAC;MACpD,MAAM8C,0BAA0B,GAAGnB,iDAAS,CAAC,SAAS,EAAEgB,6BAA6B,CAAC;;MAEtF;AACH;AACA;MACG,MAAMI,2BAA2B,GAAG,EAAE;MACtCL,iBAAiB,CAACjG,KAAK,CAACyC,OAAO,CAACd,IAAI,IAAI;QACvC,IAAIA,IAAI,CAACF,SAAS,GAAG2D,MAAM,CAAC/O,QAAQ,EAAE;UACrCiQ,2BAA2B,CAACV,IAAI,CAACjE,IAAI,CAAC;QACvC,CAAC,MAAM;UACN,MAAM4E,wBAAwB,GAAGxC,MAAM,CAAC/J,MAAM,CAAC2H,IAAI,CAACF,SAAS,CAAC,GAAG,CAAC,CAAC;UACnE,MAAM+E,yBAAyB,GAAGxB,sDAAc,CAACuB,wBAAwB,CAAC;UAC1E,MAAME,wBAAwB,GAC7BzM,MAAM,CAAC2H,IAAI,CAACL,MAAM,CAAC,IAAI,CAAC,GAAGkF,yBAAyB,GAAG7E,IAAI,CAACG,OAAO;UACpE,MAAM4E,oBAAoB,GAAG;YAC5BpH,QAAQ,EAAEqC,IAAI,CAACrC,QAAQ;YACvBmC,SAAS,EAAE8E,wBAAwB;YACnCjF,MAAM,EAAEK,IAAI,CAACL,MAAM;YACnBqF,OAAO,EAAEH,yBAAyB,GAAG7E,IAAI,CAACL,MAAM;YAChD1B,UAAU,EAAE+B,IAAI,CAAC/B,UAAU;YAC3BC,OAAO,EAAE8B,IAAI,CAAC9B,OAAO;YACrBiC,OAAO,EAAE2E;UACV,CAAC;UACDH,2BAA2B,CAACV,IAAI,CAACc,oBAAoB,CAAC;QACvD;MACD,CAAC,CAAC;MAEF,MAAME,8BAA8B,GAAG,CACtC,GAAGN,2BAA2B,EAC9B,GAAGlB,MAAM,CAAC5B,WAAW,CACrB;MACD,MAAMqD,wBAAwB,GAAG3B,iDAAS,CAAC,OAAO,EAAE0B,8BAA8B,CAAC;MAEnF,MAAME,mCAAmC,GAAG;QAC3C,GAAGb,iBAAiB;QACpBnG,IAAI,EAAE,CAAC,GAAGmG,iBAAiB,CAACnG,IAAI,CAAC;QACjCC,OAAO,EAAE,CAAC,GAAGsG,0BAA0B,CAAC;QACxCrG,KAAK,EAAE,CAAC,GAAG6G,wBAAwB;MACpC,CAAC;MAEDzH,OAAO,CAACC,GAAG,CAACyH,mCAAmC,CAAC;MAEhD,OAAO;QACN3H,KAAK,EAAE2H;MACR,CAAC;IAEF,KAAK7I,UAAU;MACdmB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,MAAM0H,cAAc,GAAG;QAAE,GAAG5B;MAAM,CAAC;MACnC/F,OAAO,CAACC,GAAG,CAAC0H,cAAc,CAAC;;MAE3B;AACH;AACA;MACG,MAAMC,uBAAuB,GAAG,EAAE;MAClCD,cAAc,CAACjH,IAAI,CAAC2C,OAAO,CAACpB,GAAG,IAAI;QAClC,IAAIrH,MAAM,CAACqH,GAAG,CAACC,MAAM,CAAC,GAAGtH,MAAM,CAACoL,MAAM,CAAC3H,KAAK,CAAC,EAAE;UAC9CuJ,uBAAuB,CAACpB,IAAI,CAACvE,GAAG,CAAC;QAClC,CAAC,MAAM;UACN,MAAM4F,gBAAgB,GAAG;YACxB3H,QAAQ,EAAE+B,GAAG,CAAC/B,QAAQ;YACtBgC,MAAM,EAAEyC,MAAM,CAAC/J,MAAM,CAACqH,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtC1B,UAAU,EAAEyB,GAAG,CAACzB,UAAU;YAC1BC,OAAO,EAAEwB,GAAG,CAACxB;UACd,CAAC;UACDmH,uBAAuB,CAACpB,IAAI,CAACqB,gBAAgB,CAAC;QAC/C;MACD,CAAC,CAAC;MACFD,uBAAuB,CAACpB,IAAI,CAACR,MAAM,CAAC1B,MAAM,CAAC;MAC3CtE,OAAO,CAACC,GAAG,CAAC2H,uBAAuB,CAAC;MAEpC,MAAME,UAAU,GAAGhC,iDAAS,CAAC,MAAM,EAAE8B,uBAAuB,CAAC;MAC7D5H,OAAO,CAACC,GAAG,CAAC6H,UAAU,CAAC;;MAEvB;AACH;AACA;MACG,MAAMC,wBAAwB,GAAG,EAAE;MACnCJ,cAAc,CAAC/G,KAAK,CAACyC,OAAO,CAACd,IAAI,IAAI;QACpCvC,OAAO,CAACC,GAAG,CAACsC,IAAI,CAAC;QACjB,IAAI3H,MAAM,CAAC2H,IAAI,CAACL,MAAM,CAAC,GAAGtH,MAAM,CAACoL,MAAM,CAAC3H,KAAK,CAAC,EAAE;UAC/C0J,wBAAwB,CAACvB,IAAI,CAACjE,IAAI,CAAC;QACpC,CAAC,MAAM;UACN,MAAMyF,kBAAkB,GAAGrD,MAAM,CAAC/J,MAAM,CAAC2H,IAAI,CAACL,MAAM,CAAC,GAAG,CAAC,CAAC;UAC1D,MAAM+F,sBAAsB,GAC3B1F,IAAI,CAACF,SAAS,IAAI,GAAG,GAAG,GAAG,GAAGuD,sDAAc,CAACrD,IAAI,CAACF,SAAS,CAAC;UAC7D,MAAM6F,qBAAqB,GAC1BtN,MAAM,CAAC2H,IAAI,CAACF,SAAS,CAAC,IAAI,CAAC,GAAG2F,kBAAkB,GAAGzF,IAAI,CAACG,OAAO;UAChE,MAAMyF,iBAAiB,GAAG;YACzBjI,QAAQ,EAAEqC,IAAI,CAACrC,QAAQ;YACvBmC,SAAS,EAAEE,IAAI,CAACF,SAAS;YACzBH,MAAM,EAAE8F,kBAAkB;YAC1BT,OAAO,EAAEU,sBAAsB,GAAGD,kBAAkB;YACpDxH,UAAU,EAAE+B,IAAI,CAAC/B,UAAU;YAC3BC,OAAO,EAAE8B,IAAI,CAAC9B,OAAO;YACrBiC,OAAO,EAAEwF;UACV,CAAC;UACDH,wBAAwB,CAACvB,IAAI,CAAC2B,iBAAiB,CAAC;QACjD;MACD,CAAC,CAAC;MAEF,MAAMC,cAAc,GAAG,CAAC,GAAGL,wBAAwB,EAAE,GAAG/B,MAAM,CAACzB,QAAQ,CAAC;MACxE,MAAM8D,qBAAqB,GAAGvC,iDAAS,CAAC,OAAO,EAAEsC,cAAc,CAAC;MAEhE,MAAME,6BAA6B,GAAG;QACrC,GAAGX,cAAc;QACjBjH,IAAI,EAAE,CAAC,GAAGoH,UAAU,CAAC;QACrBnH,OAAO,EAAE,CAAC,GAAGgH,cAAc,CAAChH,OAAO,CAAC;QACpCC,KAAK,EAAE,CAAC,GAAGyH,qBAAqB;MACjC,CAAC;MAED,OAAO;QACNtI,KAAK,EAAEuI;MACR,CAAC;IAEF,KAAKvJ,aAAa;MACjBiB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC,MAAMsI,iBAAiB,GAAG;QAAE,GAAGxC;MAAM,CAAC;;MAEtC;AACH;AACA;MACG,MAAMyC,6BAA6B,GAAG,EAAE;MACxCD,iBAAiB,CAAC5H,OAAO,CAAC0C,OAAO,CAACjB,MAAM,IAAI;QAC3C,IAAIxH,MAAM,CAACwH,MAAM,CAACC,SAAS,CAAC,GAAGzH,MAAM,CAACoL,MAAM,CAAC/O,QAAQ,CAAC,EAAE;UACvDuR,6BAA6B,CAAChC,IAAI,CAACpE,MAAM,CAAC;QAC3C,CAAC,MAAM,IAAIxH,MAAM,CAACwH,MAAM,CAACC,SAAS,CAAC,GAAGzH,MAAM,CAACoL,MAAM,CAAC/O,QAAQ,CAAC,EAAE;UAC9D,MAAMwR,sBAAsB,GAAG;YAC9BvI,QAAQ,EAAEkC,MAAM,CAAClC,QAAQ;YACzBmC,SAAS,EAAEsC,MAAM,CAAC/J,MAAM,CAACwH,MAAM,CAACC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC/C2E,WAAW,EAAE5E,MAAM,CAAC4E,WAAW;YAC/BxG,UAAU,EAAE4B,MAAM,CAAC5B,UAAU;YAC7BC,OAAO,EAAE2B,MAAM,CAAC3B;UACjB,CAAC;UACD+H,6BAA6B,CAAChC,IAAI,CAACiC,sBAAsB,CAAC;QAC3D;MACD,CAAC,CAAC;;MAEF;AACH;AACA;MACG,MAAMC,2BAA2B,GAAG,EAAE;MACtCH,iBAAiB,CAAC3H,KAAK,CAACyC,OAAO,CAACd,IAAI,IAAI;QACvC,IAAI3H,MAAM,CAAC2H,IAAI,CAACF,SAAS,CAAC,GAAGzH,MAAM,CAACoL,MAAM,CAAC/O,QAAQ,CAAC,EAAE;UACrDyR,2BAA2B,CAAClC,IAAI,CAACjE,IAAI,CAAC;QACvC,CAAC,MAAM,IAAI3H,MAAM,CAAC2H,IAAI,CAACF,SAAS,CAAC,GAAGzH,MAAM,CAACoL,MAAM,CAAC/O,QAAQ,CAAC,EAAE;UAC5D,MAAM0R,wBAAwB,GAAGhE,MAAM,CAAC/J,MAAM,CAAC2H,IAAI,CAACF,SAAS,CAAC,GAAG,CAAC,CAAC;UACnE,MAAMuG,yBAAyB,GAAGhD,sDAAc,CAAC+C,wBAAwB,CAAC;UAC1E,MAAME,wBAAwB,GAC7BjO,MAAM,CAAC2H,IAAI,CAACL,MAAM,CAAC,IAAI,CAAC,GAAG0G,yBAAyB,GAAGrG,IAAI,CAACG,OAAO;UACpE,MAAMoG,oBAAoB,GAAG;YAC5B5I,QAAQ,EAAEqC,IAAI,CAACrC,QAAQ;YACvBmC,SAAS,EAAEsG,wBAAwB;YACnCzG,MAAM,EAAEK,IAAI,CAACL,MAAM;YACnBqF,OAAO,EAAEqB,yBAAyB,GAAGrG,IAAI,CAACL,MAAM;YAChD1B,UAAU,EAAE+B,IAAI,CAAC/B,UAAU;YAC3BC,OAAO,EAAE8B,IAAI,CAAC9B,OAAO;YACrBiC,OAAO,EAAEmG;UACV,CAAC;UACDH,2BAA2B,CAAClC,IAAI,CAACsC,oBAAoB,CAAC;QACvD;MACD,CAAC,CAAC;MAEF,MAAMC,mCAAmC,GAAG;QAC3C,GAAGR,iBAAiB;QACpB7H,IAAI,EAAE,CAAC,GAAG6H,iBAAiB,CAAC7H,IAAI,CAAC;QACjCC,OAAO,EAAE,CAAC,GAAG6H,6BAA6B,CAAC;QAC3C5H,KAAK,EAAE,CAAC,GAAG8H,2BAA2B;MACvC,CAAC;MAED1I,OAAO,CAACC,GAAG,CAAC8I,mCAAmC,CAAC;MAEhD,OAAO;QACNhJ,KAAK,EAAEgJ;MACR,CAAC;IAEF,KAAK/J,UAAU;MACdgB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,MAAM+I,cAAc,GAAG;QAAE,GAAGjD;MAAM,CAAC;;MAEnC;AACH;AACA;MACG,MAAMkD,uBAAuB,GAAG,EAAE;MAClCjJ,OAAO,CAACC,GAAG,CAAC+I,cAAc,CAAC;MAC3BA,cAAc,CAACtI,IAAI,CAAC2C,OAAO,CAACpB,GAAG,IAAI;QAClC,IAAIrH,MAAM,CAACqH,GAAG,CAACC,MAAM,CAAC,GAAGtH,MAAM,CAACoL,MAAM,CAAC3H,KAAK,CAAC,EAAE;UAC9C4K,uBAAuB,CAACzC,IAAI,CAACvE,GAAG,CAAC;QAClC,CAAC,MAAM,IAAIrH,MAAM,CAACqH,GAAG,CAACC,MAAM,CAAC,GAAGtH,MAAM,CAACoL,MAAM,CAAC3H,KAAK,CAAC,EAAE;UACrD,MAAM6K,gBAAgB,GAAG;YACxBhJ,QAAQ,EAAE+B,GAAG,CAAC/B,QAAQ;YACtBgC,MAAM,EAAEyC,MAAM,CAAC/J,MAAM,CAACqH,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtC1B,UAAU,EAAEyB,GAAG,CAACzB,UAAU;YAC1BC,OAAO,EAAEwB,GAAG,CAACxB;UACd,CAAC;UACDwI,uBAAuB,CAACzC,IAAI,CAAC0C,gBAAgB,CAAC;QAC/C;MACD,CAAC,CAAC;MACF;MACA;;MAEA;AACH;AACA;MACG,MAAMC,wBAAwB,GAAG,EAAE;MACnCnJ,OAAO,CAACC,GAAG,CAAC+I,cAAc,CAACpI,KAAK,CAAC;MACjCoI,cAAc,CAACpI,KAAK,CAACyC,OAAO,CAACd,IAAI,IAAI;QACpC,IAAI3H,MAAM,CAAC2H,IAAI,CAACL,MAAM,CAAC,GAAGtH,MAAM,CAACoL,MAAM,CAAC3H,KAAK,CAAC,EAAE;UAC/C8K,wBAAwB,CAAC3C,IAAI,CAACjE,IAAI,CAAC;QACpC,CAAC,MAAM,IAAI3H,MAAM,CAAC2H,IAAI,CAACL,MAAM,CAAC,GAAGtH,MAAM,CAACoL,MAAM,CAAC3H,KAAK,CAAC,EAAE;UACtD,MAAM+K,kBAAkB,GAAGzE,MAAM,CAAC/J,MAAM,CAAC2H,IAAI,CAACL,MAAM,CAAC,GAAG,CAAC,CAAC;UAC1D,MAAMmH,sBAAsB,GAC3B9G,IAAI,CAACF,SAAS,IAAI,GAAG,GAAG,GAAG,GAAGuD,sDAAc,CAACrD,IAAI,CAACF,SAAS,CAAC;UAC7D,MAAMiH,qBAAqB,GAC1B1O,MAAM,CAAC2H,IAAI,CAACF,SAAS,CAAC,IAAI,CAAC,GAAG+G,kBAAkB,GAAG7G,IAAI,CAACG,OAAO;UAChE,MAAM6G,iBAAiB,GAAG;YACzBrJ,QAAQ,EAAEqC,IAAI,CAACrC,QAAQ;YACvBmC,SAAS,EAAEE,IAAI,CAACF,SAAS;YACzBH,MAAM,EAAEkH,kBAAkB;YAC1B7B,OAAO,EAAE8B,sBAAsB,GAAG9G,IAAI,CAACL,MAAM;YAC7C1B,UAAU,EAAE+B,IAAI,CAAC/B,UAAU;YAC3BC,OAAO,EAAE8B,IAAI,CAAC9B,OAAO;YACrBiC,OAAO,EAAE4G;UACV,CAAC;UACDH,wBAAwB,CAAC3C,IAAI,CAAC+C,iBAAiB,CAAC;QACjD;MACD,CAAC,CAAC;;MAEF;MACA;;MAEA,MAAMC,6BAA6B,GAAG;QACrC,GAAGR,cAAc;QACjBtI,IAAI,EAAE,CAAC,GAAGuI,uBAAuB,CAAC;QAClCtI,OAAO,EAAE,CAAC,GAAGqI,cAAc,CAACrI,OAAO,CAAC;QACpCC,KAAK,EAAE,CAAC,GAAGuI,wBAAwB;MACpC,CAAC;MAEDnJ,OAAO,CAACC,GAAG,CAACuJ,6BAA6B,CAAC;MAE1C,OAAO;QACNzJ,KAAK,EAAEyJ;MACR,CAAC;IAEF,KAAKpK,UAAU;MACdY,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MAEpC,IAAIwJ,0BAA0B,GAAG,IAAI,GAAGzD,MAAM,CAACzL,KAAK,GAAG,GAAG;MAE1D,IAAIyL,MAAM,CAACpB,SAAS,KAAK,YAAY,EAAE;QACtC6E,0BAA0B,GAAGxD,IAAI,CAACC,SAAS,CAACF,MAAM,CAACzL,KAAK,CAAC;MAC1D;MACAyF,OAAO,CAACC,GAAG,CAAC,CAAC;MAEb,MAAMyJ,YAAY,GAAG;QAAE,GAAG3D;MAAM,CAAC;MACjC,MAAM4D,cAAc,GAAG1D,IAAI,CAAC2D,KAAK,CAChC,KAAK,GAAG5D,MAAM,CAACpB,SAAS,GAAG,KAAK,GAAG6E,0BAA0B,GAAG,GACjE,CAAC;MACDzJ,OAAO,CAACC,GAAG,CAACyJ,YAAY,CAAC;MACzB1J,OAAO,CAACC,GAAG,CAACyJ,YAAY,CAAChJ,IAAI,CAAC;MAC9B,MAAMmJ,WAAW,GAAGhE,mDAAW,CAAC6D,YAAY,CAAChJ,IAAI,EAAE,QAAQ,EAAEsF,MAAM,CAAC3H,KAAK,EAAEsL,cAAc,CAAC;MAE1F3J,OAAO,CAACC,GAAG,CAAC0J,cAAc,CAAC;MAC3B3J,OAAO,CAACC,GAAG,CAAC4J,WAAW,CAAC;MAExB,MAAMC,uBAAuB,GAAG;QAC/B,GAAGJ,YAAY;QACfhJ,IAAI,EAAE,CAAC,GAAGmJ,WAAW,CAAC;QACtBlJ,OAAO,EAAE,CAAC,GAAG+I,YAAY,CAAC/I,OAAO,CAAC;QAClCC,KAAK,EAAE,CAAC,GAAG8I,YAAY,CAAC9I,KAAK;MAC9B,CAAC;MACD,OAAO;QACNb,KAAK,EAAE+J;MACR,CAAC;IAEF,KAAKzK,aAAa;MACjBW,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MAEvC,IAAI8J,6BAA6B,GAAG,IAAI,GAAG/D,MAAM,CAACzL,KAAK,GAAG,GAAG;MAE7D,IAAIyL,MAAM,CAACpB,SAAS,KAAK,YAAY,EAAE;QACtCmF,6BAA6B,GAAG9D,IAAI,CAACC,SAAS,CAACF,MAAM,CAACzL,KAAK,CAAC;MAC7D;MAEAyF,OAAO,CAACC,GAAG,CAAC8J,6BAA6B,CAAC;MAC1C,MAAMC,eAAe,GAAG;QAAE,GAAGjE;MAAM,CAAC;MACpC,MAAMkE,iBAAiB,GAAGhE,IAAI,CAAC2D,KAAK,CACnC,KAAK,GAAG5D,MAAM,CAACpB,SAAS,GAAG,KAAK,GAAGmF,6BAA6B,GAAG,GACpE,CAAC;MACD/J,OAAO,CAACC,GAAG,CAAC+J,eAAe,CAAC;MAC5BhK,OAAO,CAACC,GAAG,CAAC+J,eAAe,CAACrJ,OAAO,CAAC;MACpC,MAAMuJ,cAAc,GAAGrE,mDAAW,CACjCmE,eAAe,CAACrJ,OAAO,EACvB,WAAW,EACXqF,MAAM,CAAC/O,QAAQ,EACfgT,iBACD,CAAC;MAEDjK,OAAO,CAACC,GAAG,CAACgK,iBAAiB,CAAC;MAC9BjK,OAAO,CAACC,GAAG,CAACiK,cAAc,CAAC;MAE3B,MAAMC,0BAA0B,GAAG;QAClC,GAAGH,eAAe;QAClBtJ,IAAI,EAAE,CAAC,GAAGsJ,eAAe,CAACtJ,IAAI,CAAC;QAC/BC,OAAO,EAAE,CAAC,GAAGuJ,cAAc,CAAC;QAC5BtJ,KAAK,EAAE,CAAC,GAAGoJ,eAAe,CAACpJ,KAAK;MACjC,CAAC;MACD,OAAO;QACNb,KAAK,EAAEoK;MACR,CAAC;IAEF,KAAK7K,WAAW;MACfU,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC,MAAMmK,aAAa,GAAG;QAAE,GAAGrE;MAAM,CAAC;MAClC/F,OAAO,CAACC,GAAG,CAAC8F,KAAK,CAAC;MAClB/F,OAAO,CAACC,GAAG,CAACmK,aAAa,CAAC;MAC1B,MAAMC,eAAe,GAAGpE,IAAI,CAAC2D,KAAK,CAAC,KAAK,GAAG5D,MAAM,CAACpB,SAAS,GAAG,OAAO,GAAGoB,MAAM,CAACzL,KAAK,GAAG,IAAI,CAAC;MAC5F,MAAM+P,YAAY,GAAGzE,mDAAW,CAC/BuE,aAAa,CAACxJ,KAAK,EACnB,SAAS,EACToF,MAAM,CAAChB,MAAM,EACbqF,eACD,CAAC;MAED,MAAME,iBAAiB,GAAG;QACzB,GAAGxE,KAAK;QACRrF,IAAI,EAAE,CAAC,GAAG0J,aAAa,CAAC1J,IAAI,CAAC;QAC7BC,OAAO,EAAE,CAAC,GAAGyJ,aAAa,CAACzJ,OAAO,CAAC;QACnCC,KAAK,EAAE,CAAC,GAAG0J,YAAY;MACxB,CAAC;MACDtK,OAAO,CAACC,GAAG,CAACsK,iBAAiB,CAAC;MAC9B,OAAO;QACNxK,KAAK,EAAEwK;MACR,CAAC;IAEF,KAAK7K,eAAe;MACnBM,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC,MAAMuK,iBAAiB,GAAG;QAAE,GAAGzE;MAAM,CAAC;MAEtC,MAAM0E,mBAAmB,GAAG;QAC3B,GAAGD,iBAAiB;QACpB9J,IAAI,EAAEoF,iDAAS,CAAC,MAAM,EAAE,CAAC,GAAGE,MAAM,CAACtF,IAAI,CAAC,CAAC;QACzCC,OAAO,EAAEmF,iDAAS,CAAC,SAAS,EAAE,CAAC,GAAGE,MAAM,CAACrF,OAAO,CAAC,CAAC;QAClDC,KAAK,EAAEkF,iDAAS,CAAC,OAAO,EAAE,CAAC,GAAGE,MAAM,CAACpF,KAAK,CAAC;MAC5C,CAAC;MAEDZ,OAAO,CAACC,GAAG,CAACuK,iBAAiB,CAAC;MAC9BxK,OAAO,CAACC,GAAG,CAACwK,mBAAmB,CAAC;MAEhC,OAAO;QACN1K,KAAK,EAAE0K;MACR,CAAC;IAEF,KAAKlL,eAAe;MACnBS,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChCD,OAAO,CAACC,GAAG,CAAC8F,KAAK,CAAC;MAClB/F,OAAO,CAACC,GAAG,CAAC+F,MAAM,CAACjG,KAAK,CAAC;MAEzB,OAAO;QACNA,KAAK,EAAE;UACN,GAAGgG,KAAK,CAAChG,KAAK;UACd,GAAGiG,MAAM,CAACjG;QACX;MACD,CAAC;IAEF;MACC,OAAOgG,KAAK;EACd;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMP,OAAO,GAAGA,CACfO,KAAK,GAAG;EACP2E,MAAM,EAAE,CAAC;AACV,CAAC,EACD1E,MAAM,KACF;EACJ;EACA;EACA;EACA;;EAEA,MAAM2E,QAAQ,GAAG3E,MAAM,CAAChP,OAAO;EAC/B;;EAEA;EACA,MAAM4T,aAAa,GAAG7K,KAAK,CAACgG,KAAK,CAAC2E,MAAM,CAACC,QAAQ,CAAC,EAAE3E,MAAM,CAAC;EAC3D;EACA;EACA;;EAEA;EACA,IAAIC,IAAI,CAACC,SAAS,CAAC0E,aAAa,CAAC7K,KAAK,CAAC,KAAK,IAAI,EAAE;IACjD,OAAOgG,KAAK;EACb;EACA;;EAEA,MAAM8E,cAAc,GAAG;IAAE,GAAG9E,KAAK,CAAC2E;EAAO,CAAC;EAC1C;;EAEA,QAAQ1E,MAAM,CAAC7J,IAAI;IAClB,KAAK8C,eAAe;MACnBe,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MAEnD,MAAM6K,kBAAkB,GAAG;QAC1B,CAAC9E,MAAM,CAACtB,UAAU,GAAGkG,aAAa,CAAC7K;MACpC,CAAC;MACDC,OAAO,CAACC,GAAG,CAAC6K,kBAAkB,CAAC;MAE/B,MAAMC,mBAAmB,GAAG5H,MAAM,CAACC,IAAI,CAAC2C,KAAK,CAAC2E,MAAM,CAAC,CAACM,MAAM,CAAC,CAACC,GAAG,EAAE3H,GAAG,KAAK;QAC1EtD,OAAO,CAACC,GAAG,CAAC8F,KAAK,CAAC2E,MAAM,CAACpH,GAAG,CAAC,CAAC;QAC9B,IAAIyC,KAAK,CAAC2E,MAAM,CAACpH,GAAG,CAAC,CAACpD,QAAQ,KAAK8F,MAAM,CAAChP,OAAO,EAAE;UAClDiU,GAAG,CAAC3H,GAAG,CAAC,GAAG;YAAE,GAAGyC,KAAK,CAAC2E,MAAM,CAACpH,GAAG;UAAE,CAAC;QACpC;QACA,OAAO2H,GAAG;MACX,CAAC,EAAE,CAAC,CAAC,CAAC;MACN;MACA;MACA;MACA;MACAjL,OAAO,CAACC,GAAG,CAAC8K,mBAAmB,CAAC;MAEhC,OAAO;QACNL,MAAM,EAAE;UACP,GAAGK,mBAAmB;UACtB,GAAGD;QACJ;MACD,CAAC;IAEF,KAAKhM,YAAY;MAChBkB,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MAEzC,MAAMiL,iBAAiB,GAAG/H,MAAM,CAACC,IAAI,CAAC2C,KAAK,CAAC2E,MAAM,CAAC,CAACM,MAAM,CAAC,CAACC,GAAG,EAAE3H,GAAG,KAAK;QACxEtD,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGqD,GAAG,CAAC;QACnCtD,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAG0E,MAAM,CAACqB,MAAM,CAAChP,OAAO,CAAC,CAAC;QAC5DgJ,OAAO,CAACC,GAAG,CAACgL,GAAG,CAAC;QAChB,IAAI3H,GAAG,KAAKqB,MAAM,CAACqB,MAAM,CAAChP,OAAO,CAAC,EAAE;UACnCiU,GAAG,CAAC3H,GAAG,CAAC,GAAG;YACV,GAAGyC,KAAK,CAAC2E,MAAM,CAACpH,GAAG,CAAC;YACpB5C,IAAI,EAAE,CAAC,GAAGqF,KAAK,CAAC2E,MAAM,CAACpH,GAAG,CAAC,CAAC5C,IAAI,CAAC;YACjCC,OAAO,EAAE,CAAC,GAAGoF,KAAK,CAAC2E,MAAM,CAACpH,GAAG,CAAC,CAAC3C,OAAO,CAAC;YACvCC,KAAK,EAAE,CAAC,GAAGmF,KAAK,CAAC2E,MAAM,CAACpH,GAAG,CAAC,CAAC1C,KAAK;UACnC,CAAC;QACF;QACA,OAAOqK,GAAG;MACX,CAAC,EAAE,CAAC,CAAC,CAAC;MAENjL,OAAO,CAACC,GAAG,CAACiL,iBAAiB,CAAC;MAC9B,OAAO;QACNR,MAAM,EAAE;UACP,GAAGQ;QACJ;MACD,CAAC;IAEF;MACClL,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChD,MAAMkL,oBAAoB,GAAG;QAC5B,CAACnF,MAAM,CAAChP,OAAO,GAAG4T,aAAa,CAAC7K;MACjC,CAAC;MAED,OAAO;QACN2K,MAAM,EAAE;UACP,GAAGG,cAAc;UACjB,GAAGM;QACJ;MACD,CAAC;EACH;AACD,CAAC;AAED,iEAAe3F,OAAO;;;;;;;;;;;;;;;;;ACvmBtB;AAC0D;AAChB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS4F,cAAcA,CAACC,YAAY,EAAE;EACrCA,YAAY,CAAChI,OAAO,CAACd,IAAI,IAAI;IAC5BA,IAAI,CAACgF,OAAO,GAAG3B,sDAAc,CAACrD,IAAI,CAACF,SAAS,CAAC,GAAGE,IAAI,CAACL,MAAM;IAC3DlC,OAAO,CAACC,GAAG,CAACsC,IAAI,CAAC;EAClB,CAAC,CAAC;EACF,OAAO;IACN8I;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMpK,QAAQ,GACpBA,CAACjK,OAAO,EAAEsU,YAAY,KACtB,OAAO;EAAEvK,QAAQ;EAAEC;AAAS,CAAC,KAAK;EACjChB,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;EACrDD,OAAO,CAACC,GAAG,CAAC,4BAA4B,GAAGjJ,OAAO,CAAC;EACnDgJ,OAAO,CAACC,GAAG,CAAC,+BAA+B,GAAGqL,YAAY,CAAC;EAE3D,IAAI,CAACA,YAAY,IAAItU,OAAO,IAAI,GAAG,EAAE;IACpCgJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjC;EACD;EAEA,IAAI;IACH,MAAMqB,WAAW,GAAG,MAAMN,QAAQ,CAChCuK,aAAa,CAAC3L,uDAAS,CAAC,CACxB4L,eAAe,CAAC,gBAAgB,EAAE,OAAO,EAAExU,OAAO,CAAC;IAErD,MAAM+I,KAAK,GAAGuB,WAAW;IACzB,MAAMpB,QAAQ,GAAGH,KAAK,CAACqB,EAAE;IACzB,MAAMhB,eAAe,GAAGL,KAAK,CAACoB,MAAM,CAACf,eAAe;IACpD,MAAMC,YAAY,GAAGN,KAAK,CAACoB,MAAM,CAACE,MAAM;IACxC,MAAMf,OAAO,GAAGP,KAAK,CAACoB,MAAM,CAACb,OAAO;IACpC,MAAMC,UAAU,GAAGR,KAAK,CAACoB,MAAM,CAACZ,UAAU;IAC1C,MAAMC,UAAU,GAAGT,KAAK,CAACoB,MAAM,CAACX,UAAU;IAC1C,MAAMC,OAAO,GAAGV,KAAK,CAACoB,MAAM,CAACV,OAAO;IACpC,MAAMC,IAAI,GAAGX,KAAK,CAACW,IAAI;IACvB,MAAMC,OAAO,GAAGZ,KAAK,CAACY,OAAO;IAC7ByK,cAAc,CAACrL,KAAK,CAACa,KAAK,CAAC;IAC3B,MAAMA,KAAK,GAAGb,KAAK,CAACa,KAAK;IAEzBG,QAAQ,CAACZ,YAAY,CACpBD,QAAQ,EACRE,eAAe,EACfC,YAAY,EACZC,OAAO,EACPC,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,IAAI,EACJC,OAAO,EACPC,KACD,CAAC;EACF,CAAC,CAAC,OAAOa,KAAK,EAAE;IACfzB,OAAO,CAACC,GAAG,CAAC,iCAAiC,GAAGjJ,OAAO,CAAC;IACxD4K,KAAK,CAAC,0CAA0C,GAAGqE,IAAI,CAACC,SAAS,CAACzE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;EACnF;AACD,CAAC;;;;;;;;;;;;;;;;;;;AC5EF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASR,QAAQA,CAAC8E,KAAK,EAAE/O,OAAO,EAAEsU,YAAY,EAAE;EACtD,IAAI,CAACvF,KAAK,CAAC2E,MAAM,CAACe,cAAc,CAACzU,OAAO,CAAC,EAAE;IAC1C,OAAO;MACNkJ,QAAQ,EAAElJ,OAAO;MACjBoJ,eAAe,EAAE,EAAE;MACnBE,OAAO,EAAE,EAAE;MACXD,YAAY,EAAE,EAAE;MAChBE,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE;IACR,CAAC;EACF;EACA,OAAOmF,KAAK,CAAC2E,MAAM,CAAC1T,OAAO,CAAC;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS0U,SAASA,CAAC3F,KAAK,EAAE;EAChC,OAAOA,KAAK,CAAC2E,MAAM;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASiB,iBAAiBA,CAAC5F,KAAK,EAAE3F,eAAe,EAAE;EACzD,MAAMc,QAAQ,GAAGiC,MAAM,CAACC,IAAI,CAAC2C,KAAK,CAAC2E,MAAM,CAAC,CAACM,MAAM,CAAC,CAACC,GAAG,EAAE3H,GAAG,KAAK;IAC/D,IAAIyC,KAAK,CAAC2E,MAAM,CAACpH,GAAG,CAAC,EAAElD,eAAe,KAAKA,eAAe,EAAE;MAC3D6K,GAAG,CAAC3H,GAAG,CAAC,GAAG;QAAE,GAAGyC,KAAK,CAAC2E,MAAM,CAACpH,GAAG;MAAE,CAAC;IACpC;IACA,OAAO2H,GAAG;EACX,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,IAAI/J,QAAQ,CAAC0K,MAAM,KAAK,CAAC,EAAE;IAC1B,OAAO,KAAK;EACb;EACA,OAAOzI,MAAM,CAACC,IAAI,CAAClC,QAAQ,CAAC;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2K,kBAAkBA,CAAC9F,KAAK,EAAE;EACzC,MAAMtC,eAAe,GAAGN,MAAM,CAACC,IAAI,CAAC2C,KAAK,CAAC2E,MAAM,CAAC,CAACM,MAAM,CAAC,CAACC,GAAG,EAAE3H,GAAG,KAAK;IACtE,IAAIyC,KAAK,CAAC2E,MAAM,CAACpH,GAAG,CAAC,CAACK,iBAAiB,EAAE;MACxCsH,GAAG,CAAC3H,GAAG,CAAC,GAAG;QAAE,GAAGyC,KAAK,CAAC2E,MAAM,CAACpH,GAAG;MAAE,CAAC;IACpC;IACA,OAAO2H,GAAG;EACX,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,OAAOxH,eAAe;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASqI,gBAAgBA,CAAC/F,KAAK,EAAE;EACvC,MAAM7C,aAAa,GAAGC,MAAM,CAACC,IAAI,CAAC2C,KAAK,CAAC2E,MAAM,CAAC,CAACM,MAAM,CAAC,CAACC,GAAG,EAAE3H,GAAG,KAAK;IACpE,IAAIyC,KAAK,CAAC2E,MAAM,CAACpH,GAAG,CAAC,CAACjD,YAAY,KAAK,SAAS,EAAE;MACjD4K,GAAG,CAAC3H,GAAG,CAAC,GAAG;QAAE,GAAGyC,KAAK,CAAC2E,MAAM,CAACpH,GAAG;MAAE,CAAC;IACpC;IACA,OAAO2H,GAAG;EACX,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,OAAO/H,aAAa;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS6I,gBAAgBA,CAAChG,KAAK,EAAE;EACvC,MAAMiG,SAAS,GAAG7I,MAAM,CAACC,IAAI,CAAC2C,KAAK,CAAC2E,MAAM,CAAC,CAACM,MAAM,CAAC,CAACC,GAAG,EAAE3H,GAAG,KAAK;IAChE,IAAIyC,KAAK,CAAC2E,MAAM,CAACpH,GAAG,CAAC,CAACjD,YAAY,KAAK,KAAK,EAAE;MAC7C4K,GAAG,CAAC3H,GAAG,CAAC,GAAG;QAAE,GAAGyC,KAAK,CAAC2E,MAAM,CAACpH,GAAG;MAAE,CAAC;IACpC;IACA,OAAO2H,GAAG;EACX,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,OAAOe,SAAS;AACjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3HA;AACmE;AACF;AACR;AACC;AACrB;AAaN;AAWE;AAC6B;;AAE9D;AAC6C;AACC;AAQ7B;AAC6E;AAe7E;AAEkC;AAC5B;;AAEvB;AAAA;AACAjL,yDAAQ,CAAC,MAAM,CAAC,CAACoO,WAAW,CAAC,CAC5B;EACCC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,gBAAgB;EACtBC,OAAO,EAAE,2BAA2B;EACpCC,aAAa,EAAE;IAAEC,OAAO,EAAE;EAAO,CAAC;EAClCC,MAAM,EAAE,QAAQ;EAChB3X,KAAK,EAAEwU,mDAAE,CAAC,OAAO,CAAC;EAClBoD,QAAQ,EAAEC,MAAM,IAAIA,MAAM,EAAEvU,KAAK,IAAIkR,mDAAE,CAAC,eAAe;AACxD,CAAC,CACD,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASsD,IAAIA,CAACjZ,KAAK,EAAE;EACnC,MAAMkZ,UAAU,GAAG5C,sEAAa,CAAC;IAChCvR,SAAS,EAAE;EACZ,CAAC,CAAC;EACF;EACA,MAAM;IAAEoU;EAAe,CAAC,GAAG5D,4DAAW,CAACE,oDAAW,CAAC;EACnD,MAAM;IAAE2D;EAAmB,CAAC,GAAG7D,4DAAW,CAACE,oDAAW,CAAC;;EAEvD;EACA,MAAM;IAAEtM;EAAgB,CAAC,GAAGoM,4DAAW,CAACyB,wCAAU,CAAC;EACnD,MAAM;IAAE9M;EAAkB,CAAC,GAAGqL,4DAAW,CAACyB,wCAAU,CAAC;EACrD,MAAM;IAAEjM;EAAgB,CAAC,GAAGwK,4DAAW,CAACyB,wCAAU,CAAC;EACnD,MAAM;IAAEzJ;EAAU,CAAC,GAAGgI,4DAAW,CAACyB,wCAAU,CAAC;EAC7C,MAAM;IAAEtJ;EAAO,CAAC,GAAG6H,4DAAW,CAACyB,wCAAU,CAAC;EAC1C,MAAM;IAAEnJ;EAAa,CAAC,GAAG0H,4DAAW,CAACyB,wCAAU,CAAC;EAChD,MAAM;IAAElJ;EAAU,CAAC,GAAGyH,4DAAW,CAACyB,wCAAU,CAAC;EAC7C,MAAM;IAAE3J;EAAgB,CAAC,GAAGkI,4DAAW,CAACyB,wCAAU,CAAC;EACnD,MAAM;IAAE9I;EAAU,CAAC,GAAGqH,4DAAW,CAACyB,wCAAU,CAAC;EAC7C,MAAM;IAAE7I;EAAa,CAAC,GAAGoH,4DAAW,CAACyB,wCAAU,CAAC;EAChD,MAAM;IAAE5I;EAAW,CAAC,GAAGmH,4DAAW,CAACyB,wCAAU,CAAC;EAC9C,MAAM;IAAE9L;EAAkB,CAAC,GAAGqK,4DAAW,CAACyB,wCAAU,CAAC;EACrD,MAAM;IAAE1I;EAAkB,CAAC,GAAGiH,4DAAW,CAACyB,wCAAU,CAAC;EACrD,MAAM;IAAEnK;EAAuB,CAAC,GAAG0I,4DAAW,CAACyB,wCAAU,CAAC;EAC1D,MAAM;IAAE1K;EAAqB,CAAC,GAAGiJ,4DAAW,CAACyB,wCAAU,CAAC;EACxD,MAAM;IAAEqC,YAAY;IAAEC;EAAa,CAAC,GAAG/D,4DAAW,CAACG,qDAAW,CAAC;;EAE/D;EACA,MAAM,CAACf,YAAY,EAAE4E,aAAa,CAAC,GAAGva,4DAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACwa,aAAa,EAAEC,gBAAgB,CAAC,GAAGza,4DAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACmB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,4DAAQ,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAM,CAAC0a,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG3a,4DAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC4a,cAAc,EAAEC,iBAAiB,CAAC,GAAG7a,4DAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC4G,aAAa,EAAE6B,gBAAgB,CAAC,GAAGzI,4DAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAAC8a,WAAW,EAAEC,cAAc,CAAC,GAAG/a,4DAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgb,SAAS,EAAEC,YAAY,CAAC,GAAGjb,4DAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkb,UAAU,EAAEC,aAAa,CAAC,GAAGnb,4DAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACob,OAAO,EAAEC,UAAU,CAAC,GAAGrb,4DAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACsb,2BAA2B,EAAEC,8BAA8B,CAAC,GAAGvb,4DAAQ,CAAC,KAAK,CAAC;;EAErF;EACA,MAAMwb,oBAAoB,GAAG,KAAK;EAClC,MAAMha,iBAAiB,GAAG,KAAK;EAE/B,MAAM;IAAE+I,QAAQ;IAAEE,eAAe;IAAEgR;EAAgB,CAAC,GAAGza,KAAK,CAAC6J,UAAU;EACvE,MAAM6Q,WAAW,GAAGnE,oEAAW,CAAC,eAAe,CAAC;EAChD,MAAMoE,eAAe,GAAGD,WAAW,CAAC,CAAC,CAAC,CAAC5O,GAAG,CAAC,CAAC;IAAE8O,KAAK;IAAEnC;EAAK,CAAC,KAAK;IAC/D,OAAO;MAAEmC,KAAK;MAAEnC;IAAK,CAAC;EACvB,CAAC,CAAC;;EAEF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,MAAM;IAAEoC;EAAe,CAAC,GAAGvF,0DAAS,CAACnL,MAAM,IAAI;IAC9C,MAAM;MAAE6K;IAAkB,CAAC,GAAG7K,MAAM,CAAC6M,wCAAU,CAAC;IAChD,MAAM6D,cAAc,GAAG7F,iBAAiB,CAACvL,eAAe,CAAC;IAEzD,OAAO;MACNoR,cAAc,EAAEA;IACjB,CAAC;EACF,CAAC,CAAC;;EAEF;AACD;AACA;AACA;AACA;AACA;AACA;EACC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC/B,IAAIR,2BAA2B,IAAIrW,MAAM,CAAC4W,cAAc,CAAC,KAAK5W,MAAM,CAACsF,QAAQ,CAAC,EAAE;MAC/E,OAAO,IAAI;IACZ;IACA,OAAO,KAAK;EACb,CAAC;EAED,MAAMwR,gBAAgB,GAAGD,iBAAiB,CAAC,CAAC;;EAE5C;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,MAAM;IAAEhO;EAAgB,CAAC,GAAGwI,0DAAS,CAACnL,MAAM,IAAI;IAC/C,MAAM;MAAE+K;IAAmB,CAAC,GAAG/K,MAAM,CAAC6M,wCAAU,CAAC;IACjD,OAAO;MACNlK,eAAe,EAAEoI,kBAAkB,CAAC;IACrC,CAAC;EACF,CAAC,CAAC;EAEF,IAAI1I,MAAM,CAACC,IAAI,CAACK,eAAe,CAAC,CAACmI,MAAM,GAAG,CAAC,EAAE;IAC5CpI,sBAAsB,CAACC,eAAe,CAAC;EACxC;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,MAAM;IAAEP;EAAc,CAAC,GAAG+I,0DAAS,CAACnL,MAAM,IAAI;IAC7C,MAAM;MAAEgL;IAAiB,CAAC,GAAGhL,MAAM,CAAC6M,wCAAU,CAAC;IAC/C,OAAO;MACNzK,aAAa,EAAE4I,gBAAgB,CAAC;IACjC,CAAC;EACF,CAAC,CAAC;;EAEF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,MAAM6F,mBAAmB,GAAG/D,2DAAmB,CAAC,CAAC;;EAEjD;AACD;AACA;AACA;EACClY,6DAAS,CAAC,MAAM;IACf,IAAIic,mBAAmB,EAAE;MACxB;AACH;AACA;MACG,IAAIxO,MAAM,CAACC,IAAI,CAACF,aAAa,CAAC,CAAC0I,MAAM,GAAG,CAAC,EAAE;QAC1C3I,oBAAoB,CAACC,aAAa,CAAC;MACpC;;MAEA;AACH;AACA;AACA;AACA;MACG,IAAInD,KAAK,CAACM,YAAY,IAAI,KAAK,EAAE;QAChCuR,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,cAAc,EAAE,EAAE,EAAE,MAAM,EAAE,OAAO,CAAC;QACvEwB,eAAe,CAAC3B,KAAK,CAACG,QAAQ,CAAC;MAChC;IACD;EACD,CAAC,EAAE,CAACyR,mBAAmB,EAAElO,eAAe,CAAC,CAAC;;EAE1C;AACD;AACA;AACA;AACA;AACA;AACA;EACC,MAAMoO,mBAAmB,GAAGA,CAAA,KAAM;IACjC,IAAIzR,eAAe,KAAK,EAAE,EAAE;MAC3B,OAAO,MAAM;IACd;IAEA,IAAIF,QAAQ,KAAK,GAAG,EAAE;MACrB,OAAO,KAAK;IACb;IAEA,IAAIoL,YAAY,EAAE;MACjB,OAAO,OAAO;IACf;IAEA,OAAO,OAAO;EACf,CAAC;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;EACC,MAAMwG,WAAW,GAAGA,CAAA,KAAM;IACzB,IAAI1R,eAAe,KAAK,EAAE,EAAE;MAC3B,OAAO,IAAI;IACZ;IACA,OAAO,KAAK;EACb,CAAC;;EAED;AACD;AACA;AACA;AACA;EACC,MAAM2R,WAAW,GAAGA,CAAA,KAAM;IACzBjC,cAAc,CAAC,gBAAgB,CAAC;IAChCC,kBAAkB,CAAC,oBAAoB,CAAC;EACzC,CAAC;;EAED;AACD;AACA;AACA;AACA;EACC,MAAMiC,gBAAgB,GAAGA,CAAA,KAAM;IAC9BlC,cAAc,CAAC,kBAAkB,CAAC;IAClCC,kBAAkB,CAAC,sBAAsB,CAAC;EAC3C,CAAC;EAED,MAAMkC,UAAU,GAAGH,WAAW,CAAC,CAAC;EAChC,MAAMI,gBAAgB,GAAGL,mBAAmB,CAAC,CAAC;;EAE9C;AACD;AACA;EACC,IAAII,UAAU,EAAE;IACfF,WAAW,CAAC,CAAC;EACd;;EAEA;AACD;AACA;AACA;AACA;EACC,MAAM;IACLhS,KAAK;IACL4C,WAAW;IACXwP,wBAAwB;IACxBC,yBAAyB;IACzBC;EACD,CAAC,GAAGpG,0DAAS,CACZnL,MAAM,IAAI;IACT,MAAM;MACLG,QAAQ;MACR0K,iBAAiB;MACjB2G,oBAAoB;MACpBC,qBAAqB;MACrBC;IACD,CAAC,GAAG1R,MAAM,CAAC6M,wCAAU,CAAC;IACtB,MAAM8E,YAAY,GAAG,CAACvS,QAAQ,EAAEoL,YAAY,CAAC;IAE7C,IAAIlL,eAAe,KAAK,EAAE,EAAE;MAC3B,OAAO;QACNL,KAAK,EAAE,CAAC,CAAC;QACT4C,WAAW,EAAE,EAAE;QACfwP,wBAAwB,EAAE,KAAK;QAC/BC,yBAAyB,EAAE,KAAK;QAChCC,gBAAgB,EAAE;MACnB,CAAC;IACF;IACA,MAAMK,aAAa,GAAGA,CAACxS,QAAQ,EAAEoL,YAAY,EAAElL,eAAe,KAAK;MAClE,IAAIuS,aAAa,GAAG1R,QAAQ,CAACf,QAAQ,EAAEoL,YAAY,CAAC;MACpD,IACCpL,QAAQ,KAAK,GAAG,IAChByS,aAAa,CAACvS,eAAe,KAAK,EAAE,IACpC6Q,2BAA2B,EAC1B;QACD,MAAMvM,UAAU,GAAGiH,iBAAiB,CAACvL,eAAe,CAAC;QACrDuS,aAAa,GAAG1R,QAAQ,CAACyD,UAAU,EAAE4G,YAAY,CAAC;;QAElD;QACA,IACC3G,MAAM,CAAChO,KAAK,CAAC6Y,OAAO,CAACoD,MAAM,CAAC,KAAKD,aAAa,CAACrS,OAAO,IACtDqE,MAAM,CAAChO,KAAK,CAAC6Y,OAAO,CAACoD,MAAM,CAAC,KAAK,GAAG,EACnC;UACDhB,kBAAkB,CACjBe,aAAa,CAACzS,QAAQ,EACtB,SAAS,EACT,EAAE,EACF,MAAM,EACNyE,MAAM,CAAChO,KAAK,CAAC6Y,OAAO,CAACoD,MAAM,CAC5B,CAAC;QACF;QAEA1B,8BAA8B,CAAC,KAAK,CAAC;QACrCc,gBAAgB,CAAC,CAAC;QAClBrb,KAAK,CAACkc,aAAa,CAAC;UAAE3S,QAAQ,EAAEtF,MAAM,CAAC+X,aAAa,CAACzS,QAAQ;QAAE,CAAC,CAAC;MAClE;MACA,OAAOyS,aAAa;IACrB,CAAC;IAED,MAAMjF,UAAU,GAAGgF,aAAa,CAACxS,QAAQ,EAAEoL,YAAY,EAAElL,eAAe,CAAC;IACzE,MAAM+R,wBAAwB,GAAGG,oBAAoB,CAAC,UAAU,EAAEG,YAAY,CAAC;IAC/E,MAAML,yBAAyB,GAAGG,qBAAqB,CAAC,UAAU,EAAEE,YAAY,CAAC;IACjF,MAAMJ,gBAAgB,GAAGG,WAAW,CAAC,UAAU,EAAEC,YAAY,CAAC;IAE9D,IAAIL,yBAAyB,EAAE;MAC9BlC,aAAa,CAAC,MAAM,KAAK,CAAC;IAC3B;IAEA,OAAO;MACNnQ,KAAK,EAAE2N,UAAU;MACjB/K,WAAW,EAAE+K,UAAU,CAACrN,YAAY;MACpC8R,wBAAwB,EAAEA,wBAAwB;MAClDC,yBAAyB,EAAEA,yBAAyB;MACpDC,gBAAgB,EAAEA;IACnB,CAAC;EACF,CAAC,EACD,CAACnS,QAAQ,EAAEwR,gBAAgB,EAAEpG,YAAY,EAAElL,eAAe,CAC3D,CAAC;EAED,MAAM0S,aAAa,GAAG3G,0DAAM,CAACxJ,WAAW,CAAC;EACzCmQ,aAAa,CAACC,OAAO,GAAGpQ,WAAW;;EAEnC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASqQ,qBAAqBA,CAACC,eAAe,EAAEC,aAAa,EAAE;IAC9D,MAAMC,cAAc,GAAGF,eAAe,GAAGC,aAAa,CAAC;IACvD,OAAOC,cAAc;EACtB;;EAEA;AACD;AACA;EACC,MAAMC,aAAa,GAAGJ,qBAAqB,CAACjT,KAAK,CAACS,UAAU,EAAE,eAAe,CAAC;EAC9E,MAAM6S,qBAAqB,GAAGL,qBAAqB,CAACjT,KAAK,CAACS,UAAU,EAAE,uBAAuB,CAAC;EAC9F,MAAM8S,eAAe,GAAGN,qBAAqB,CAACjT,KAAK,CAACS,UAAU,EAAE,iBAAiB,CAAC;EAClF,MAAM+S,eAAe,GAAGP,qBAAqB,CAACjT,KAAK,CAACS,UAAU,EAAE,iBAAiB,CAAC;EAClF,MAAMgT,yBAAyB,GAAGR,qBAAqB,CACtDjT,KAAK,CAACS,UAAU,EAChB,4BACD,CAAC;EACD,MAAMiT,eAAe,GAAGT,qBAAqB,CAACjT,KAAK,CAACS,UAAU,EAAE,iBAAiB,CAAC;EAClF,MAAMkT,YAAY,GAAGV,qBAAqB,CAACjT,KAAK,CAACS,UAAU,EAAE,cAAc,CAAC;EAC5E,MAAMmT,aAAa,GAAGX,qBAAqB,CAACjT,KAAK,CAACS,UAAU,EAAE,eAAe,CAAC;EAC9E,MAAMoT,UAAU,GAAGZ,qBAAqB,CAACjT,KAAK,CAACS,UAAU,EAAE,YAAY,CAAC;EACxE,MAAMqT,UAAU,GAAGb,qBAAqB,CAACjT,KAAK,CAACS,UAAU,EAAE,YAAY,CAAC;EACxE,MAAMsT,eAAe,GAAGd,qBAAqB,CAACjT,KAAK,CAACS,UAAU,EAAE,iBAAiB,CAAC;EAClF,MAAMuT,wBAAwB,GAAGf,qBAAqB,CACrDjT,KAAK,CAACS,UAAU,EAChB,0BACD,CAAC;EACD,MAAMwT,aAAa,GAAGhB,qBAAqB,CAACjT,KAAK,CAACS,UAAU,EAAE,eAAe,CAAC;EAC9E,MAAMyT,aAAa,GAAG7C,eAAe;EACrC,MAAMjW,mBAAmB,GAAG6X,qBAAqB,CAACjT,KAAK,CAACS,UAAU,EAAE,qBAAqB,CAAC;EAC1F,MAAM0T,iBAAiB,GAAGlB,qBAAqB,CAACjT,KAAK,CAACS,UAAU,EAAE,mBAAmB,CAAC;EACtF,MAAM2T,SAAS,GAAGnB,qBAAqB,CAACjT,KAAK,CAACS,UAAU,EAAE,WAAW,CAAC;;EAEtE;AACD;AACA;AACA;AACA;AACA;EACC,IACC2R,wBAAwB,IACxBC,yBAAyB,IACzB,CAACnB,2BAA2B,IAC5BtM,MAAM,CAAChO,KAAK,CAAC6Y,OAAO,CAACoD,MAAM,CAAC,KAAK7S,KAAK,CAACO,OAAO,EAC7C;IACDsR,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,SAAS,EAAE,EAAE,EAAE,MAAM,EAAEyE,MAAM,CAAChO,KAAK,CAAC6Y,OAAO,CAACoD,MAAM,CAAC,CAAC;IACvFlR,eAAe,CAAC3B,KAAK,CAACG,QAAQ,CAAC;EAChC;;EAEA;AACD;AACA;EACCxK,6DAAS,CAAC,MAAM;IACf,OAAO,MAAM;MACZkc,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,cAAc,EAAE,EAAE,EAAE,MAAM,EAAE4S,aAAa,CAACC,OAAO,CAAC;MACrFnB,kBAAkB,CACjB7R,KAAK,CAACG,QAAQ,EACd,mBAAmB,EACnB,EAAE,EACF,MAAM,EACN2P,UAAU,CAAC,YAAY,CAAC,EACxB,KACD,CAAC;MACD;IACD,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMuE,iBAAiB,GACtBnO,IAAI,CAACC,SAAS,CAACnG,KAAK,CAACA,KAAK,CAAC,KAAK,IAAI,IAAImS,gBAAgB,IAAI,MAAM,GAAG,CAAC,GAAGnS,KAAK,CAACY,OAAO,CAACiL,MAAM;EAC9F,MAAMyI,cAAc,GACnBpO,IAAI,CAACC,SAAS,CAACnG,KAAK,CAACA,KAAK,CAAC,KAAK,IAAI,IAAImS,gBAAgB,IAAI,MAAM,GAAG,CAAC,GAAGnS,KAAK,CAACW,IAAI,CAACkL,MAAM;;EAE3F;AACD;AACA;AACA;AACA;EACClW,6DAAS,CAAC,MAAM;IACf,IAAI,CAACuc,UAAU,EAAE;MAChB,IAAImC,iBAAiB,IAAIvD,UAAU,EAAE;QACpCC,aAAa,CAACsD,iBAAiB,CAAC;MACjC;MACA,IAAIC,cAAc,IAAItD,OAAO,EAAE;QAC9BC,UAAU,CAACqD,cAAc,CAAC;MAC3B;IACD;EACD,CAAC,EAAE,CAACD,iBAAiB,EAAEC,cAAc,CAAC,CAAC;;EAEvC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASC,YAAYA,CAACtd,OAAO,EAAEC,QAAQ,EAAE;IACxC,MAAMkN,SAAS,GAAGiK,kEAAgB,CAACpX,OAAO,EAAEC,QAAQ,CAAC;IACrD,MAAMmO,UAAU,GAAG,EAAE;IAErB,KAAK,IAAImP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxD,OAAO,EAAEwD,CAAC,EAAE,EAAE;MACjC,IAAIA,CAAC,KAAK,CAAC,EAAE;QACZ,MAAMhS,IAAI,GAAG8L,gEAAc,CAACrX,OAAO,EAAEC,QAAQ,EAAEsd,CAAC,EAAE,QAAQ,CAAC;QAC3DnP,UAAU,CAACoB,IAAI,CAACjE,IAAI,CAAC;MACtB,CAAC,MAAM;QACN,MAAMA,IAAI,GAAG8L,gEAAc,CAACrX,OAAO,EAAEC,QAAQ,EAAEsd,CAAC,CAAC;QACjDnP,UAAU,CAACoB,IAAI,CAACjE,IAAI,CAAC;MACtB;IACD;IAEA2B,SAAS,CAAClN,OAAO,EAAEC,QAAQ,EAAEkN,SAAS,EAAEiB,UAAU,CAAC;IACnD8K,aAAa,CAAC,KAAK,CAAC;IACpB,OAAOrO,iBAAiB,CAAC7K,OAAO,CAAC;EAClC;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASwd,SAASA,CAACxd,OAAO,EAAEqH,KAAK,EAAE;IAClC,MAAMiG,MAAM,GAAG6J,+DAAa,CAACnX,OAAO,EAAEqH,KAAK,CAAC;IAC5C,MAAM+G,UAAU,GAAG,EAAE;IAErB,KAAK,IAAImP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1D,UAAU,EAAE0D,CAAC,EAAE,EAAE;MACpC,IAAIA,CAAC,KAAK,CAAC,EAAE;QACZ,MAAMhS,IAAI,GAAG8L,gEAAc,CAACrX,OAAO,EAAEud,CAAC,EAAElW,KAAK,EAAE,QAAQ,CAAC;QACxD;QACA+G,UAAU,CAACoB,IAAI,CAACjE,IAAI,CAAC;MACtB,CAAC,MAAM;QACN,MAAMA,IAAI,GAAG8L,gEAAc,CAACrX,OAAO,EAAEud,CAAC,EAAElW,KAAK,CAAC;QAC9C+G,UAAU,CAACoB,IAAI,CAACjE,IAAI,CAAC;MACtB;IACD;IAEA8B,MAAM,CAACrN,OAAO,EAAEqH,KAAK,EAAEiG,MAAM,EAAEc,UAAU,CAAC;IAC1C8K,aAAa,CAAC,KAAK,CAAC;IACpB,OAAOrO,iBAAiB,CAAC7K,OAAO,CAAC;EAClC;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASyd,YAAYA,CAACzd,OAAO,EAAEC,QAAQ,EAAE;IACxCuN,YAAY,CAACxN,OAAO,EAAEC,QAAQ,CAAC;IAC/BiZ,aAAa,CAAC,KAAK,CAAC;IACpB,OAAOrO,iBAAiB,CAAC7K,OAAO,CAAC;EAClC;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS0d,SAASA,CAAC1d,OAAO,EAAEqH,KAAK,EAAE;IAClCoG,SAAS,CAACzN,OAAO,EAAEqH,KAAK,CAAC;IACzB6R,aAAa,CAAC,KAAK,CAAC;IACpB,OAAOrO,iBAAiB,CAAC7K,OAAO,CAAC;EAClC;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS4a,kBAAkBA,CAAC5a,OAAO,EAAE4N,SAAS,EAAExD,EAAE,EAAEjF,IAAI,EAAE5B,KAAK,EAAEoa,OAAO,GAAG,IAAI,EAAE;IAChF,QAAQxY,IAAI;MACX,KAAK,SAAS;QAAE;UACf,IAAIyI,SAAS,KAAK,MAAM,EAAE;YACzBG,UAAU,CAAC/N,OAAO,EAAEoK,EAAE,EAAE,SAAS,EAAE7G,KAAK,CAAC;UAC1C;UACA;QACD;MACA,KAAK,YAAY;QAAE;UAClB,IAAIqK,SAAS,KAAK,MAAM,EAAE;YACzBG,UAAU,CAAC/N,OAAO,EAAEoK,EAAE,EAAE,YAAY,EAAE7G,KAAK,CAAC;UAC7C,CAAC,MAAM,IAAIqK,SAAS,KAAK,KAAK,EAAE;YAC/BxG,gBAAgB,CAAC7D,KAAK,CAAC;YACvBsK,SAAS,CAAC7N,OAAO,EAAEoK,EAAE,EAAE,YAAY,EAAE7G,KAAK,CAAC;UAC5C,CAAC,MAAM,IAAIqK,SAAS,KAAK,QAAQ,EAAE;YAClC7N,mBAAmB,CAACwD,KAAK,CAAC;YAC1BuK,YAAY,CAAC9N,OAAO,EAAEoK,EAAE,EAAE,YAAY,EAAE7G,KAAK,CAAC;UAC/C,CAAC,MAAM,IAAIqK,SAAS,KAAK,OAAO,EAAE;YACjCZ,eAAe,CAAChN,OAAO,EAAE,YAAY,EAAEuD,KAAK,CAAC;UAC9C;UACA;QACD;MACA,KAAK,SAAS;QAAE;UACf,IAAIqK,SAAS,KAAK,MAAM,EAAE;YACzBG,UAAU,CAAC/N,OAAO,EAAEoK,EAAE,EAAE,SAAS,EAAE7G,KAAK,CAAC;UAC1C,CAAC,MAAM,IAAIqK,SAAS,KAAK,QAAQ,EAAE;YAClCE,YAAY,CAAC9N,OAAO,EAAEoK,EAAE,EAAE,SAAS,EAAE7G,KAAK,CAAC;UAC5C;UACA;QACD;MACA,KAAK,MAAM;QACV;UACCyJ,eAAe,CAAChN,OAAO,EAAE4N,SAAS,EAAErK,KAAK,CAAC;UAC1C,IAAIqK,SAAS,KAAK,mBAAmB,EAAE;YACtC/C,iBAAiB,CAAC7K,OAAO,EAAE,SAAS,CAAC;UACtC;QACD;QACA;MAED;QACCgJ,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C;IACAiQ,aAAa,CAAC,KAAK,CAAC;;IAEpB;AACF;AACA;AACA;IACE,IAAIyE,OAAO,EAAE;MACZ,OAAO9S,iBAAiB,CAAC7K,OAAO,CAAC;IAClC;EACD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS4d,eAAeA,CAAC7U,KAAK,EAAE8U,SAAS,EAAE;IAC1C,IAAIhL,WAAW;IACf,IAAIK,cAAc;IAClB,IAAII,YAAY;;IAEhB;AACF;AACA;IACE,IAAIuK,SAAS,KAAK,KAAK,EAAE;MACxB/D,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;MAC7BG,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;MAEvBlH,WAAW,GAAG9J,KAAK,CAACW,IAAI,CAACsB,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,CAAC;MAC1DgI,cAAc,GAAGnK,KAAK,CAACY,OAAO,CAACqB,MAAM,CAACI,MAAM,IAAIA,MAAM,CAACC,SAAS,KAAK,GAAG,CAAC;MACzEiI,YAAY,GAAGvK,KAAK,CAACa,KAAK,CAACoB,MAAM,CAACO,IAAI,IAAIA,IAAI,CAACL,MAAM,KAAK,GAAG,IAAIK,IAAI,CAACF,SAAS,KAAK,GAAG,CAAC;MACxF4C,iBAAiB,CAAClF,KAAK,CAACG,QAAQ,EAAE2J,WAAW,EAAEK,cAAc,EAAEI,YAAY,CAAC;IAC7E,CAAC,MAAM;MACN;AACH;AACA;MACGwG,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;MAC7BG,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;;MAEvB;MACA,MAAM+D,SAAS,GAAG,EAAE;MACpBA,SAAS,CAACtO,IAAI,CAAC2H,+DAAa,CAACjO,QAAQ,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;MAEpD,MAAMqE,QAAQ,GAAG,EAAE;MACnB,KAAK,IAAIgQ,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI1D,UAAU,EAAE0D,CAAC,EAAE,EAAE;QACrC,MAAMhS,IAAI,GAAG8L,gEAAc,CAACnO,QAAQ,EAAEqU,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC;QACrDhQ,QAAQ,CAACiC,IAAI,CAACjE,IAAI,CAAC;MACpB;;MAEA;MACA,MAAMwS,YAAY,GAAG,EAAE;MACvBA,YAAY,CAACvO,IAAI,CAAC4H,kEAAgB,CAAClO,QAAQ,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;MAE1D,MAAMkE,WAAW,GAAG,EAAE;MACtB,KAAK,IAAImQ,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIxD,OAAO,EAAEwD,CAAC,EAAE,EAAE;QAClC,MAAMhS,IAAI,GAAG8L,gEAAc,CAACnO,QAAQ,EAAE,CAAC,EAAEqU,CAAC,EAAE,QAAQ,CAAC;QACrDnQ,WAAW,CAACoC,IAAI,CAACjE,IAAI,CAAC;MACvB;;MAEA;MACAsH,WAAW,GAAG/D,iDAAS,CAAC,MAAM,EAAE,CAAC,GAAG/F,KAAK,CAACW,IAAI,EAAE,GAAGoU,SAAS,CAAC,CAAC;MAC9D5K,cAAc,GAAGpE,iDAAS,CAAC,SAAS,EAAE,CAAC,GAAG/F,KAAK,CAACY,OAAO,EAAE,GAAGoU,YAAY,CAAC,CAAC;MAC1EzK,YAAY,GAAGxE,iDAAS,CAAC,OAAO,EAAE,CAAC,GAAG/F,KAAK,CAACa,KAAK,EAAE,GAAG2D,QAAQ,EAAE,GAAGH,WAAW,CAAC,CAAC;MAEhFa,iBAAiB,CAAClF,KAAK,CAACG,QAAQ,EAAE2J,WAAW,EAAEK,cAAc,EAAEI,YAAY,CAAC;IAC7E;IACAoG,cAAc,CAACmE,SAAS,CAAC;IACzB3E,aAAa,CAAC,KAAK,CAAC;EACrB;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS8E,WAAWA,CAACC,WAAW,EAAEC,QAAQ,EAAEvE,SAAS,EAAE;IACtDT,aAAa,CAAC,KAAK,CAAC;IACpB,MAAMiF,gBAAgB,GAAGtH,6DAAqB,CAAC,CAAC;IAChD,MAAM3M,QAAQ,GAAGgN,2DAAS,CAACiH,gBAAgB,EAAEF,WAAW,EAAEC,QAAQ,EAAEvE,SAAS,CAAC;IAE9Eha,KAAK,CAACkc,aAAa,CAAC;MAAEzS,eAAe,EAAE+U;IAAiB,CAAC,CAAC;IAC1DrV,eAAe,CAACoB,QAAQ,CAAC;IACzBgQ,8BAA8B,CAAC,IAAI,CAAC;IACpCrQ,iBAAiB,CAAC,CAAC;EACpB;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASuU,aAAaA,CAAC9d,KAAK,EAAE;IAC7BA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtBsd,WAAW,CAACnE,UAAU,EAAEE,OAAO,EAAEJ,SAAS,CAAC;EAC5C;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAAS0E,0BAA0BA,CAACC,WAAW,EAAE;IAChD,IAAIC,aAAa,GAAGD,WAAW;IAC/B,IAAIA,WAAW,GAAG,CAAC,IAAIA,WAAW,GAAG,EAAE,EAAE;MACxC,MAAME,SAAS,GACd,cAAc,GACdF,WAAW,GACX,kEAAkE;MACnEtF,YAAY,CAAC,OAAO,EAAEwF,SAAS,EAAE;QAChCpU,EAAE,EAAE,mBAAmB;QACvB7F,aAAa,EAAE,IAAI;QACnBka,UAAU,EAAE;MACb,CAAC,CAAC;MAEFF,aAAa,GAAG3a,MAAM,CAACiW,UAAU,CAAC;IACnC,CAAC,MAAM;MACNZ,YAAY,CAAC,mBAAmB,CAAC;IAClC;IACAa,aAAa,CAACyE,aAAa,CAAC;EAC7B;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASG,uBAAuBA,CAACC,QAAQ,EAAE;IAC1C,IAAIC,UAAU,GAAGD,QAAQ;IACzB,IAAIA,QAAQ,GAAG,CAAC,IAAIA,QAAQ,GAAG,IAAI,EAAE;MACpC,MAAMH,SAAS,GACd,cAAc,GAAGG,QAAQ,GAAG,+DAA+D;MAC5F3F,YAAY,CAAC,OAAO,EAAEwF,SAAS,EAAE;QAChCpU,EAAE,EAAE,gBAAgB;QACpB7F,aAAa,EAAE,IAAI;QACnBka,UAAU,EAAE;MACb,CAAC,CAAC;MAEFG,UAAU,GAAGhb,MAAM,CAACmW,OAAO,CAAC;IAC7B,CAAC,MAAM;MACNd,YAAY,CAAC,gBAAgB,CAAC;IAC/B;IACAe,UAAU,CAAC4E,UAAU,CAAC;EACvB;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASC,cAAcA,CAACve,KAAK,EAAEwe,UAAU,EAAE9e,OAAO,EAAEC,QAAQ,EAAEQ,uBAAuB,EAAE;IACtF,QAAQqe,UAAU;MACjB,KAAK,YAAY;QAAE;UAClBlE,kBAAkB,CAAC5a,OAAO,EAAE,QAAQ,EAAEC,QAAQ,EAAE,YAAY,EAAEQ,uBAAuB,CAAC;UACtF;QACD;MACA,KAAK,QAAQ;QAAE;UACd2Y,gBAAgB,CAAC,CAAC,CAAC;UACnBE,oBAAoB,CAAC,KAAK,CAAC;UAC3BgE,YAAY,CAACtd,OAAO,EAAEC,QAAQ,CAAC;UAC/B;QACD;MACA,KAAK,QAAQ;QAAE;UACdmZ,gBAAgB,CAAC,CAAC,CAAC;UACnBE,oBAAoB,CAAC,KAAK,CAAC;UAC3BmE,YAAY,CAACzd,OAAO,EAAEC,QAAQ,CAAC;UAC/B;QACD;MACA;QACC+I,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD;EACD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS8V,WAAWA,CAACze,KAAK,EAAEwe,UAAU,EAAE9e,OAAO,EAAEqH,KAAK,EAAER,oBAAoB,EAAE;IAC7E,QAAQiY,UAAU;MACjB,KAAK,YAAY;QAAE;UAClBlE,kBAAkB,CAAC5a,OAAO,EAAE,KAAK,EAAEqH,KAAK,EAAE,YAAY,EAAER,oBAAoB,CAAC;UAC7E;QACD;MACA,KAAK,QAAQ;QAAE;UACduS,gBAAgB,CAAC,CAAC,CAAC;UACnBI,iBAAiB,CAAC,KAAK,CAAC;UACxBgE,SAAS,CAACxd,OAAO,EAAEqH,KAAK,CAAC;UACzB;QACD;MACA,KAAK,QAAQ;QAAE;UACd+R,gBAAgB,CAAC,CAAC,CAAC;UACnBI,iBAAiB,CAAC,KAAK,CAAC;UACxBkE,SAAS,CAAC1d,OAAO,EAAEqH,KAAK,CAAC;UACzB;QACD;MACA;QACC2B,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC7C;EACD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS+V,kBAAkBA,CAAC3T,SAAS,EAAEH,MAAM,EAAEnC,KAAK,EAAE;IACrD,IAAImC,MAAM,KAAK,GAAG,IAAIG,SAAS,KAAK,GAAG,EAAE;MACxC,MAAM4T,eAAe,GAAG5T,SAAS;MACjC,MAAM6T,aAAa,GAAGnW,KAAK,CAACY,OAAO,CAACwV,IAAI,CAAC,CAAC;QAAE9T;MAAU,CAAC,KAAKA,SAAS,KAAK4T,eAAe,CAAC;MAC1Flf,mBAAmB,CAACmf,aAAa,CAAC1V,UAAU,CAAC;MAC7C8P,oBAAoB,CAAC,IAAI,CAAC;MAC1BF,gBAAgB,CAAC/N,SAAS,CAAC;IAC5B;IAEA,IAAIH,MAAM,KAAK,GAAG,IAAIG,SAAS,KAAK,GAAG,EAAE;MACxC,MAAM+T,YAAY,GAAGlU,MAAM;MAC3B,MAAMmU,UAAU,GAAGtW,KAAK,CAACW,IAAI,CAACyV,IAAI,CAAC,CAAC;QAAEjU;MAAO,CAAC,KAAKA,MAAM,KAAKkU,YAAY,CAAC;MAC3EhY,gBAAgB,CAACiY,UAAU,CAAC7V,UAAU,CAAC;MACvCgQ,iBAAiB,CAAC,IAAI,CAAC;MACvBJ,gBAAgB,CAAClO,MAAM,CAAC;IACzB;IACAgO,aAAa,CAAC,KAAK,CAAC;EACrB;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASoG,WAAWA,CAACvW,KAAK,EAAE8U,SAAS,EAAE;IACtC,MAAM0B,sBAAsB,GAAG;MAC9B,GAAGxW,KAAK,CAACS,UAAU;MACnB2T,SAAS,EAAEU;IACZ,CAAC;IACDjD,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,YAAY,EAAEqW,sBAAsB,CAAC;EACtF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASC,uBAAuBA,CAACzW,KAAK,EAAE8U,SAAS,EAAE;IAClD,MAAM0B,sBAAsB,GAAG;MAC9B,GAAGxW,KAAK,CAACS,UAAU;MACnB6S,qBAAqB,EAAEwB;IACxB,CAAC;IACDjD,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,YAAY,EAAEqW,sBAAsB,CAAC;EACtF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASE,gBAAgBA,CAAC1W,KAAK,EAAE8U,SAAS,EAAE;IAC3C,MAAM0B,sBAAsB,GAAG;MAC9B,GAAGxW,KAAK,CAACS,UAAU;MACnBqT,UAAU,EAAEgB;IACb,CAAC;IACDjD,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,YAAY,EAAEqW,sBAAsB,CAAC;EACtF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASG,gBAAgBA,CAAC3W,KAAK,EAAE5D,IAAI,EAAEoV,KAAK,EAAE;IAC7C,IAAIgF,sBAAsB,GAAG,EAAE;IAC/B,IAAIpa,IAAI,IAAI,YAAY,EAAE;MACzBoa,sBAAsB,GAAG;QACxB,GAAGxW,KAAK,CAACS,UAAU;QACnBuT,wBAAwB,EAAExC;MAC3B,CAAC;MACDK,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,YAAY,EAAEqW,sBAAsB,CAAC;IACtF;IAEA,IAAIpa,IAAI,IAAI,MAAM,EAAE;MACnBoa,sBAAsB,GAAG;QACxB,GAAGxW,KAAK,CAACS,UAAU;QACnBsT,eAAe,EAAEvC;MAClB,CAAC;MACDK,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,YAAY,EAAEqW,sBAAsB,CAAC;IACtF;EACD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASI,iBAAiBA,CAAC5W,KAAK,EAAE8U,SAAS,EAAE;IAC5C,MAAM0B,sBAAsB,GAAG;MAC9B,GAAGxW,KAAK,CAACS,UAAU;MACnB8S,eAAe,EAAEuB,SAAS;MAC1BpB,eAAe,EAAE;IAClB,CAAC;IACD7B,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,YAAY,EAAEqW,sBAAsB,CAAC;IAErF,MAAM1Y,oBAAoB,GAAG;MAC5B,GAAGkC,KAAK,CAACW,IAAI,CAACyV,IAAI,CAACS,CAAC,IAAIA,CAAC,CAAC1U,MAAM,KAAK,GAAG,CAAC,CAAC1B,UAAU;MACpDqW,QAAQ,EAAEhC,SAAS,GAAG,IAAI,GAAG;IAC9B,CAAC;IACDjD,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,YAAY,EAAErC,oBAAoB,CAAC;EACnF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASiZ,aAAaA,CAAC/W,KAAK,EAAEgX,SAAS,EAAE;IACxC,MAAMR,sBAAsB,GAAG;MAC9B,GAAGxW,KAAK,CAACS,UAAU;MACnB+S,eAAe,EAAEwD;IAClB,CAAC;IACDnF,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,YAAY,EAAEqW,sBAAsB,CAAC;EACtF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASS,cAAcA,CAACjX,KAAK,EAAEkX,MAAM,EAAE;IACtC,MAAMV,sBAAsB,GAAG;MAC9B,GAAGxW,KAAK,CAACS,UAAU;MACnBkT,YAAY,EAAEuD;IACf,CAAC;IACDrF,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,YAAY,EAAEqW,sBAAsB,CAAC;EACtF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASW,iBAAiBA,CAACnX,KAAK,EAAE8U,SAAS,EAAE;IAC5C,MAAM0B,sBAAsB,GAAG;MAC9B,GAAGxW,KAAK,CAACS,UAAU;MACnBiT,eAAe,EAAEoB;IAClB,CAAC;IACDjD,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,YAAY,EAAEqW,sBAAsB,CAAC;EACtF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASY,WAAWA,CAACpX,KAAK,EAAEgX,SAAS,EAAE;IACtC,MAAMR,sBAAsB,GAAG;MAC9B,GAAGxW,KAAK,CAACS,UAAU;MACnBmT,aAAa,EAAEoD;IAChB,CAAC;IACDnF,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,YAAY,EAAEqW,sBAAsB,CAAC;EACtF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASa,YAAYA,CAACrX,KAAK,EAAEkX,MAAM,EAAE;IACpC,MAAMV,sBAAsB,GAAG;MAC9B,GAAGxW,KAAK,CAACS,UAAU;MACnBoT,UAAU,EAAEqD;IACb,CAAC;IACDrF,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,YAAY,EAAEqW,sBAAsB,CAAC;EACtF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASc,eAAeA,CAACtX,KAAK,EAAE8U,SAAS,EAAE;IAC1C,MAAM0B,sBAAsB,GAAG;MAC9B,GAAGxW,KAAK,CAACS,UAAU;MACnB4S,aAAa,EAAEyB;IAChB,CAAC;IACDjD,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,YAAY,EAAEqW,sBAAsB,CAAC;EACtF;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASe,eAAeA,CAACvX,KAAK,EAAEiU,aAAa,EAAE;IAC9C,MAAMuC,sBAAsB,GAAG;MAC9B,GAAGxW,KAAK,CAACS,UAAU;MACnBwT,aAAa,EAAEpZ,MAAM,CAACoZ,aAAa;IACpC,CAAC;IACDpC,kBAAkB,CAAC7R,KAAK,CAACG,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,YAAY,EAAEqW,sBAAsB,CAAC;EACtF;;EAEA;AACD;AACA;;EAEC,MAAMgB,eAAe,GAAGjJ,uDAAc,CACrC2D,UAAU,EACVI,gBAAgB,EAChBlB,oBAAoB,EACpBpR,KAAK,CAACY,OACP,CAAC;EAED,MAAM6W,kBAAkB,GAAGjJ,yDAAgB,CAAC0D,UAAU,EAAEI,gBAAgB,EAAEtS,KAAK,CAACW,IAAI,CAAC;EACrF,MAAM+W,gBAAgB,GAAGjJ,wDAAe,CAACyD,UAAU,EAAEI,gBAAgB,EAAEtS,KAAK,CAACW,IAAI,CAAC;EAClF,MAAMgX,0BAA0B,GAAGjH,WAAW,GAAG,CAAC,GAAG,CAAC;EAEtD,MAAMkH,wBAAwB,GAAG7I,sDAAa,CAC7C,CAAC,EACD,QAAQ,EACRiC,OAAO,EACPuC,eAAe,EACf7C,WAAW,EACX,KACD,CAAC;EAED,MAAMmH,wBAAwB,GAAG/I,wDAAe,CAACyE,eAAe,EAAE7C,WAAW,CAAC;EAE9E,MAAMoH,sBAAsB,GAAG/I,sDAAa,CAC3C8I,wBAAwB,EACxB,MAAM,EACN7G,OAAO,EACPuC,eAAe,EACf7C,WAAW,EACX,KACD,CAAC;EAED,MAAMqH,qBAAqB,GAAGzE,qBAAqB,GAAG,MAAM,GAAG,QAAQ;EAEvE,MAAM0E,sBAAsB,GAAGtJ,oEAA2B,CACzDwD,UAAU,EACVI,gBAAgB,EAChByB,eACD,CAAC;EAED,MAAMkE,4BAA4B,GAAGtJ,0EAAiC,CACrEuD,UAAU,EACVI,gBAAgB,EAChB0B,wBACD,CAAC;EAED,MAAMkE,kBAAkB,GAAGtJ,6DAAoB,CAACsD,UAAU,EAAEI,gBAAgB,EAAEe,aAAa,CAAC;EAE5F,MAAM8E,kBAAkB,GAAGtJ,kEAAyB,CACnDqD,UAAU,EACVI,gBAAgB,EAChBe,aAAa,EACbY,aACD,CAAC;EAED,MAAMmE,oBAAoB,GAAG1E,eAAe,GAAG,MAAM,GAAG,QAAQ;EAChE,MAAM2E,oBAAoB,GAAG3E,eAAe,GAAG,+BAA+B,GAAG,EAAE;EAEnF,MAAM4E,8BAA8B,GAAGtJ,0EAAiC,CACvEkD,UAAU,EACVI,gBAAgB,EAChBmB,yBAAyB,EACzB3D,UAAU,CAACyI,KAAK,CAACC,eAClB,CAAC;;EAED;AACD;AACA;EACC,MAAMC,wBAAwB,GAAGxJ,oEAA2B,CAC3DiD,UAAU,EACVI,gBAAgB,EAChBkB,eACD,CAAC;EACD,MAAMkF,qBAAqB,GAAGxJ,2DAAkB,CAACyE,YAAY,CAAC;;EAE9D;EACA,MAAMgF,oBAAoB,GAAGxJ,uDAAc,CAACwE,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE+E,qBAAqB,CAAC;EAChG,MAAME,oBAAoB,GAAGzJ,uDAAc,CAACwE,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE+E,qBAAqB,CAAC;EAChG,MAAMG,oBAAoB,GAAG1J,uDAAc,CAACwE,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE+E,qBAAqB,CAAC;;EAEhG;EACA,MAAMI,sBAAsB,GAAG3J,uDAAc,CAC5CwE,YAAY,EACZ,OAAO,EACP,OAAO,EACP+E,qBACD,CAAC;EACD,MAAMK,sBAAsB,GAAG5J,uDAAc,CAC5CwE,YAAY,EACZ,OAAO,EACP,OAAO,EACP+E,qBACD,CAAC;EACD,MAAMM,sBAAsB,GAAG7J,uDAAc,CAC5CwE,YAAY,EACZ,OAAO,EACP,OAAO,EACP+E,qBACD,CAAC;;EAED;EACA,MAAMO,uBAAuB,GAAG9J,uDAAc,CAC7CwE,YAAY,EACZ,QAAQ,EACR,OAAO,EACP+E,qBACD,CAAC;EACD,MAAMQ,uBAAuB,GAAG/J,uDAAc,CAC7CwE,YAAY,EACZ,QAAQ,EACR,OAAO,EACP+E,qBACD,CAAC;EACD,MAAMS,uBAAuB,GAAGhK,uDAAc,CAC7CwE,YAAY,EACZ,QAAQ,EACR,OAAO,EACP+E,qBACD,CAAC;;EAED;EACA,MAAMU,qBAAqB,GAAGjK,uDAAc,CAC3CwE,YAAY,EACZ,MAAM,EACN,OAAO,EACP+E,qBACD,CAAC;EACD,MAAMW,qBAAqB,GAAGlK,uDAAc,CAC3CwE,YAAY,EACZ,MAAM,EACN,OAAO,EACP+E,qBACD,CAAC;EACD,MAAMY,qBAAqB,GAAGnK,uDAAc,CAC3CwE,YAAY,EACZ,MAAM,EACN,OAAO,EACP+E,qBACD,CAAC;;EAED;AACD;AACA;EACC,MAAMa,sBAAsB,GAAGtK,oEAA2B,CACzDiD,UAAU,EACVI,gBAAgB,EAChBsB,aACD,CAAC;EACD,MAAM4F,mBAAmB,GAAGtK,2DAAkB,CAAC2E,UAAU,CAAC;EAC1D;EACA,MAAM4F,kBAAkB,GAAGtK,uDAAc,CAAC0E,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE2F,mBAAmB,CAAC;EAC1F,MAAME,kBAAkB,GAAGvK,uDAAc,CAAC0E,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE2F,mBAAmB,CAAC;EAC1F,MAAMG,kBAAkB,GAAGxK,uDAAc,CAAC0E,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE2F,mBAAmB,CAAC;;EAE1F;EACA,MAAMI,oBAAoB,GAAGzK,uDAAc,CAAC0E,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE2F,mBAAmB,CAAC;EAC9F,MAAMK,oBAAoB,GAAG1K,uDAAc,CAAC0E,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE2F,mBAAmB,CAAC;EAC9F,MAAMM,oBAAoB,GAAG3K,uDAAc,CAAC0E,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE2F,mBAAmB,CAAC;;EAE9F;EACA,MAAMO,qBAAqB,GAAG5K,uDAAc,CAAC0E,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE2F,mBAAmB,CAAC;EAChG,MAAMQ,qBAAqB,GAAG7K,uDAAc,CAAC0E,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE2F,mBAAmB,CAAC;EAChG,MAAMS,qBAAqB,GAAG9K,uDAAc,CAAC0E,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE2F,mBAAmB,CAAC;;EAEhG;EACA,MAAMU,mBAAmB,GAAG/K,uDAAc,CAAC0E,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE2F,mBAAmB,CAAC;EAC5F,MAAMW,mBAAmB,GAAGhL,uDAAc,CAAC0E,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE2F,mBAAmB,CAAC;EAC5F,MAAMY,mBAAmB,GAAGjL,uDAAc,CAAC0E,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE2F,mBAAmB,CAAC;EAE5F,oBACChjB,wDAAA;IAAA,GAASsZ,UAAU;IAAAlY,QAAA,GAGjB,CAACsa,UAAU,IAAI,CAACI,gBAAgB,iBAChC9b,wDAAA,CAAAE,wDAAA;MAAAkB,QAAA,gBACCtB,uDAAA,CAACiX,kEAAa;QAAA3V,QAAA,eACbtB,uDAAA,CAACkX,0EAAqB;UACrBhT,KAAK,EAAE6W,eAAgB;UACvBvV,QAAQ,EAAE5D,CAAC,IAAItB,KAAK,CAACkc,aAAa,CAAC;YAAEzB,eAAe,EAAEnZ;UAAE,CAAC;QAAE,CAC3D;MAAC,CACY,CAAC,eAEhB5B,uDAAA,CAACgX,sEAAiB;QAAA1V,QAAA,eACjBpB,wDAAA,CAACgW,wDAAK;UAAA5U,QAAA,gBACLpB,wDAAA,CAACiW,4DAAS;YAACpR,KAAK,EAAC,YAAY;YAACgf,WAAW,EAAE,IAAK;YAAAziB,QAAA,gBAC/CtB,uDAAA,CAACoW,2DAAQ;cAAA9U,QAAA,eACRpB,wDAAA;gBAAKmF,SAAS,EAAC,6CAA6C;gBAAA/D,QAAA,gBAC3DtB,uDAAA;kBAAMqF,SAAS,EAAC,mDAAmD;kBAAA/D,QAAA,EAAC;gBAEpE,CAAM,CAAC,EACNsW,kDAAU,CAAClO,KAAK,CAACQ,UAAU,CAAC;cAAA,CACzB;YAAC,CACG,CAAC,eAEXlK,uDAAA,CAACoW,2DAAQ;cAAA9U,QAAA,eACRpB,wDAAA;gBAAKmF,SAAS,EAAC,6CAA6C;gBAAA/D,QAAA,gBAC3DtB,uDAAA;kBAAMqF,SAAS,EAAC,mDAAmD;kBAAA/D,QAAA,EAAC;gBAEpE,CAAM,CAAC,EACNkZ,UAAU,EAAC,GAAC,EAACE,OAAO;cAAA,CACjB;YAAC,CACG,CAAC,eAEX1a,uDAAA,CAACoW,2DAAQ;cAAA9U,QAAA,eACRtB,uDAAA,CAACgC,kEAAe;gBACfP,KAAK,EAAC,oBAAoB;gBAC1BiE,uBAAuB;gBACvBhB,OAAO,EAAE0V,WAAY;gBACrB5U,QAAQ,EAAE5D,CAAC,IAAI2c,eAAe,CAAC7U,KAAK,EAAE9H,CAAC;cAAE,CACzC;YAAC,CACO,CAAC,eAEX5B,uDAAA,CAACoW,2DAAQ;cAAA9U,QAAA,eACRtB,uDAAA,CAACgC,kEAAe;gBACfP,KAAK,EAAC,kBAAkB;gBACxBiE,uBAAuB;gBACvBhB,OAAO,EAAEoZ,SAAU;gBACnBtY,QAAQ,EAAE5D,CAAC,IAAIqe,WAAW,CAACvW,KAAK,EAAE9H,CAAC;cAAE,CACrC;YAAC,CACO,CAAC;UAAA,CACD,CAAC,eAEZ1B,wDAAA,CAACiW,4DAAS;YAACpR,KAAK,EAAC,cAAc;YAACgf,WAAW,EAAE,KAAM;YAAAziB,QAAA,gBAClDtB,uDAAA,CAACoW,2DAAQ;cAAA9U,QAAA,eACRtB,uDAAA,CAACgC,kEAAe;gBACfP,KAAK,EAAC,sBAAsB;gBAC5BiE,uBAAuB;gBACvBhB,OAAO,EAAEuY,eAAgB;gBACzBzX,QAAQ,EAAE5D,CAAC,IAAI0e,iBAAiB,CAAC5W,KAAK,EAAE9H,CAAC;cAAE,CAC3C;YAAC,CACO,CAAC,eAEX5B,uDAAA,CAACoW,2DAAQ;cAAA9U,QAAA,eACRtB,uDAAA,CAACgC,kEAAe;gBACfP,KAAK,EAAC,oBAAoB;gBAC1BiE,uBAAuB;gBACvBse,QAAQ,EAAE,CAAC/G,eAAgB;gBAC3BvY,OAAO,EAAE0Y,eAAgB;gBACzB5X,QAAQ,EAAE5D,CAAC,IAAIif,iBAAiB,CAACnX,KAAK,EAAE9H,CAAC;cAAE,CAC3C;YAAC,CACO,CAAC,eAEX5B,uDAAA,CAACoW,2DAAQ;cAAA9U,QAAA,eACRpB,wDAAA;gBAAMmF,SAAS,EAAC,mDAAmD;gBAAA/D,QAAA,gBAClEtB,uDAAA,CAAC+W,qEAAgB;kBAChBhM,EAAE,EAAC,kBAAkB;kBACrB7G,KAAK,EAAEgZ,eAAgB;kBACvB1X,QAAQ,EAAE5D,CAAC,IAAI6e,aAAa,CAAC/W,KAAK,EAAE9H,CAAC;gBAAE,CACvC,CAAC,eACF5B,uDAAA;kBACCqF,SAAS,EAAC,6CAA6C;kBACvD4e,OAAO,EAAC,kBAAkB;kBAAA3iB,QAAA,EAC1B;gBAED,CAAO,CAAC;cAAA,CACH;YAAC,CACE,CAAC,eAEXtB,uDAAA,CAACoW,2DAAQ;cAAA9U,QAAA,eACRtB,uDAAA,CAAC0W,mEAAgB;gBAChBrR,SAAS,EAAC,uBAAuB;gBACjC6e,qBAAqB;gBACrBC,iCAAiC;gBACjC1iB,KAAK,EAAC;gBACN;gBAAA;gBACA2iB,SAAS,EAAC,MAAM;gBAChBC,MAAM,EAAEpJ,eAAgB;gBACxB/W,KAAK,EAAEmZ,YAAa;gBACpB7X,QAAQ,EAAE5D,CAAC,IAAI+e,cAAc,CAACjX,KAAK,EAAE9H,CAAC;cAAE,CACxC;YAAC,CACO,CAAC;UAAA,CACD,CAAC,eAEZ1B,wDAAA,CAACiW,4DAAS;YAACpR,KAAK,EAAC,YAAY;YAACgf,WAAW,EAAE,KAAM;YAAAziB,QAAA,gBAChDtB,uDAAA,CAACoW,2DAAQ;cAAA9U,QAAA,eACRtB,uDAAA,CAACgC,kEAAe;gBACfP,KAAK,EAAC,0BAA0B;gBAChCiE,uBAAuB;gBACvBhB,OAAO,EAAEsY,qBAAsB;gBAC/BxX,QAAQ,EAAE5D,CAAC,IAAIue,uBAAuB,CAACzW,KAAK,EAAE9H,CAAC;cAAE,CACjD;YAAC,CACO,CAAC,eAEX5B,uDAAA,CAACoW,2DAAQ;cAAA9U,QAAA,eACRpB,wDAAA;gBAAMmF,SAAS,EAAC,mDAAmD;gBAAA/D,QAAA,gBAClEtB,uDAAA,CAAC+W,qEAAgB;kBAChBhM,EAAE,EAAC,gBAAgB;kBACnB7G,KAAK,EAAEoZ,aAAc;kBACrB9X,QAAQ,EAAE5D,CAAC,IAAIkf,WAAW,CAACpX,KAAK,EAAE9H,CAAC;gBAAE,CACrC,CAAC,eACF5B,uDAAA;kBACCqF,SAAS,EAAC,6CAA6C;kBACvD4e,OAAO,EAAC,gBAAgB;kBAAA3iB,QAAA,EACxB;gBAED,CAAO,CAAC;cAAA,CACH;YAAC,CACE,CAAC,eAEXtB,uDAAA,CAACoW,2DAAQ;cAAA9U,QAAA,eACRtB,uDAAA,CAAC0W,mEAAgB;gBAChBrR,SAAS,EAAC,uBAAuB;gBACjC5D,KAAK,EAAC,SAAS;gBACf6iB,mBAAmB,EAAC,OAAO;gBAC3BF,SAAS,EAAC,MAAM;gBAChBC,MAAM,EAAEpJ,eAAgB;gBACxB/W,KAAK,EAAEqZ,UAAW;gBAClB/X,QAAQ,EAAE5D,CAAC,IAAImf,YAAY,CAACrX,KAAK,EAAE9H,CAAC;cAAE,CACtC;YAAC,CACO,CAAC;UAAA,CACD,CAAC;QAAA,CACN;MAAC,CACU,CAAC,eAEpB1B,wDAAA,CAAC8W,sEAAiB;QAACuN,KAAK,EAAC,QAAQ;QAAAjjB,QAAA,gBAChCpB,wDAAA,CAACiW,4DAAS;UAACpR,KAAK,EAAC,mBAAmB;UAACgf,WAAW,EAAE,KAAM;UAAAziB,QAAA,gBACvDtB,uDAAA,CAACoW,2DAAQ;YAAA9U,QAAA,eACRtB,uDAAA,CAACgC,kEAAe;cACfP,KAAK,EAAC,qBAAqB;cAC3BiE,uBAAuB;cACvBhB,OAAO,EAAE8Y;cACT;cAAA;cACAhY,QAAQ,EAAE5D,CAAC,IAAIwe,gBAAgB,CAAC1W,KAAK,EAAE9H,CAAC;YAAE,CAC1C;UAAC,CACO,CAAC,eACX5B,uDAAA,CAACmX,uEAAkB;YAClBgN,iCAAiC;YACjCpf,KAAK,EAAE,kBAAmB;YAC1Bsf,MAAM,EAAErJ,WAAY;YACpBwJ,aAAa,EAAE,CACd;cACCtgB,KAAK,EAAEuZ,eAAe;cACtBjY,QAAQ,EAAEif,QAAQ,IAAIpE,gBAAgB,CAAC3W,KAAK,EAAE,MAAM,EAAE+a,QAAQ,CAAC;cAC/DhjB,KAAK,EAAE;YACR,CAAC,EACD;cACCyC,KAAK,EAAEwZ,wBAAwB;cAC/BlY,QAAQ,EAAEif,QAAQ,IAAIpE,gBAAgB,CAAC3W,KAAK,EAAE,YAAY,EAAE+a,QAAQ,CAAC;cACrEhjB,KAAK,EAAE;YACR,CAAC;UACA,CACF,CAAC;QAAA,CACQ,CAAC,eAEZvB,wDAAA,CAACiW,4DAAS;UAACpR,KAAK,EAAC,YAAY;UAACgf,WAAW,EAAE,KAAM;UAAAziB,QAAA,gBAChDtB,uDAAA,CAACoW,2DAAQ;YAAA9U,QAAA,eACRtB,uDAAA,CAACgC,kEAAe;cACfP,KAAK,EAAC,0BAA0B;cAChCiE,uBAAuB;cACvBhB,OAAO,EAAEqY,aAAc;cACvBvX,QAAQ,EAAE5D,CAAC,IAAIof,eAAe,CAACtX,KAAK,EAAE9H,CAAC;YAAE,CACzC;UAAC,CACO,CAAC,eAEX5B,uDAAA,CAACoW,2DAAQ;YAAA9U,QAAA,eACRtB,uDAAA,CAACmC,8EAAa;cACbV,KAAK,EAAC,uBAAuB;cAC7ByC,KAAK,EAAEyZ,aAAc;cACrBhY,aAAa,EAAC,MAAM;cACpBH,QAAQ,EAAE5D,CAAC,IAAIqf,eAAe,CAACvX,KAAK,EAAE9H,CAAC;YAAE,CACzC;UAAC,CACO,CAAC;QAAA,CACD,CAAC;MAAA,CACM,CAAC,eACpB5B,uDAAA,CAACgX,sEAAiB;QAACuN,KAAK,EAAC;MAAY,CAAoB,CAAC,eAE1DrkB,wDAAA;QAAK+hB,KAAK,EAAE;UAAEyC,OAAO,EAAE;QAAQ,CAAE;QAAApjB,QAAA,GAC/B,CAACwc,SAAS,iBACV9d,uDAAA,CAAC2W,6DAAQ;UACR5L,EAAE,EAAC,YAAY;UACfkX,KAAK,EAAE;YAAE,iBAAiB,EAAErE;UAAc,CAAE;UAC5C+G,OAAO,EAAC,GAAG;UACXC,cAAc,EAAE,CAAC,WAAW,EAAE,aAAa,CAAE;UAC7Cpf,QAAQ,EAAE5D,CAAC,IAAI2Z,kBAAkB,CAAC1R,QAAQ,EAAE,YAAY,EAAE,EAAE,EAAE,MAAM,EAAEjI,CAAC,CAAE;UACzEsC,KAAK,EAAEwF,KAAK,CAACQ;QAAW,CACd,CACX,eAEDlK,uDAAA,CAACqW,oEAAiB;UAAA/U,QAAA,eACjBtB,uDAAA;YACCqF,SAAS,EAAC,eAAe;YACzB4c,KAAK,EAAE;cACN,mBAAmB,EAAEH;cACrB;cACA;YACD,CAAE;YAAAxgB,QAAA,eAEFpB,wDAAA;cACCmF,SAAS,EAAE,eAAe,GAAG0c,oBAAqB;cAClDE,KAAK,EAAE;gBACN,uBAAuB,EAAEf,eAAe;gBACxC,oBAAoB,EAAEO,qBAAqB;gBAC3C,mBAAmB,EAAEK,oBAAoB;gBACzC,kBAAkB,EAAEtH,UAAU;gBAC9B,eAAe,EAAEE,OAAO;gBACxB,iBAAiB,EAAEkD;cACpB,CAAE;cAAAtc,QAAA,GAGD8Y,WAAW,iBACXpa,uDAAA;gBAAKqF,SAAS,EAAE,sBAAuB;gBAAA/D,QAAA,EACrCoI,KAAK,CAACa,KAAK,CACVoB,MAAM,CAACO,IAAI,IAAIA,IAAI,CAAC/B,UAAU,CAACyW,MAAM,IAAI1U,IAAI,CAACL,MAAM,KAAK,GAAG,CAAC,CAC7DO,GAAG,CAAC,CAAC;kBAAEvC,QAAQ;kBAAEgC,MAAM;kBAAEG,SAAS;kBAAEkF,OAAO;kBAAE7E,OAAO;kBAAEjC;gBAAQ,CAAC,KAAK;kBACpE,MAAMya,aAAa,GAAGpN,wDAAgB,CAAC5L,MAAM,EAAEG,SAAS,EAAEK,OAAO,CAAC;kBAClE,MAAMyY,uBAAuB,GAAGpN,6DAAqB,CACpDsC,iBAAiB,EACjBF,aAAa,EACb9N,SACD,CAAC;kBACD,MAAM+Y,aAAa,GAAG/Y,SAAS,KAAK,GAAG,GAAG,IAAI,GAAG,KAAK;kBACtD,oBACC9L,wDAAA,CAAAE,wDAAA;oBAAAkB,QAAA,GAEEyjB,aAAa,IAAIjK,oBAAoB,iBACrC9a,uDAAA;sBAAKqF,SAAS,EAAE;oBAA6B,CAAE,CAC/C,eAEDnF,wDAAA;sBACC6K,EAAE,EAAEmG,OAAQ;sBACZ3L,WAAW,EAAE3D,CAAC,IAAI+d,kBAAkB,CAAC3T,SAAS,EAAEH,MAAM,EAAEnC,KAAK,EAAE9H,CAAC,CAAE;sBAClEyD,SAAS,EAAE+E,OAAQ;sBAAA9I,QAAA,GAElBujB,aAAa,EACbC,uBAAuB,iBACvB9kB,uDAAA,CAACK,oDAAU;wBACVM,OAAO,EAAEkJ,QAAS;wBAClBjJ,QAAQ,EAAEoL,SAAU;wBACpBnL,WAAW,EAAEgkB,aAAc;wBAC3BpkB,gBAAgB,EAAEA,gBAAiB;wBACnCK,iBAAiB,EAAEA,iBAAkB;wBACrCC,aAAa,EAAEye;sBAAe,CAClB,CACb;oBAAA,CACG,CAAC;kBAAA,CACL,CAAC;gBAEL,CAAC;cAAC,CACC,CACL,EAGA9V,KAAK,CAACW,IAAI,CACTsB,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACzB,UAAU,CAACqW,QAAQ,KAAK,IAAI,CAAC,CAC/CpU,GAAG,CAAC,CAAC;gBAAEP;cAAO,CAAC,KAAK;gBACpB,MAAMmZ,WAAW,GAAGnZ,MAAM;gBAC1B,oBACC7L,uDAAA;kBACCqF,SAAS,EAAC,sBAAsB;kBAChC4c,KAAK,EAAE;oBACN,0BAA0B,EAAEd,kBAAkB;oBAC9C,yBAAyB,EAAEE,0BAA0B;oBACrD,uBAAuB,EAAEC,wBAAwB;oBACjD,wBAAwB,EAAEe,oBAAoB;oBAC9C,wBAAwB,EAAEC,oBAAoB;oBAC9C,wBAAwB,EAAEC,oBAAoB;oBAC9C,0BAA0B,EAAEC,sBAAsB;oBAClD,0BAA0B,EAAEC,sBAAsB;oBAClD,0BAA0B,EAAEC,sBAAsB;oBAClD,2BAA2B,EAAEC,uBAAuB;oBACpD,2BAA2B,EAAEC,uBAAuB;oBACpD,2BAA2B,EAAEC,uBAAuB;oBACpD,yBAAyB,EAAEC,qBAAqB;oBAChD,yBAAyB,EAAEC,qBAAqB;oBAChD,yBAAyB,EAAEC,qBAAqB;oBAChD,uBAAuB,EAAEb;kBAC1B,CAAE;kBAAA7gB,QAAA,EAEDoI,KAAK,CAACa,KAAK,CACVoB,MAAM,CAACO,IAAI,IAAIA,IAAI,CAACL,MAAM,KAAKmZ,WAAW,CAAC,CAC3C5Y,GAAG,CACH,CAAC;oBACAvC,QAAQ;oBACRgC,MAAM;oBACNG,SAAS;oBACTkF,OAAO;oBACP7E,OAAO;oBACPlC,UAAU;oBACVC;kBACD,CAAC,KAAK;oBACL,MAAM2a,aAAa,GAAG/Y,SAAS,KAAK,GAAG,GAAG,IAAI,GAAG,KAAK;oBACtD,MAAMiZ,QAAQ,GAAG9a,UAAU,CAACyW,MAAM;oBAClC,MAAMiE,aAAa,GAAGpN,wDAAgB,CAAC5L,MAAM,EAAEG,SAAS,EAAEK,OAAO,CAAC;oBAClE,MAAM6Y,oBAAoB,GAAGvN,0DAAkB,CAC9CuC,cAAc,EACdJ,aAAa,EACbjO,MACD,CAAC;oBACD,MAAMsZ,gBAAgB,GAAGvD,kBAAkB;oBAC3C,MAAMwD,gBAAgB,GAAGvD,kBAAkB;oBAE3C,oBACC3hB,wDAAA,CAAAE,wDAAA;sBAAAkB,QAAA,GAEEyjB,aAAa,IAAIE,QAAQ,IAAInK,oBAAoB,iBACjD9a,uDAAA;wBAAKqF,SAAS,EAAE;sBAA6B,CAAE,CAC/C,EAEA4f,QAAQ,iBACR/kB,wDAAA;wBACC6K,EAAE,EAAEmG,OAAQ;wBACZ3L,WAAW,EAAE3D,CAAC,IACb+d,kBAAkB,CAAC3T,SAAS,EAAEH,MAAM,EAAEnC,KAAK,EAAE9H,CAAC,CAC9C;wBACDyD,SAAS,EAAE+E,OAAQ;wBAAA9I,QAAA,GAElBujB,aAAa,EACbK,oBAAoB,iBACpBllB,uDAAA,CAAC0H,iDAAO;0BACP/G,OAAO,EAAEkJ,QAAS;0BAClB7B,KAAK,EAAE6D,MAAO;0BACd5F,QAAQ,EAAE4e,aAAc;0BACxB3e,aAAa,EAAEA,aAAc;0BAC7B+B,UAAU,EAAEyX;wBAAY,CACf,CACV;sBAAA,CACG,CACL,EAEAqF,aAAa,IAAIjK,oBAAoB,iBACrC9a,uDAAA;wBACCqF,SAAS,EAAE,4BAA6B;wBACxC4c,KAAK,EAAE;0BACN,iBAAiB,EAAEkD,gBAAgB;0BACnC,iBAAiB,EAAEC;wBACpB;sBAAE,CACG,CACN,EACA,CAACH,QAAQ,iBACTjlB,uDAAA,CAAC2W,6DAAQ;wBACR5L,EAAE,EAAEmG,OAAQ;wBACZ7L,SAAS,EAAE,4BAA6B;wBACxC4c,KAAK,EAAE;0BACN,iBAAiB,EAAEkD,gBAAgB;0BACnC,iBAAiB,EAAEC;wBACpB,CAAE;wBACFC,QAAQ,EAAC,GAAG;wBACZV,OAAO,EAAC,KAAK;wBACbnf,QAAQ,EAAE5D,CAAC,IACV2Z,kBAAkB,CACjB1R,QAAQ,EACR,MAAM,EACNqH,OAAO,EACP,SAAS,EACTtP,CACD,CACA;wBACDsC,KAAK,EAAEmI;sBAAQ,CACL,CACX;oBAAA,CACA,CAAC;kBAEL,CACD;gBAAC,CACE,CAAC;cAER,CAAC,CAAC,eAGHrM,uDAAA;gBACCqF,SAAS,EAAE,oBAAqB;gBAChC4c,KAAK,EAAE;kBACN,wBAAwB,EAAEb,gBAAgB;kBAC1C,uBAAuB,EAAEG,wBAAwB;kBACjD,qBAAqB,EAAEC,sBAAsB;kBAC7C,sBAAsB,EAAE2B,kBAAkB;kBAC1C,sBAAsB,EAAEC,kBAAkB;kBAC1C,sBAAsB,EAAEC,kBAAkB;kBAC1C,wBAAwB,EAAEC,oBAAoB;kBAC9C,wBAAwB,EAAEC,oBAAoB;kBAC9C,wBAAwB,EAAEC,oBAAoB;kBAC9C,yBAAyB,EAAEC,qBAAqB;kBAChD,yBAAyB,EAAEC,qBAAqB;kBAChD,yBAAyB,EAAEC,qBAAqB;kBAChD,uBAAuB,EAAEC,mBAAmB;kBAC5C,uBAAuB,EAAEC,mBAAmB;kBAC5C,uBAAuB,EAAEC,mBAAmB;kBAC5C,qBAAqB,EAAEb;gBACxB,CAAE;gBAAA3hB,QAAA,EAGDoI,KAAK,CAACW,IAAI,CACTsB,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACzB,UAAU,CAACqW,QAAQ,KAAK,IAAI,IAAI5U,GAAG,CAACC,MAAM,KAAK,GAAG,CAAC,CACrEO,GAAG,CAAC,CAAC;kBAAEP;gBAAO,CAAC,KAAK;kBACpB,MAAMmZ,WAAW,GAAGnZ,MAAM;;kBAE1B;AACZ;AACA;kBACY,IAAIyZ,iBAAiB,GAAG,EAAE;kBAE1B,MAAMC,eAAe,GAAGtI,eAAe,GAAG,CAAC,GAAG,CAAC;kBAC/C,IAAIO,UAAU,IAAI+H,eAAe,IAAI,CAAC,IAAIhhB,MAAM,CAACsH,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBACnEyZ,iBAAiB,GAChBA,iBAAiB,GAAG,sCAAsC;kBAC5D;kBAEA,IACC9H,UAAU,IACV+H,eAAe,IAAI,CAAC,IACpBhhB,MAAM,CAACsH,MAAM,CAAC,GAAG,CAAC,IAClB,CAACtH,MAAM,CAACsH,MAAM,CAAC,GAAG0Z,eAAe,IAAI,CAAC,KAAK,CAAC,EAC3C;oBACDD,iBAAiB,GAChBA,iBAAiB,GAAG,sCAAsC;kBAC5D;kBAEA,oBACCtlB,uDAAA;oBACCqF,SAAS,EAAE,yBAAyB,GAAGigB,iBAAkB;oBACzDrD,KAAK,EAAE;sBACN,sBAAsB,EAAEP,sBAAsB;sBAC9C,4BAA4B,EAAEC;oBAC/B,CAAE;oBAAArgB,QAAA,EAGDoI,KAAK,CAACa,KAAK,CACVoB,MAAM,CAACO,IAAI,IAAIA,IAAI,CAACL,MAAM,KAAKmZ,WAAW,CAAC,CAC3C5Y,GAAG,CACH,CAAC;sBACAvC,QAAQ;sBACRgC,MAAM;sBACNG,SAAS;sBACTkF,OAAO;sBACP7E,OAAO;sBACPlC,UAAU;sBACVC;oBACD,CAAC,KAAK;sBACL;AACjB;AACA;sBACiB,MAAM2a,aAAa,GAAG/Y,SAAS,KAAK,GAAG,GAAG,IAAI,GAAG,KAAK;sBACtD,MAAMiZ,QAAQ,GAAG9a,UAAU,CAACyW,MAAM;sBAClC,MAAMiE,aAAa,GAAGpN,wDAAgB,CACrC5L,MAAM,EACNG,SAAS,EACTK,OACD,CAAC;sBACD,MAAM6Y,oBAAoB,GAAGvN,0DAAkB,CAC9CuC,cAAc,EACdJ,aAAa,EACbjO,MACD,CAAC;sBACD,MAAMsZ,gBAAgB,GAAGvD,kBAAkB;sBAC3C,MAAMwD,gBAAgB,GAAGvD,kBAAkB;sBAE3C,oBACC3hB,wDAAA,CAAAE,wDAAA;wBAAAkB,QAAA,GAEEyjB,aAAa,IAAIE,QAAQ,IAAInK,oBAAoB,iBACjD9a,uDAAA;0BAAKqF,SAAS,EAAE;wBAA6B,CAAE,CAC/C,EAEA4f,QAAQ,iBACR/kB,wDAAA;0BACC6K,EAAE,EAAEmG,OAAQ;0BACZ3L,WAAW,EAAE3D,CAAC,IACb+d,kBAAkB,CAAC3T,SAAS,EAAEH,MAAM,EAAEnC,KAAK,EAAE9H,CAAC,CAC9C;0BACDyD,SAAS,EAAE+E,OAAQ;0BAAA9I,QAAA,GAElBujB,aAAa,EACbK,oBAAoB,iBACpBllB,uDAAA,CAAC0H,iDAAO;4BACP/G,OAAO,EAAEkJ,QAAS;4BAClB7B,KAAK,EAAE6D,MAAO;4BACd5F,QAAQ,EAAE4e,aAAc;4BACxB3e,aAAa,EAAEA,aAAc;4BAC7B+B,UAAU,EAAEyX;0BAAY,CACf,CACV;wBAAA,CACG,CACL,EAGAqF,aAAa,IAAI,CAACE,QAAQ,IAAInK,oBAAoB,iBAClD9a,uDAAA;0BACCqF,SAAS,EACR,yDACA;0BACD4c,KAAK,EAAE;4BACN,iBAAiB,EAAEkD,gBAAgB;4BACnC,iBAAiB,EAAEC;0BACpB,CAAE;0BAAA9jB,QAAA,eAEFtB,uDAAA,CAACiC,yDAAM;4BAACujB,IAAI,EAAC,GAAG;4BAACjkB,IAAI,EAAE6V,yDAAMA;0BAAC,CAAE;wBAAC,CAC7B,CACL,EAEA,CAAC6N,QAAQ,iBACTjlB,uDAAA,CAAC2W,6DAAQ;0BACR5L,EAAE,EAAEmG,OAAQ;0BACZ7L,SAAS,EAAE,2BAA2B,GAAG+E,OAAQ;0BACjD6X,KAAK,EAAE;4BACN,iBAAiB,EAAEkD,gBAAgB;4BACnC,iBAAiB,EAAEC;0BACpB,CAAE;0BACFC,QAAQ,EAAC,GAAG;0BACZV,OAAO,EAAC,KAAK;0BACbnf,QAAQ,EAAE5D,CAAC,IACV2Z,kBAAkB,CACjB1R,QAAQ,EACR,MAAM,EACNqH,OAAO,EACP,SAAS,EACTtP,CACD,CACA;0BACDsC,KAAK,EAAEmI;wBAAQ,CACL,CACX;sBAAA,CACA,CAAC;oBAEL,CACD;kBAAC,CACE,CAAC;gBAER,CAAC;cAAC,CACC,CAAC;YAAA,CACF;UAAC,CACF;QAAC,CACY,CAAC;MAAA,CAChB,CAAC;IAAA,CACL,CACF,EAGA,CAACuP,UAAU,IAAII,gBAAgB,iBAAIhc,uDAAA,CAACsW,0DAAO;MAAAhV,QAAA,EAAC;IAAqB,CAAS,CAAC,EAG3Esa,UAAU,iBACV5b,uDAAA,CAACuW,8DAAW;MACX9U,KAAK,EAAEwU,mDAAE,CAAC,eAAe,CAAE;MAC3B1U,IAAI,eAAEvB,uDAAA,CAAC8W,8DAAS;QAACvV,IAAI,EAAEA,yDAAK;QAACkkB,UAAU;MAAA,CAAE,CAAE;MAC3CC,YAAY,EAAEzP,mDAAE,CAAC,6BAA6B,CAAE;MAAA3U,QAAA,eAEhDpB,wDAAA;QAAMmF,SAAS,EAAC,gCAAgC;QAACC,QAAQ,EAAEyZ,aAAc;QAAAzd,QAAA,gBACxEtB,uDAAA,CAACyW,6EAAY;UACZhV,KAAK,EAAEwU,mDAAE,CAAC,YAAY,CAAE;UACxB0P,WAAW,EAAC,WAAW;UACvBC,QAAQ,EAAC,MAAM;UACfpgB,QAAQ,EAAE5D,CAAC,IAAI2Y,YAAY,CAAC3Y,CAAC,CAAE;UAC/BsC,KAAK,EAAEoW,SAAU;UACjBjV,SAAS,EAAC;QAAiC,CAC3C,CAAC,eAEFrF,uDAAA,CAACmC,8EAAa;UACbuD,uBAAuB;UACvBjE,KAAK,EAAEwU,mDAAE,CAAC,eAAe,CAAE;UAC3B4P,GAAG,EAAE,CAAE;UACPD,QAAQ,EAAC,MAAM;UACf1hB,KAAK,EAAEsW,UAAW;UAClBhV,QAAQ,EAAE5D,CAAC,IAAIod,0BAA0B,CAACpd,CAAC,CAAE;UAC7CyD,SAAS,EAAC;QAAiC,CAC3C,CAAC,eAEFrF,uDAAA,CAACmC,8EAAa;UACbuD,uBAAuB;UACvBjE,KAAK,EAAEwU,mDAAE,CAAC,YAAY,CAAE;UACxB2P,QAAQ,EAAC,MAAM;UACfC,GAAG,EAAE,CAAE;UACP3hB,KAAK,EAAEwW,OAAQ;UACflV,QAAQ,EAAE5D,CAAC,IAAIyd,uBAAuB,CAACzd,CAAC,CAAE;UAC1CyD,SAAS,EAAC;QAAiC,CAC3C,CAAC,eACFrF,uDAAA,CAACiC,yDAAM;UAACoD,SAAS,EAAC,kCAAkC;UAACQ,OAAO,EAAC,SAAS;UAACC,IAAI,EAAC,QAAQ;UAAAxE,QAAA,EAClF2U,mDAAE,CAAC,cAAc;QAAC,CACZ,CAAC;MAAA,CACJ;IAAC,CACK,CACb;EAAA,CACG,CAAC;AAER;;;;;;;;;;;ACz0DA;;;;;;;;;;;;;;;;;;;;;ACAyD;AACR;AACL;;AAE5C;AACA;AACA;AACA;AACA;AACO,MAAMsB,mBAAmB,GAAGA,CAAA,KAAM;EACxC,MAAM,CAACwO,eAAe,EAAEC,kBAAkB,CAAC,GAAG1mB,4DAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM;IAAE2mB;EAAkB,CAAC,GAAGrQ,0DAAS,CAACnL,MAAM,IAAI;IACjD,OAAO;MACNwb,iBAAiB,EAAExb,MAAM,CAAC,aAAa,CAAC,CAACyb,iBAAiB,CAAC;IAC5D,CAAC;EACF,CAAC,CAAC;EACF,MAAMC,iBAAiB,GAAGL,+DAAW,CAACG,iBAAiB,CAAC;EAExD5mB,6DAAS,CAAC,MAAM;IACf,IAAI,CAAC4mB,iBAAiB,IAAIE,iBAAiB,EAAE;MAC5CH,kBAAkB,CAAC,IAAI,CAAC;IACzB;IACA,IAAIC,iBAAiB,EAAE;MACtBD,kBAAkB,CAAC,KAAK,CAAC;IAC1B;EACD,CAAC,EAAE,CAACC,iBAAiB,EAAEE,iBAAiB,CAAC,CAAC;EAE1C,OAAOJ,eAAe;AACvB,CAAC;;;;;;;;;;;;;;;;AC5BqD;AAChC;AACI;AACU;;AAEpC;AACApc,OAAO,CAACC,GAAG,CAACyc,6CAAa,CAAC;AAE1BD,oEAAiB,CAACC,6CAAa,EAAE;EAChC;EACA;EACAC,UAAU,EAAE,CAAC;EACbC,IAAI,EAAEhN,6CAAI;EACViN,IAAIA,CAAClmB,KAAK,EAAE;IACX,OAAO,IAAI;EACZ;AACD,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AChBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,SAAS2X,cAAcA,CAAC2D,UAAU,EAAEI,gBAAgB,EAAElB,oBAAoB,EAAExQ,OAAO,EAAE;EAC3F,IAAIsR,UAAU,IAAII,gBAAgB,EAAE;IACnC,OAAOyK,SAAS;EACjB;EAEA,IAAIC,kBAAkB,GAAG,EAAE;EAC3B;IACCpc,OAAO,CAAC8B,GAAG,CAAC,CAAC;MAAEJ,SAAS;MAAE2E,WAAW;MAAExG,UAAU;MAAEC;IAAQ,CAAC,KAAK;MAChE,MAAM;QACLhI,eAAe;QACfM,QAAQ;QACRE,aAAa;QACbE,QAAQ;QACRE,aAAa;QACbE,UAAU;QACVY,eAAe;QACfP,gBAAgB;QAChBF;MACD,CAAC,GAAG8G,UAAU;MAEd,IAAIwc,MAAM,GAAG,EAAE;MAEf,IAAI3a,SAAS,KAAK,GAAG,IAAI8O,oBAAoB,EAAE;QAC9C4L,kBAAkB,GAAGA,kBAAkB,GAAG,OAAO;MAClD;MACA,QAAQtkB,eAAe;QACtB,KAAK,cAAc;UAAE;YACpB,IAAIM,QAAQ,GAAG,CAAC,EAAE;cACjBikB,MAAM,GAAG,SAAS,GAAGjkB,QAAQ,GAAGE,aAAa,GAAG,IAAI,GAAGE,QAAQ,GAAG,MAAM;YACzE,CAAC;cACA;cACA6jB,MAAM,GAAG7jB,QAAQ,GAAG,KAAK;YAC1B4jB,kBAAkB,GAAGA,kBAAkB,GAAGC,MAAM;YAChD;UACD;QACA,KAAK,MAAM;UAAE;YACZD,kBAAkB,GAAGA,kBAAkB,GAAG,OAAO;YACjD;UACD;QACA,KAAK,OAAO;UAAE;YACbA,kBAAkB,GAAGA,kBAAkB,GAAGxjB,UAAU,GAAGY,eAAe,GAAG,GAAG;YAC5E;UACD;QACA,KAAK,QAAQ;UAAE;YACd6iB,MAAM,GAAG,SAAS,GAAGjkB,QAAQ,GAAGE,aAAa,GAAG,IAAI,GAAGE,QAAQ,GAAGE,aAAa,GAAG,IAAI;YACtF0jB,kBAAkB,GAAGA,kBAAkB,GAAGC,MAAM;YAChD;UACD;QACA;UACChd,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MAC3C;IACD,CAAC,CAAC;EACH;EACA,OAAO8c,kBAAkB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASxO,gBAAgBA,CAAC0D,UAAU,EAAEI,gBAAgB,EAAE3R,IAAI,EAAE;EACpE,IAAIuR,UAAU,IAAII,gBAAgB,EAAE;IACnC,OAAOyK,SAAS;EACjB;EAEA,IAAIG,eAAe,GAAG,EAAE;EACxB;IACCvc,IAAI,CAAC+B,GAAG,CAAC,CAAC;MAAEP,MAAM;MAAE1B,UAAU;MAAEC;IAAQ,CAAC,KAAK;MAC7C,MAAM;QACLjE,aAAa;QACbG,SAAS;QACTE,cAAc;QACdE,SAAS;QACTE,cAAc;QACdE,WAAW;QACXE,gBAAgB;QAChBwZ;MACD,CAAC,GAAGrW,UAAU;MAEd,IAAIwc,MAAM,GAAG,EAAE;MAEf,IAAInG,QAAQ,EAAE;QACb,QAAQra,aAAa;UACpB,KAAK,MAAM;YAAE;cACZygB,eAAe,GAAGA,eAAe,GAAG,OAAO;cAC3C;YACD;UACA,KAAK,OAAO;YAAE;cACbA,eAAe,GAAGA,eAAe,GAAG9f,WAAW,GAAGE,gBAAgB,GAAG,GAAG;cACxE;YACD;UACA,KAAK,QAAQ;YAAE;cACd2f,MAAM,GACL,SAAS,GAAGrgB,SAAS,GAAGE,cAAc,GAAG,IAAI,GAAGE,SAAS,GAAGE,cAAc,GAAG,IAAI;cAClFggB,eAAe,GAAGA,eAAe,GAAGD,MAAM;cAC1C;YACD;UACA;YACChd,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QAC3C;MACD;IACD,CAAC,CAAC;EACH;EACA,OAAOgd,eAAe;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASzO,eAAeA,CAACyD,UAAU,EAAEI,gBAAgB,EAAE3R,IAAI,EAAE;EACnE,IAAIuR,UAAU,IAAII,gBAAgB,EAAE;IACnC,OAAOyK,SAAS;EACjB;EAEA,IAAIG,eAAe,GAAG,EAAE;EACxB;IACCvc,IAAI,CAAC+B,GAAG,CAAC,CAAC;MAAEP,MAAM;MAAE1B,UAAU;MAAEC;IAAQ,CAAC,KAAK;MAC7C,MAAM;QACLjE,aAAa;QACbG,SAAS;QACTE,cAAc;QACdE,SAAS;QACTE,cAAc;QACdE,WAAW;QACXE,gBAAgB;QAChBwZ;MACD,CAAC,GAAGrW,UAAU;MAEd,IAAIwc,MAAM,GAAG,EAAE;MAEf,IAAI,CAACnG,QAAQ,EAAE;QACd,QAAQra,aAAa;UACpB,KAAK,MAAM;YAAE;cACZygB,eAAe,GAAGA,eAAe,GAAG,OAAO;cAC3C;YACD;UACA,KAAK,OAAO;YAAE;cACbA,eAAe,GAAGA,eAAe,GAAG9f,WAAW,GAAGE,gBAAgB,GAAG,GAAG;cACxE;YACD;UACA,KAAK,QAAQ;YAAE;cACd2f,MAAM,GACL,SAAS,GAAGrgB,SAAS,GAAGE,cAAc,GAAG,IAAI,GAAGE,SAAS,GAAGE,cAAc,GAAG,IAAI;cAClFggB,eAAe,GAAGA,eAAe,GAAGD,MAAM;cAC1C;YACD;UACA;YACChd,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QAC3C;MACD;IACD,CAAC,CAAC;EACH;EACA,OAAOgd,eAAe;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASxO,2BAA2BA,CAACwD,UAAU,EAAEI,gBAAgB,EAAEd,KAAK,EAAE;EAChF,IAAIU,UAAU,IAAII,gBAAgB,EAAE;IACnC,OAAOyK,SAAS;EACjB;EACA,OAAOvL,KAAK;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS7C,iCAAiCA,CAACuD,UAAU,EAAEI,gBAAgB,EAAEd,KAAK,EAAE;EACtF,IAAIU,UAAU,IAAII,gBAAgB,EAAE;IACnC,OAAOyK,SAAS;EACjB;EACA,OAAOvL,KAAK;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASxC,iCAAiCA,CAChDkD,UAAU,EACVI,gBAAgB,EAChB6K,UAAU,EACVC,UAAU,EACT;EACD,IAAIlL,UAAU,IAAII,gBAAgB,EAAE;IACnC,OAAOyK,SAAS;EACjB;EAEA,IAAII,UAAU,EAAE;IACf,OAAOA,UAAU;EAClB;EAEA,OAAOC,UAAU;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASxO,oBAAoBA,CAACsD,UAAU,EAAEI,gBAAgB,EAAEe,aAAa,EAAE;EACjF,IAAInB,UAAU,IAAII,gBAAgB,EAAE;IACnC,OAAOyK,SAAS;EACjB;EACA,IAAI1J,aAAa,EAAE;IAClB,OAAO,OAAO;EACf;EAEA,OAAO,QAAQ;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASxE,yBAAyBA,CACxCqD,UAAU,EACVI,gBAAgB,EAChBe,aAAa,EACbY,aAAa,EACZ;EACD,IAAI/B,UAAU,IAAII,gBAAgB,EAAE;IACnC,OAAOyK,SAAS;EACjB;EAEA,IAAI,CAAC1J,aAAa,EAAE;IACnB,OAAO,KAAK;EACb;EAEA,OAAOzO,MAAM,CAACqP,aAAa,CAAC,GAAG,IAAI;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASnF,eAAeA,CAACuO,YAAY,EAAE3M,WAAW,EAAE;EAC1D,IAAI4M,aAAa,GAAG,CAAC;EACrBA,aAAa,GAAGD,YAAY,GAAGC,aAAa,GAAG,CAAC,GAAGA,aAAa;EAChEA,aAAa,GAAG5M,WAAW,GAAG4M,aAAa,GAAG,CAAC,GAAGA,aAAa;EAE/D,OAAOA,aAAa;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASvO,aAAaA,CAC5BuO,aAAa,EACbC,QAAQ,EACRvM,OAAO,EACPqM,YAAY,EACZ3M,WAAW,EACX8M,YAAY,CAAC;AAAA,EACZ;EACD,IAAIC,WAAW;EAEf,QAAQF,QAAQ;IACf,KAAK,QAAQ;MAAE;QACdE,WAAW,GAAG,CAAC;QACfA,WAAW,GAAG/M,WAAW,GAAG+M,WAAW,EAAE,GAAGA,WAAW;QACvD;MACD;IACA,KAAK,MAAM;MAAE;QACZA,WAAW,GAAGH,aAAa,GAAGtM,OAAO;QACrCyM,WAAW,GAAG/M,WAAW,GAAG+M,WAAW,EAAE,GAAGA,WAAW;QACvDA,WAAW,GAAGJ,YAAY,GAAGI,WAAW,GAAG,CAAC,GAAGA,WAAW;QAC1DA,WAAW,GAAGD,YAAY,GAAGC,WAAW,GAAG,CAAC,GAAGA,WAAW;QAC1D;MACD;IACA;MACCxd,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EACjC;EAEA,OAAOud,WAAW;AACnB;AAEO,SAASxO,2BAA2BA,CAACiD,UAAU,EAAEI,gBAAgB,EAAEoL,aAAa,EAAE;EACxF,IAAIxL,UAAU,IAAII,gBAAgB,EAAE;IACnC,OAAOyK,SAAS;EACjB;EAEA,OAAOW,aAAa;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASxO,kBAAkBA,CAACgI,MAAM,EAAE;EAC1C,IAAIA,MAAM,EAAE;IACX,MAAMyG,aAAa,GAAGva,MAAM,CAACwa,OAAO,CAAC1G,MAAM,CAAC;IAC5C,KAAK,IAAI1C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmJ,aAAa,CAAC9R,MAAM,EAAE2I,CAAC,EAAE,EAAE;MAC9C,IACCmJ,aAAa,CAACnJ,CAAC,CAAC,CAACqJ,IAAI,CAACrjB,KAAK,IAAI;QAC9B,OAAO,OAAOA,KAAK,IAAI,QAAQ;MAChC,CAAC,CAAC,EACD;QACD,OAAO,OAAO;MACf;IACD;IACA,OAAO,MAAM;EACd;EACA,OAAO,SAAS;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2U,cAAcA,CAAC+H,MAAM,EAAE4G,cAAc,EAAEC,eAAe,EAAEC,UAAU,EAAE;EACnF,QAAQA,UAAU;IACjB,KAAK,OAAO;MAAE;QACb,OAAO9G,MAAM,CAAC4G,cAAc,CAAC,CAACC,eAAe,CAAC;MAC/C;IAEA,KAAK,MAAM;MAAE;QACZ,OAAO7G,MAAM,CAAC6G,eAAe,CAAC;MAC/B;IAEA;MAAS;QACR,QAAQA,eAAe;UACtB,KAAK,OAAO;YAAE;cACb,OAAO,OAAO;YACf;UAEA,KAAK,OAAO;YAAE;cACb,OAAO,OAAO;YACf;UAEA,KAAK,OAAO;YAAE;cACb,OAAO,KAAK;YACb;QACD;MACD;EACD;AACD;;;;;;;;;;;ACxaA;;;;;;;;;;;;;;;;;;;;;;ACAA;AACyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS5P,SAASA,CAACiH,gBAAgB,EAAEF,WAAW,EAAEC,QAAQ,EAAEvE,SAAS,EAAE;EAC7E,MAAMvL,UAAU,GAAG4Y,cAAc,CAACpjB,MAAM,CAACqa,WAAW,CAAC,EAAEra,MAAM,CAACsa,QAAQ,CAAC,CAAC;EACxE,MAAM+I,QAAQ,GAAG,EAAE;EAEnB,KAAK,IAAI1J,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIW,QAAQ,EAAEX,CAAC,EAAE,EAAE;IACnC,MAAMtS,GAAG,GAAGkM,aAAa,CAAC,GAAG,EAAEoG,CAAC,CAAC;IACjC0J,QAAQ,CAACzX,IAAI,CAACvE,GAAG,CAAC;EACnB;EAEA,MAAMic,WAAW,GAAG,EAAE;EAEtB,KAAK,IAAI3J,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIU,WAAW,EAAEV,CAAC,EAAE,EAAE;IACtC,MAAMnS,MAAM,GAAGgM,gBAAgB,CAAC,GAAG,EAAEmG,CAAC,CAAC;IACvC2J,WAAW,CAAC1X,IAAI,CAACpE,MAAM,CAAC;EACzB;EAEA,MAAMlB,QAAQ,GAAG;IAChBnB,KAAK,EAAE;MACNG,QAAQ,EAAE,GAAG;MACbE,eAAe,EAAE+U,gBAAgB;MACjC7U,OAAO,EAAE,GAAG;MACZD,YAAY,EAAE,KAAK;MACnBE,UAAU,EAAEoQ,SAAS;MACrBnQ,UAAU,EAAE2d,yBAAyB,CAAC,OAAO,CAAC;MAC9C1d,OAAO,EAAE2d,sBAAsB,CAAC,OAAO,CAAC;MACxC1d,IAAI,EAAEud,QAAQ;MACdtd,OAAO,EAAEud,WAAW;MACpBtd,KAAK,EAAEwE;IACR;EACD,CAAC;EAED,OAAOlE,QAAQ;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8c,cAAcA,CAACK,gBAAgB,EAAEC,aAAa,EAAE;EAC/D,MAAMlZ,UAAU,GAAG,EAAE;EAErB,IAAIwR,CAAC,GAAG,CAAC;EACT,IAAI2H,CAAC,GAAG,CAAC;EAET,OAAOA,CAAC,IAAID,aAAa,EAAE;IAC1B,OAAO1H,CAAC,IAAIyH,gBAAgB,EAAE;MAC7B,IAAIE,CAAC,IAAI,CAAC,EAAE;QACX,MAAMhc,IAAI,GAAG8L,cAAc,CAAC,GAAG,EAAE1J,MAAM,CAACiS,CAAC,CAAC,EAAEjS,MAAM,CAAC4Z,CAAC,CAAC,CAAC;QACtDnZ,UAAU,CAACoB,IAAI,CAACjE,IAAI,CAAC;MACtB,CAAC,MAAM;QACN,MAAMA,IAAI,GAAG8L,cAAc,CAAC,GAAG,EAAE1J,MAAM,CAACiS,CAAC,CAAC,EAAEjS,MAAM,CAAC4Z,CAAC,CAAC,CAAC;QACtDnZ,UAAU,CAACoB,IAAI,CAACjE,IAAI,CAAC;MACtB;MACAqU,CAAC,EAAE;IACJ;IACAA,CAAC,GAAG,CAAC;IACL2H,CAAC,EAAE;EACJ;EACA,OAAOnZ,UAAU;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS+I,aAAaA,CAACnX,OAAO,EAAEqH,KAAK,EAAEmgB,WAAW,GAAG,MAAM,EAAE;EACnE,IAAIvc,GAAG;EACP,IAAIuc,WAAW,KAAK,QAAQ,EAAE;IAC7Bvc,GAAG,GAAG;MACL/B,QAAQ,EAAEyE,MAAM,CAAC3N,OAAO,CAAC;MACzBkL,MAAM,EAAEyC,MAAM,CAACtG,KAAK,CAAC;MACrBmC,UAAU,EAAE2d,yBAAyB,CAAC,MAAM,EAAEK,WAAW,CAAC;MAC1D/d,OAAO,EAAE2d,sBAAsB,CAAC,MAAM;IACvC,CAAC;EACF,CAAC,MAAM;IACNnc,GAAG,GAAG;MACL/B,QAAQ,EAAEyE,MAAM,CAAC3N,OAAO,CAAC;MACzBkL,MAAM,EAAEyC,MAAM,CAACtG,KAAK,CAAC;MACrBmC,UAAU,EAAE2d,yBAAyB,CAAC,MAAM,EAAEK,WAAW,CAAC;MAC1D/d,OAAO,EAAE2d,sBAAsB,CAAC,MAAM;IACvC,CAAC;EACF;EACA,OAAOnc,GAAG;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASmM,gBAAgBA,CAACpX,OAAO,EAAEC,QAAQ,EAAEwnB,cAAc,GAAG,MAAM,EAAE;EAC5E,IAAIrc,MAAM;EACV,IAAIqc,cAAc,KAAK,QAAQ,EAAE;IAChCrc,MAAM,GAAG;MACRlC,QAAQ,EAAEyE,MAAM,CAAC3N,OAAO,CAAC;MACzBqL,SAAS,EAAEsC,MAAM,CAAC1N,QAAQ,CAAC;MAC3B+P,WAAW,EAAE,QAAQ;MACrBxG,UAAU,EAAE2d,yBAAyB,CAAC,SAAS,EAAEM,cAAc,CAAC;MAChEhe,OAAO,EAAE;IACV,CAAC;EACF,CAAC,MAAM;IACN2B,MAAM,GAAG;MACRlC,QAAQ,EAAEyE,MAAM,CAAC3N,OAAO,CAAC;MACzBqL,SAAS,EAAEsC,MAAM,CAAC1N,QAAQ,CAAC;MAC3B+P,WAAW,EAAE,UAAU;MACvBxG,UAAU,EAAE2d,yBAAyB,CAAC,SAAS,EAAEM,cAAc,CAAC;MAChEhe,OAAO,EAAE2d,sBAAsB,CAAC,SAAS;IAC1C,CAAC;EACF;EACA,OAAOhc,MAAM;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASiM,cAAcA,CAACrX,OAAO,EAAEC,QAAQ,EAAEoH,KAAK,EAAEqgB,YAAY,GAAG,MAAM,EAAE;EAC/E,IAAInc,IAAI;EACR,MAAMoc,YAAY,GAAG/Y,sDAAc,CAAC3O,QAAQ,CAAC;EAC7C,MAAMikB,aAAa,GAAG7c,KAAK,IAAI,CAAC,GAAGsgB,YAAY,GAAGha,MAAM,CAACtG,KAAK,CAAC;EAE/D,IAAIqgB,YAAY,KAAK,QAAQ,EAAE;IAC9Bnc,IAAI,GAAG;MACNrC,QAAQ,EAAEyE,MAAM,CAAC3N,OAAO,CAAC;MACzBqL,SAAS,EAAEsC,MAAM,CAAC1N,QAAQ,CAAC;MAC3BiL,MAAM,EAAEyC,MAAM,CAACtG,KAAK,CAAC;MACrBkJ,OAAO,EAAElJ,KAAK,KAAK,CAAC,GAAGsgB,YAAY,GAAG,GAAG,GAAG,GAAG,GAAGha,MAAM,CAAC1N,QAAQ,CAAC;MAClEuJ,UAAU,EAAE2d,yBAAyB,CAAC,OAAO,EAAEO,YAAY,CAAC;MAC5Dje,OAAO,EAAE,kCAAkC;MAC3CiC,OAAO,EAAEwY;IACV,CAAC;EACF,CAAC,MAAM;IACN3Y,IAAI,GAAG;MACNrC,QAAQ,EAAEyE,MAAM,CAAC3N,OAAO,CAAC;MACzBqL,SAAS,EAAEsC,MAAM,CAAC1N,QAAQ,CAAC;MAC3BiL,MAAM,EAAEyC,MAAM,CAACtG,KAAK,CAAC;MACrBkJ,OAAO,EAAEoX,YAAY,GAAGtgB,KAAK;MAC7BmC,UAAU,EAAE2d,yBAAyB,CAAC,OAAO,EAAEO,YAAY,CAAC;MAC5Dje,OAAO,EAAE2d,sBAAsB,CAAC,OAAO,CAAC;MACxC1b,OAAO,EAAE;IACV,CAAC;EACF;EACA,OAAOH,IAAI;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4b,yBAAyBA,CAACS,cAAc,EAAEC,iBAAiB,GAAG,MAAM,EAAE;EACrF,MAAMC,mBAAmB,GAAG;IAC3B1L,aAAa,EAAE,IAAI;IACnBS,UAAU,EAAE,KAAK;IACjBE,wBAAwB,EAAE,SAAS;IACnCD,eAAe,EAAE,SAAS;IAC1BE,aAAa,EAAE,CAAC;IAChBX,qBAAqB,EAAE,IAAI;IAC3BC,eAAe,EAAE,KAAK;IACtBC,eAAe,EAAE,QAAQ;IACzBE,eAAe,EAAE,KAAK;IACtBC,YAAY,EAAE;MAAEnC,KAAK,EAAE,OAAO;MAAE+G,KAAK,EAAE,OAAO;MAAEyG,KAAK,EAAE;IAAM,CAAC;IAC9D5jB,mBAAmB,EAAE,MAAM;IAC3BwY,aAAa,EAAEmJ,SAAS;IACxBlJ,UAAU,EAAE;MAAErC,KAAK,EAAE,OAAO;MAAE+G,KAAK,EAAE,OAAO;MAAEyG,KAAK,EAAE;IAAM,CAAC;IAC5D7K,iBAAiB,EAAE,MAAM;IACzBC,SAAS,EAAE;EACZ,CAAC;EAED,MAAMrd,gBAAgB,GAAG;IACxB2B,eAAe,EAAE,cAAc;IAC/BM,QAAQ,EAAE,CAAC;IACXE,aAAa,EAAE,IAAI;IACnBE,QAAQ,EAAE,CAAC;IACXE,aAAa,EAAE,IAAI;IACnBE,UAAU,EAAE,CAAC;IACbY,eAAe,EAAE,IAAI;IACrBP,gBAAgB,EAAE,KAAK;IACvBF,eAAe,EAAE,KAAK;IACtBwB,sBAAsB,EAAE,KAAK;IAC7BC,mBAAmB,EAAE;EACtB,CAAC;EAED,MAAM6jB,sBAAsB,GAAG;IAC9BvmB,eAAe,EAAE,OAAO;IACxBM,QAAQ,EAAE,CAAC;IACXE,aAAa,EAAE,EAAE;IACjBE,QAAQ,EAAE,CAAC;IACXE,aAAa,EAAE,EAAE;IACjBE,UAAU,EAAE,EAAE;IACdY,eAAe,EAAE,IAAI;IACrBP,gBAAgB,EAAE,KAAK;IACvBF,eAAe,EAAE,KAAK;IACtBwB,sBAAsB,EAAE,KAAK;IAC7BC,mBAAmB,EAAE;EACtB,CAAC;EAED,MAAMoB,aAAa,GAAG;IACrBC,aAAa,EAAE,MAAM;IACrBG,SAAS,EAAE,CAAC;IACZE,cAAc,EAAE,IAAI;IACpBE,SAAS,EAAE,CAAC;IACZE,cAAc,EAAE,IAAI;IACpBE,WAAW,EAAE,CAAC;IACdE,gBAAgB,EAAE,IAAI;IACtBwZ,QAAQ,EAAE,KAAK;IACf3C,iBAAiB,EAAE;EACpB,CAAC;EAED,MAAM+K,mBAAmB,GAAG;IAC3BziB,aAAa,EAAE,MAAM;IACrBG,SAAS,EAAE,CAAC;IACZE,cAAc,EAAE,IAAI;IACpBE,SAAS,EAAE,CAAC;IACZE,cAAc,EAAE,IAAI;IACpBE,WAAW,EAAE,CAAC;IACdE,gBAAgB,EAAE,IAAI;IACtBwZ,QAAQ,EAAE,KAAK;IACf3C,iBAAiB,EAAE;EACpB,CAAC;EAED,MAAMgL,cAAc,GAAG;IACtBjI,MAAM,EAAE;EACT,CAAC;EAED,MAAMkI,oBAAoB,GAAG;IAC5BlI,MAAM,EAAE;EACT,CAAC;EAED,QAAQ2H,cAAc;IACrB,KAAK,OAAO;MACX,OAAOE,mBAAmB;IAC3B,KAAK,SAAS;MACb,IAAID,iBAAiB,KAAK,QAAQ,EAAE;QACnC,OAAOG,sBAAsB;MAC9B;MACA,OAAOloB,gBAAgB;IACxB,KAAK,MAAM;MACV,IAAI+nB,iBAAiB,KAAK,QAAQ,EAAE;QACnC,OAAOI,mBAAmB;MAC3B;MACA,OAAO1iB,aAAa;IACrB,KAAK,OAAO;MACX,IAAIsiB,iBAAiB,KAAK,QAAQ,EAAE;QACnC,OAAOM,oBAAoB;MAC5B;MACA,OAAOD,cAAc;EACvB;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASd,sBAAsBA,CAACQ,cAAc,EAAE;EACtD,MAAMQ,gBAAgB,GAAG,EAAE;EAE3B,MAAMC,aAAa,GAAG,EAAE;EAExB,MAAMC,UAAU,GAAG,EAAE;EAErB,MAAMC,WAAW,GAAG,EAAE;EAEtB,QAAQX,cAAc;IACrB,KAAK,OAAO;MACX,OAAOQ,gBAAgB;IACxB,KAAK,SAAS;MACb,OAAOC,aAAa;IACrB,KAAK,MAAM;MACV,OAAOC,UAAU;IAClB,KAAK,OAAO;MACX,OAAOC,WAAW;EACpB;AACD;;;;;;;;;;;;;;;;;;;;;AC9TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS3Z,cAAcA,CAAC4Z,YAAY,EAAE;EAC5C,MAAMC,SAAS,GAAG,CACjB;IAAEC,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,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","sources":["webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/block-table.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/more-vertical.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/search.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/settings.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/table-column-before.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/table-column-delete.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/table-row-before.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/table-row-delete.js","webpack://dynamic-tables/./src/components/column-dropdown-menu/index.js","webpack://dynamic-tables/./src/components/configure-column-width/index.js","webpack://dynamic-tables/./src/components/configure-column-width/style.scss","webpack://dynamic-tables/./src/components/configure-row-height/index.js","webpack://dynamic-tables/./src/components/configure-row-height/style.scss","webpack://dynamic-tables/./src/components/index.js","webpack://dynamic-tables/./src/components/row-dropdown-menu/index.js","webpack://dynamic-tables/./src/data/action-types.js","webpack://dynamic-tables/./src/data/actions.js","webpack://dynamic-tables/./src/data/constants.js","webpack://dynamic-tables/./src/data/index.js","webpack://dynamic-tables/./src/data/reducer.js","webpack://dynamic-tables/./src/data/resolvers.js","webpack://dynamic-tables/./src/data/selectors.js","webpack://dynamic-tables/./src/edit.js","webpack://dynamic-tables/./src/editor.scss","webpack://dynamic-tables/./src/hooks.js","webpack://dynamic-tables/./src/index.js","webpack://dynamic-tables/./src/style.js","webpack://dynamic-tables/./src/style.scss","webpack://dynamic-tables/./src/table-defaults.js","webpack://dynamic-tables/./src/utils.js","webpack://dynamic-tables/external window [\"wp\",\"blockEditor\"]","webpack://dynamic-tables/external window [\"wp\",\"blocks\"]","webpack://dynamic-tables/external window [\"wp\",\"components\"]","webpack://dynamic-tables/external window [\"wp\",\"compose\"]","webpack://dynamic-tables/external window [\"wp\",\"coreData\"]","webpack://dynamic-tables/external window [\"wp\",\"data\"]","webpack://dynamic-tables/external window [\"wp\",\"editor\"]","webpack://dynamic-tables/external window [\"wp\",\"element\"]","webpack://dynamic-tables/external window [\"wp\",\"i18n\"]","webpack://dynamic-tables/external window [\"wp\",\"notices\"]","webpack://dynamic-tables/external window [\"wp\",\"primitives\"]","webpack://dynamic-tables/external window \"ReactJSXRuntime\"","webpack://dynamic-tables/webpack/bootstrap","webpack://dynamic-tables/webpack/runtime/chunk loaded","webpack://dynamic-tables/webpack/runtime/compat get default export","webpack://dynamic-tables/webpack/runtime/define property getters","webpack://dynamic-tables/webpack/runtime/hasOwnProperty shorthand","webpack://dynamic-tables/webpack/runtime/make namespace object","webpack://dynamic-tables/webpack/runtime/jsonp chunk loading","webpack://dynamic-tables/webpack/before-startup","webpack://dynamic-tables/webpack/startup","webpack://dynamic-tables/webpack/after-startup"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst blockTable = /*#__PURE__*/_jsx(SVG, {\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM5 4.5h14c.3 0 .5.2.5.5v3.5h-15V5c0-.3.2-.5.5-.5zm8 5.5h6.5v3.5H13V10zm-1.5 3.5h-7V10h7v3.5zm-7 5.5v-4h7v4.5H5c-.3 0-.5-.2-.5-.5zm14.5.5h-6V15h6.5v4c0 .3-.2.5-.5.5z\"\n  })\n});\nexport default blockTable;\n//# sourceMappingURL=block-table.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst moreVertical = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M13 19h-2v-2h2v2zm0-6h-2v-2h2v2zm0-6h-2V5h2v2z\"\n  })\n});\nexport default moreVertical;\n//# sourceMappingURL=more-vertical.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst search = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M13 5c-3.3 0-6 2.7-6 6 0 1.4.5 2.7 1.3 3.7l-3.8 3.8 1.1 1.1 3.8-3.8c1 .8 2.3 1.3 3.7 1.3 3.3 0 6-2.7 6-6S16.3 5 13 5zm0 10.5c-2.5 0-4.5-2-4.5-4.5s2-4.5 4.5-4.5 4.5 2 4.5 4.5-2 4.5-4.5 4.5z\"\n  })\n});\nexport default search;\n//# sourceMappingURL=search.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst settings = /*#__PURE__*/_jsxs(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: [/*#__PURE__*/_jsx(Path, {\n    d: \"m19 7.5h-7.628c-.3089-.87389-1.1423-1.5-2.122-1.5-.97966 0-1.81309.62611-2.12197 1.5h-2.12803v1.5h2.12803c.30888.87389 1.14231 1.5 2.12197 1.5.9797 0 1.8131-.62611 2.122-1.5h7.628z\"\n  }), /*#__PURE__*/_jsx(Path, {\n    d: \"m19 15h-2.128c-.3089-.8739-1.1423-1.5-2.122-1.5s-1.8131.6261-2.122 1.5h-7.628v1.5h7.628c.3089.8739 1.1423 1.5 2.122 1.5s1.8131-.6261 2.122-1.5h2.128z\"\n  })]\n});\nexport default settings;\n//# sourceMappingURL=settings.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst tableColumnBefore = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"-2 -2 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M6.4 3.776v3.648H2.752v1.792H6.4v3.648h1.728V9.216h3.712V7.424H8.128V3.776zM0 17.92V0h20.48v17.92H0zM12.8 1.28H1.28v14.08H12.8V1.28zm6.4 0h-5.12v3.84h5.12V1.28zm0 5.12h-5.12v3.84h5.12V6.4zm0 5.12h-5.12v3.84h5.12v-3.84z\"\n  })\n});\nexport default tableColumnBefore;\n//# sourceMappingURL=table-column-before.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst tableColumnDelete = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"-2 -2 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M6.4 9.98L7.68 8.7v-.256L6.4 7.164V9.98zm6.4-1.532l1.28-1.28V9.92L12.8 8.64v-.192zm7.68 9.472V0H0v17.92h20.48zm-1.28-2.56h-5.12v-1.024l-.256.256-1.024-1.024v1.792H7.68v-1.792l-1.024 1.024-.256-.256v1.024H1.28V1.28H6.4v2.368l.704-.704.576.576V1.216h5.12V3.52l.96-.96.32.32V1.216h5.12V15.36zm-5.76-2.112l-3.136-3.136-3.264 3.264-1.536-1.536 3.264-3.264L5.632 5.44l1.536-1.536 3.136 3.136 3.2-3.2 1.536 1.536-3.2 3.2 3.136 3.136-1.536 1.536z\"\n  })\n});\nexport default tableColumnDelete;\n//# sourceMappingURL=table-column-delete.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst tableRowBefore = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"-2 -2 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M6.656 6.464h2.88v2.88h1.408v-2.88h2.88V5.12h-2.88V2.24H9.536v2.88h-2.88zM0 17.92V0h20.48v17.92H0zm7.68-2.56h5.12v-3.84H7.68v3.84zm-6.4 0H6.4v-3.84H1.28v3.84zM19.2 1.28H1.28v9.024H19.2V1.28zm0 10.24h-5.12v3.84h5.12v-3.84zM6.656 6.464h2.88v2.88h1.408v-2.88h2.88V5.12h-2.88V2.24H9.536v2.88h-2.88zM0 17.92V0h20.48v17.92H0zm7.68-2.56h5.12v-3.84H7.68v3.84zm-6.4 0H6.4v-3.84H1.28v3.84zM19.2 1.28H1.28v9.024H19.2V1.28zm0 10.24h-5.12v3.84h5.12v-3.84z\"\n  })\n});\nexport default tableRowBefore;\n//# sourceMappingURL=table-row-before.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst tableRowDelete = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"-2 -2 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M17.728 11.456L14.592 8.32l3.2-3.2-1.536-1.536-3.2 3.2L9.92 3.648 8.384 5.12l3.2 3.2-3.264 3.264 1.536 1.536 3.264-3.264 3.136 3.136 1.472-1.536zM0 17.92V0h20.48v17.92H0zm19.2-6.4h-.448l-1.28-1.28H19.2V6.4h-1.792l1.28-1.28h.512V1.28H1.28v3.84h6.208l1.28 1.28H1.28v3.84h7.424l-1.28 1.28H1.28v3.84H19.2v-3.84z\"\n  })\n});\nexport default tableRowDelete;\n//# sourceMappingURL=table-row-delete.js.map","/* External dependencies */\nimport { useEffect, useState } from '@wordpress/element';\nimport { DropdownMenu, MenuGroup, MenuItem } from '@wordpress/components';\nimport { moreVertical, settings, tableColumnBefore, tableColumnDelete } from '@wordpress/icons';\n\n/* Internal dependencies */\nimport { ConfigureColumnWidth } from '../configure-column-width';\nimport '../../editor.scss';\n\n/**\n * React component drop down menu to configure current column properties.\n *\n * @since    1.0.0\n *\n * @param {Object} props\n * @return {Object} Updated column\n */\nfunction ColumnMenu(props) {\n\tconst [openModalColumnWidth, setOpenModalColumnWidth] = useState(false);\n\tconst [columnAttributes, setColumnAttributes] = useState({});\n\n\tconst { tableId, columnId, columnLabel, enableProFeatures, updatedColumn } = props;\n\n\tuseEffect(() => {\n\t\tsetColumnAttributes(props.columnAttributes);\n\t}, [props.columnAttributes]);\n\n\t/**\n\t * Column attributes for inserting new column.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event    Menu action\n\t * @param {number} columnId Column ID for new column\n\t */\n\tfunction onInsertColumn(event, columnId) {\n\t\tupdatedColumn(event, 'insert', tableId, columnId, '');\n\t}\n\n\t/**\n\t * Column to delete.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event    Menu action\n\t * @param {number} columnId Column ID for column to remove\n\t */\n\tfunction onDeleteColumn(event, columnId) {\n\t\tupdatedColumn(event, 'delete', tableId, columnId, '');\n\t}\n\n\t/**\n\t * Updated column attributes for processing.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event                   Menu action\n\t * @param {Object} updatedColumnAttributes Updated column attributes\n\t */\n\tfunction onUpdateColumnWidth(event, updatedColumnAttributes) {\n\t\tif (openModalColumnWidth) {\n\t\t\tsetOpenModalColumnWidth(false);\n\t\t\tupdatedColumn(event, 'attributes', tableId, columnId, updatedColumnAttributes);\n\t\t} else {\n\t\t\tevent.preventDefault();\n\t\t\tsetOpenModalColumnWidth(true);\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<DropdownMenu icon={moreVertical} defaultOpen=\"true\" label={columnLabel}>\n\t\t\t\t{({ onClose }) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t<MenuItem icon={settings} onClick={onUpdateColumnWidth}>\n\t\t\t\t\t\t\t\tUpdate Column Width\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t<MenuItem icon={tableColumnBefore} onClick={e => onInsertColumn(e, columnId)}>\n\t\t\t\t\t\t\t\tInsert Column\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem icon={tableColumnDelete} onClick={e => onDeleteColumn(e, columnId)}>\n\t\t\t\t\t\t\t\tDelete Column\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</DropdownMenu>\n\n\t\t\t{openModalColumnWidth && (\n\t\t\t\t<ConfigureColumnWidth\n\t\t\t\t\tcolumnId={columnId}\n\t\t\t\t\tcolumnLabel={columnLabel}\n\t\t\t\t\tcolumnAttributes={columnAttributes}\n\t\t\t\t\tenableProFeatures={enableProFeatures}\n\t\t\t\t\topenColumnWidth={onUpdateColumnWidth}\n\t\t\t\t></ConfigureColumnWidth>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport { ColumnMenu };\n","/* External dependencies */\nimport { useEffect, useState } from '@wordpress/element';\nimport {\n\tModal,\n\tSelectControl,\n\tCheckboxControl,\n\tButton,\n\t__experimentalNumberControl as NumberControl,\n} from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\n\n/**\n * React component to support updates for the current column width.\n *\n * @since    1.0.0\n *\n * @param {Object} props\n * @return {Object} Updated column properties\n */\nfunction ConfigureColumnWidth(props) {\n\tconst { openColumnWidth, columnLabel, columnAttributes, enableProFeatures } = props;\n\n\tuseEffect(() => {\n\t\tswitch (columnAttributes.columnWidthType) {\n\t\t\tcase 'Proportional': {\n\t\t\t\tsetHideProportional(false);\n\t\t\t\tsetHideCustom(true);\n\t\t\t\tsetHideFixed(true);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'Auto': {\n\t\t\t\tsetHideProportional(true);\n\t\t\t\tsetHideCustom(true);\n\t\t\t\tsetHideFixed(true);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'Fixed': {\n\t\t\t\tsetHideProportional(true);\n\t\t\t\tsetHideCustom(true);\n\t\t\t\tsetHideFixed(false);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'Custom': {\n\t\t\t\tsetHideProportional(true);\n\t\t\t\tsetHideCustom(false);\n\t\t\t\tsetHideFixed(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tsetColumnWidthType(columnAttributes.columnWidthType);\n\t\tsetMinWidth(columnAttributes.minWidth);\n\t\tsetMinWidthUnits(columnAttributes.minWidthUnits);\n\t\tsetMaxWidth(columnAttributes.maxWidth);\n\t\tsetMaxWidthUnits(columnAttributes.maxWidthUnits);\n\t\tsetFixedWidth(columnAttributes.fixedWidth);\n\t\tsetFixedWidthUnits(columnAttributes.fixedWidth);\n\t\tsetDisableForPhone(columnAttributes.disableForPhone);\n\t\tsetDisableForTablet(columnAttributes.disableForTablet);\n\t}, [columnAttributes]);\n\n\t/**\n\t * Stop event processing in favor of custom processing.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event Mouse down\n\t */\n\tfunction stopProp(event) {\n\t\tevent.stopPropagation();\n\t}\n\n\t/**\n\t * Close modal on cancel.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event Cancel\n\t */\n\tfunction handleCancel(event) {\n\t\topenColumnWidth(false);\n\t}\n\n\tconst [columnWidthType, setColumnWidthType] = useState();\n\tconst [hideProportional, setHideProportional] = useState(true);\n\tconst [hideCustom, setHideCustom] = useState(true);\n\tconst [hideFixed, setHideFixed] = useState(true);\n\tconst [minWidth, setMinWidth] = useState(0);\n\tconst [minWidthUnits, setMinWidthUnits] = useState();\n\tconst [maxWidth, setMaxWidth] = useState(1);\n\tconst [maxWidthUnits, setMaxWidthUnits] = useState();\n\tconst [fixedWidth, setFixedWidth] = useState(0);\n\tconst [fixedWidthUnits, setFixedWidthUnits] = useState();\n\tconst [disableForTablet, setDisableForTablet] = useState(false);\n\tconst [disableForPhone, setDisableForPhone] = useState(false);\n\n\t/**\n\t * Process change in width type and set detault props for the type.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {string} event New column width type\n\t */\n\tfunction onWidthType(event) {\n\t\tswitch (event) {\n\t\t\tcase 'Proportional': {\n\t\t\t\tsetMaxWidth(1);\n\t\t\t\tsetMaxWidthUnits('fr');\n\t\t\t\tsetMinWidth(20);\n\t\t\t\tsetMinWidthUnits('ch');\n\t\t\t\tsetFixedWidth(0);\n\t\t\t\tsetFixedWidthUnits('px');\n\t\t\t\tsetHideProportional(false);\n\t\t\t\tsetHideCustom(true);\n\t\t\t\tsetHideFixed(true);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'Auto': {\n\t\t\t\tsetMaxWidth(0);\n\t\t\t\tsetMaxWidthUnits('fr');\n\t\t\t\tsetMinWidth(0);\n\t\t\t\tsetMinWidthUnits('ch');\n\t\t\t\tsetFixedWidth(0);\n\t\t\t\tsetFixedWidthUnits('px');\n\t\t\t\tsetHideProportional(true);\n\t\t\t\tsetHideCustom(true);\n\t\t\t\tsetHideFixed(true);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'Fixed': {\n\t\t\t\tsetMaxWidth(0);\n\t\t\t\tsetMaxWidthUnits('fr');\n\t\t\t\tsetMinWidth(0);\n\t\t\t\tsetMinWidthUnits('ch');\n\t\t\t\tsetFixedWidth(40);\n\t\t\t\tsetFixedWidthUnits('px');\n\t\t\t\tsetHideProportional(true);\n\t\t\t\tsetHideCustom(true);\n\t\t\t\tsetHideFixed(false);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'Custom': {\n\t\t\t\tsetMaxWidth(40);\n\t\t\t\tsetMaxWidthUnits('ch');\n\t\t\t\tsetMinWidth(20);\n\t\t\t\tsetMinWidthUnits('ch');\n\t\t\t\tsetFixedWidth(0);\n\t\t\t\tsetFixedWidthUnits('px');\n\t\t\t\tsetHideProportional(true);\n\t\t\t\tsetHideCustom(false);\n\t\t\t\tsetHideFixed(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tsetColumnWidthType(event);\n\t}\n\n\t/**\n\t * Process change to number of minimum width units.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event Minimum width units\n\t */\n\tfunction onMinimumWidth(event) {\n\t\tsetMinWidth(event.target.value);\n\t}\n\n\t/**\n\t * Process change to the minimum width unit type.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {string} event Minimum width unit type\n\t */\n\tfunction onMinimumWidthUnits(event) {\n\t\tsetMinWidthUnits(event);\n\t}\n\n\t/**\n\t * Process change to number of maximum width units.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event Maximum width units\n\t */\n\tfunction onMaximumWidth(event) {\n\t\tsetMaxWidth(event.target.value);\n\t}\n\n\t/**\n\t * Process change to the maximum width unit type\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {string} event Maximum width unit type\n\t */\n\tfunction onMaximumWidthUnits(event) {\n\t\tsetMaxWidthUnits(event);\n\t}\n\n\t/**\n\t * Process change to number of fixed width units.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event Fixed width units\n\t */\n\tfunction onFixedWidth(event) {\n\t\tsetFixedWidth(Number(event.target.value));\n\t}\n\n\t/**\n\t * Process change to the fixed width unit type\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {string} event Fixed width unit type\n\t */\n\tfunction onFixedWidthUnits(event) {\n\t\tsetFixedWidthUnits(event);\n\t}\n\n\t/**\n\t * Process change to hide column for tablet form factor.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {boolean} checked Hide for tablets\n\t */\n\tfunction onTablet(checked) {\n\t\tsetDisableForTablet(checked);\n\t}\n\n\t/**\n\t * Process change to hide column for phone form factor.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {*} checked Hide for phones\n\t */\n\tfunction onPhone(checked) {\n\t\tsetDisableForPhone(checked);\n\t}\n\n\t/**\n\t * Process form submit.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event Form submit\n\t */\n\tfunction onUpdate(event) {\n\t\tconst updatedColumnAttributes = {\n\t\t\tcolumnWidthType: columnWidthType,\n\t\t\tminWidth: minWidth,\n\t\t\tminWidthUnits: minWidthUnits,\n\t\t\tmaxWidth: Number(maxWidth),\n\t\t\tmaxWidthUnits: maxWidthUnits,\n\t\t\tfixedWidth: fixedWidth,\n\t\t\tfixedWidthUnits: fixedWidthUnits,\n\t\t\tdisableForTablet: disableForTablet,\n\t\t\tdisableForPhone: disableForPhone,\n\t\t\tisFixedLeftColumnGroup: false,\n\t\t\thorizontalAlignment: 'none',\n\t\t};\n\t\topenColumnWidth(false, updatedColumnAttributes);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{openColumnWidth && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle=\"Configure Column Width\"\n\t\t\t\t\tonRequestClose={handleCancel}\n\t\t\t\t\tfocusOnMount=\"firstContentElement\"\n\t\t\t\t\tisDismissible=\"false\"\n\t\t\t\t\tshouldCloseOnClickOutside=\"false\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t>\n\t\t\t\t\t<p className=\"column-label\">For column {columnLabel}</p>\n\n\t\t\t\t\t<form onSubmit={onUpdate} onMouseDown={stopProp}>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel=\"Width Type\"\n\t\t\t\t\t\t\tvalue={columnWidthType}\n\t\t\t\t\t\t\tonChange={e => onWidthType(e)}\n\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t{ value: 'Proportional', label: 'Proportional' },\n\t\t\t\t\t\t\t\t{ value: 'Auto', label: 'Automatic' },\n\t\t\t\t\t\t\t\t{ value: 'Fixed', label: 'Fixed width' },\n\t\t\t\t\t\t\t\t{ value: 'Custom', label: 'Custom' },\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<fieldset className={hideProportional === true ? ' column-width--not-visible' : ''}>\n\t\t\t\t\t\t\t<legend>Set Proportional Width</legend>\n\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\tclassName=\"column-width-value-input\"\n\t\t\t\t\t\t\t\tlabel=\"Number of portions\"\n\t\t\t\t\t\t\t\tlabelPosition=\"side\"\n\t\t\t\t\t\t\t\tonBlur={e => onMaximumWidth(e)}\n\t\t\t\t\t\t\t\tvalue={maxWidth}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<span className=\"column-width-span-input\">\n\t\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\t\tclassName=\"column-width-value-input\"\n\t\t\t\t\t\t\t\t\tlabel=\"Minimum width\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tvalue={minWidth}\n\t\t\t\t\t\t\t\t\tonBlur={e => onMinimumWidth(e)}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\tclassName=\"column-width-unit-input\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tlabel=\"Units\"\n\t\t\t\t\t\t\t\t\tvalue={minWidthUnits}\n\t\t\t\t\t\t\t\t\tonChange={e => onMinimumWidthUnits(e)}\n\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t{ value: 'px', label: 'pixels' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'ch', label: 'characters' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'pt', label: 'points' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'in', label: 'inches' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'fr', label: 'proportional' },\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t\t<fieldset className={hideFixed === true ? 'column-width--not-visible' : ''}>\n\t\t\t\t\t\t\t<legend>Set Fixed Width</legend>\n\n\t\t\t\t\t\t\t<span className=\"column-width-span-input\">\n\t\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\t\tclassName=\"column-width-input\"\n\t\t\t\t\t\t\t\t\tlabel=\"Fixed width\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tvalue={fixedWidth}\n\t\t\t\t\t\t\t\t\tonBlur={e => onFixedWidth(e)}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\tclassName=\"column-width-unit-input\"\n\t\t\t\t\t\t\t\t\tlabel=\"Units\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tvalue={fixedWidthUnits}\n\t\t\t\t\t\t\t\t\tonChange={e => onFixedWidthUnits(e)}\n\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t{ value: 'px', label: 'pixels' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'ch', label: 'font' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'pt', label: 'points' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'in', label: 'inches' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'fr', label: 'proportional' },\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t\t<fieldset className={hideCustom === true ? 'column-width--not-visible' : ''}>\n\t\t\t\t\t\t\t<legend>Set Custom Width</legend>\n\t\t\t\t\t\t\t<span className=\"column-width-span-input\">\n\t\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\t\tclassName=\"column-width-input\"\n\t\t\t\t\t\t\t\t\tlabel=\"Minimum width\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tvalue={minWidth}\n\t\t\t\t\t\t\t\t\tonBlur={e => onMinimumWidth(e)}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\tclassName=\"column-width-unit-input\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tlabel=\"Units\"\n\t\t\t\t\t\t\t\t\tvalue={minWidthUnits}\n\t\t\t\t\t\t\t\t\tonChange={e => onMinimumWidthUnits(e)}\n\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t{ value: 'px', label: 'pixels' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'ch', label: 'characters' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'pt', label: 'points' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'in', label: 'inches' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'fr', label: 'proportional' },\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t<span className=\"column-width-span-input\">\n\t\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\t\tclassName=\"column-width-input\"\n\t\t\t\t\t\t\t\t\tlabel=\"Maximum width\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tvalue={maxWidth}\n\t\t\t\t\t\t\t\t\tonBlur={e => onMaximumWidth(e)}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\tclassName=\"column-width-unit-input\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tlabel=\"Units\"\n\t\t\t\t\t\t\t\t\tvalue={maxWidthUnits}\n\t\t\t\t\t\t\t\t\tonChange={e => onMaximumWidthUnits(e)}\n\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t{ value: 'px', label: 'pixels' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'ch', label: 'characters' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'pt', label: 'points' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'in', label: 'inches' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'fr', label: 'proportional' },\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t\t{enableProFeatures && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t\t\t\tlabel=\"Hide for tablet\"\n\t\t\t\t\t\t\t\t\tchecked={disableForTablet}\n\t\t\t\t\t\t\t\t\tonChange={onTablet}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t\t\t\tlabel=\"Hide for phone\"\n\t\t\t\t\t\t\t\t\tchecked={disableForPhone}\n\t\t\t\t\t\t\t\t\tonChange={onPhone}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport { ConfigureColumnWidth };\n","// extracted by mini-css-extract-plugin\nexport {};","/* External dependencies */\nimport { useEffect, useState } from '@wordpress/element';\nimport {\n\tModal,\n\tSelectControl,\n\tButton,\n\t__experimentalNumberControl as NumberControl,\n} from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport './style.scss';\n\n/**\n * React component to support updates for the current row height.\n *\n * @since    1.0.0\n *\n * @param {Object} props\n * @return  {Object} Updated column properties\n */\nfunction ConfigureRowHeight(props) {\n\tconst { openRowHeight, rowLabel, rowAttributes } = props;\n\n\tuseEffect(() => {\n\t\tswitch (rowAttributes.rowHeightType) {\n\t\t\tcase 'Auto': {\n\t\t\t\tsetHideCustom(true);\n\t\t\t\tsetHideFixed(true);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'Fixed': {\n\t\t\t\tsetHideCustom(true);\n\t\t\t\tsetHideFixed(false);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'Custom': {\n\t\t\t\tsetHideCustom(false);\n\t\t\t\tsetHideFixed(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tsetRowHeightType(rowAttributes.rowHeightType);\n\t\tsetMinHeight(rowAttributes.minHeight);\n\t\tsetMinHeightUnits(rowAttributes.minHeightUnits);\n\t\tsetMaxHeight(rowAttributes.maxHeight);\n\t\tsetMaxHeightUnits(rowAttributes.maxHeightUnits);\n\t\tsetFixedHeight(rowAttributes.fixedHeight);\n\t\tsetFixedHeightUnits(rowAttributes.fixedHeightUnits);\n\t}, [rowAttributes]);\n\n\t/**\n\t * Stop event processing in favor of custom processing.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event Mouse down\n\t */\n\tfunction stopProp(event) {\n\t\tevent.stopPropagation();\n\t}\n\n\t/**\n\t * Close modal on cancel.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event Cancel\n\t */\n\tfunction handleCancel(event) {\n\t\topenRowHeight(false);\n\t}\n\n\tconst [rowHeightType, setRowHeightType] = useState();\n\tconst [hideCustom, setHideCustom] = useState(true);\n\tconst [hideFixed, setHideFixed] = useState(true);\n\tconst [minHeight, setMinHeight] = useState(0);\n\tconst [minHeightUnits, setMinHeightUnits] = useState();\n\tconst [maxHeight, setMaxHeight] = useState(1);\n\tconst [maxHeightUnits, setMaxHeightUnits] = useState();\n\tconst [fixedHeight, setFixedHeight] = useState(0);\n\tconst [fixedHeightUnits, setFixedHeightUnits] = useState();\n\n\t/**\n\t * Process change in height type and set detault props for the type.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {string} event New row height type\n\t */\n\tfunction onHeightType(event) {\n\t\tswitch (event) {\n\t\t\tcase 'Auto': {\n\t\t\t\tsetMaxHeight(0);\n\t\t\t\tsetMaxHeightUnits('fr');\n\t\t\t\tsetMinHeight(0);\n\t\t\t\tsetMinHeightUnits('ch');\n\t\t\t\tsetFixedHeight(0);\n\t\t\t\tsetFixedHeightUnits('px');\n\t\t\t\tsetHideCustom(true);\n\t\t\t\tsetHideFixed(true);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'Fixed': {\n\t\t\t\tsetMaxHeight(0);\n\t\t\t\tsetMaxHeightUnits('fr');\n\t\t\t\tsetMinHeight(0);\n\t\t\t\tsetMinHeightUnits('ch');\n\t\t\t\tsetFixedHeight(40);\n\t\t\t\tsetFixedHeightUnits('px');\n\t\t\t\tsetHideCustom(true);\n\t\t\t\tsetHideFixed(false);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'Custom': {\n\t\t\t\tsetMaxHeight(40);\n\t\t\t\tsetMaxHeightUnits('ch');\n\t\t\t\tsetMinHeight(20);\n\t\t\t\tsetMinHeightUnits('ch');\n\t\t\t\tsetFixedHeight(0);\n\t\t\t\tsetFixedHeightUnits('px');\n\t\t\t\tsetHideCustom(false);\n\t\t\t\tsetHideFixed(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tsetRowHeightType(event);\n\t}\n\n\t/**\n\t * Process change to number of minimum height units.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event Minimum height units\n\t */\n\tfunction onMinimumHeight(event) {\n\t\tsetMinHeight(event.target.value);\n\t}\n\n\t/**\n\t * Process change to the minimum height unit type.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {string} event Minimum height unit type\n\t */\n\tfunction onMinimumHeightUnits(event) {\n\t\tsetMinHeightUnits(event);\n\t}\n\n\t/**\n\t * Process change to number of maximum height units.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event Maximum height units\n\t */\n\tfunction onMaximumHeight(event) {\n\t\tsetMaxHeight(event.target.value);\n\t}\n\n\t/**\n\t * Process change to the maximum height unit type\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {string} event Maximum height unit type\n\t */\n\tfunction onMaximumHeightUnits(event) {\n\t\tsetMaxHeightUnits(event);\n\t}\n\n\t/**\n\t * Process change to number of fixed height units.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event Fixed height units\n\t */\n\tfunction onFixedHeight(event) {\n\t\tsetFixedHeight(Number(event.target.value));\n\t}\n\n\t/**\n\t * Process change to the fixed height unit type\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {string} event Fixed height unit type\n\t */\n\tfunction onFixedHeightUnits(event) {\n\t\tsetFixedHeightUnits(event);\n\t}\n\n\t/**\n\t * Process form submit.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event Form submit\n\t */\n\tfunction onUpdate(event) {\n\t\tconst updatedRowAttributes = {\n\t\t\trowHeightType: rowHeightType,\n\t\t\tminHeight: minHeight,\n\t\t\tminHeightUnits: minHeightUnits,\n\t\t\tmaxHeight: Number(maxHeight),\n\t\t\tmaxHeightUnits: maxHeightUnits,\n\t\t\tfixedHeight: fixedHeight,\n\t\t\tfixedHeightUnits: fixedHeightUnits,\n\t\t\tisFixedLeftRowGroup: false,\n\t\t\thorizontalAlignment: 'none',\n\t\t};\n\n\t\topenRowHeight(false, updatedRowAttributes);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{openRowHeight && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle=\"Configure Row Height\"\n\t\t\t\t\tonRequestClose={handleCancel}\n\t\t\t\t\tfocusOnMount=\"firstContentElement\"\n\t\t\t\t\tisDismissible=\"false\"\n\t\t\t\t\tshouldCloseOnClickOutside=\"false\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t>\n\t\t\t\t\t<p className=\"row-label\">For row {rowLabel}</p>\n\n\t\t\t\t\t<form onSubmit={onUpdate} onMouseDown={stopProp}>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel=\"Height Type\"\n\t\t\t\t\t\t\tvalue={rowHeightType}\n\t\t\t\t\t\t\tonChange={e => onHeightType(e)}\n\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t{ value: 'Auto', label: 'Automatic' },\n\t\t\t\t\t\t\t\t{ value: 'Fixed', label: 'Fixed height' },\n\t\t\t\t\t\t\t\t{ value: 'Custom', label: 'Custom' },\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<fieldset className={hideFixed === true ? 'row-height--not-visible' : ''}>\n\t\t\t\t\t\t\t<legend>Set Fixed Height</legend>\n\n\t\t\t\t\t\t\t<span className=\"row-height-span-input\">\n\t\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\t\tclassName=\"row-height-input\"\n\t\t\t\t\t\t\t\t\tlabel=\"Fixed height\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tvalue={fixedHeight}\n\t\t\t\t\t\t\t\t\tonBlur={e => onFixedHeight(e)}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\tclassName=\"row-height-unit-input\"\n\t\t\t\t\t\t\t\t\tlabel=\"Units\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tvalue={fixedHeightUnits}\n\t\t\t\t\t\t\t\t\tonChange={e => onFixedHeightUnits(e)}\n\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t{ value: 'px', label: 'pixels' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'ch', label: 'font' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'pt', label: 'points' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'in', label: 'inches' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'fr', label: 'proportional' },\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t\t<fieldset className={hideCustom === true ? 'row-height--not-visible' : ''}>\n\t\t\t\t\t\t\t<legend>Set Custom Height</legend>\n\t\t\t\t\t\t\t<span className=\"row-height-span-input\">\n\t\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\t\tclassName=\"row-height-input\"\n\t\t\t\t\t\t\t\t\tlabel=\"Minimum height\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tvalue={minHeight}\n\t\t\t\t\t\t\t\t\tonBlur={e => onMinimumHeight(e)}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\tclassName=\"row-height-unit-input\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tlabel=\"Units\"\n\t\t\t\t\t\t\t\t\tvalue={minHeightUnits}\n\t\t\t\t\t\t\t\t\tonChange={e => onMinimumHeightUnits(e)}\n\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t{ value: 'px', label: 'pixels' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'ch', label: 'characters' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'pt', label: 'points' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'in', label: 'inches' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'fr', label: 'proportional' },\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t<span className=\"row-height-span-input\">\n\t\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\t\tclassName=\"row-height-input\"\n\t\t\t\t\t\t\t\t\tlabel=\"Maximum height\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tvalue={maxHeight}\n\t\t\t\t\t\t\t\t\tonBlur={e => onMaximumHeight(e)}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\t\tclassName=\"row-height-unit-input\"\n\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\n\t\t\t\t\t\t\t\t\tlabel=\"Units\"\n\t\t\t\t\t\t\t\t\tvalue={maxHeightUnits}\n\t\t\t\t\t\t\t\t\tonChange={e => onMaximumHeightUnits(e)}\n\t\t\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t\t\t{ value: 'px', label: 'pixels' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'ch', label: 'characters' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'pt', label: 'points' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'in', label: 'inches' },\n\t\t\t\t\t\t\t\t\t\t{ value: 'fr', label: 'proportional' },\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCancel}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport { ConfigureRowHeight };\n","// extracted by mini-css-extract-plugin\nexport {};","/* Export table column react components */\nexport { ColumnMenu } from './column-dropdown-menu';\nexport { ConfigureColumnWidth } from './configure-column-width';\n\n/* Export table row react components */\nexport { RowMenu } from './row-dropdown-menu';\nexport { ConfigureRowHeight } from './configure-row-height';\n","/* External dependencies */\nimport { useEffect, useState } from '@wordpress/element';\nimport { DropdownMenu, MenuGroup, MenuItem } from '@wordpress/components';\nimport { moreVertical, settings, tableRowBefore, tableRowDelete } from '@wordpress/icons';\n\n/* Internal dependencies */\nimport { ConfigureRowHeight } from '../configure-row-height';\nimport '../../editor.scss';\n\n/**\n * React component drop down menu to configure current row properties.\n *\n * @since    1.0.0\n *\n * @param {Object} props\n * @return {Object} Updated row\n */\nfunction RowMenu(props) {\n\tconst [openModalRowHeight, setOpenModalRowHeight] = useState(false);\n\tconst [rowAttributes, setRowAttributes] = useState({});\n\n\tconst { tableId, rowId, rowLabel, updatedRow } = props;\n\n\tuseEffect(() => {\n\t\tsetRowAttributes(props.rowAttributes);\n\t}, [props.rowAttributes]);\n\n\t/**\n\t * Row attributes for inserting new row.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event Menu action\n\t * @param {number} rowId Row ID for new row\n\t */\n\tfunction onInsertRow(event, rowId) {\n\t\tupdatedRow(event, 'insert', tableId, rowId, '');\n\t}\n\n\t/**\n\t * Row to delete.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event Menu action\n\t * @param {number} rowId Row ID for row to remove\n\t */\n\tfunction onDeleteRow(event, rowId) {\n\t\tupdatedRow(event, 'delete', tableId, rowId, '');\n\t}\n\n\t/**\n\t * Updated row attributes for processing.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event                Menu action\n\t * @param {Object} updatedRowAttributes Updated row attributes\n\t */\n\tfunction onUpdateRowHeight(event, updatedRowAttributes) {\n\t\tif (openModalRowHeight) {\n\t\t\tsetOpenModalRowHeight(false);\n\t\t\tupdatedRow(event, 'attributes', tableId, rowId, updatedRowAttributes);\n\t\t} else {\n\t\t\tevent.preventDefault();\n\t\t\tsetOpenModalRowHeight(true);\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<DropdownMenu\n\t\t\t\t// style={{ display: \"none\" }}\n\t\t\t\ticon={moreVertical}\n\t\t\t\tdefaultOpen=\"true\"\n\t\t\t\tlabel={rowLabel}\n\t\t\t>\n\t\t\t\t{({ onClose }) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t<MenuItem icon={settings} onClick={onUpdateRowHeight}>\n\t\t\t\t\t\t\t\tUpdate Row Height\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t<MenuItem icon={tableRowBefore} onClick={e => onInsertRow(e, rowId)}>\n\t\t\t\t\t\t\t\tInsert Row\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem icon={tableRowDelete} onClick={e => onDeleteRow(e, rowId)}>\n\t\t\t\t\t\t\t\tDelete Row\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</DropdownMenu>\n\n\t\t\t{openModalRowHeight && (\n\t\t\t\t<ConfigureRowHeight\n\t\t\t\t\trowId={rowId}\n\t\t\t\t\trowLabel={rowLabel}\n\t\t\t\t\trowAttributes={rowAttributes}\n\t\t\t\t\topenRowHeight={onUpdateRowHeight}\n\t\t\t\t></ConfigureRowHeight>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport { RowMenu };\n","/**\n * Valid reducer action types.\n *\n * @since    x.x.x\n *\n * @type     {Object} Constants to support Reducer\n */\nconst TYPES = {\n\tCREATE_TABLE: 'CREATE_TABLE',\n\tINSERT_COLUMN: 'INSERT_COLUMN',\n\tINSERT_ROW: 'INSERT_ROW',\n\tDELETE_TABLE: 'DELETE_TABLE',\n\tDELETE_COLUMN: 'DELETE_COLUMN',\n\tDELETE_ROW: 'DELETE_ROW',\n\tCHANGE_TABLE_ID: 'CHANGE_TABLE_ID',\n\tUPDATE_TABLE_PROP: 'UPDATE_TABLE_PROP',\n\tREMOVE_TABLE_PROP: 'REMOVE_TABLE_PROP',\n\tUPDATE_ROW: 'UPDATE_ROW',\n\tUPDATE_COLUMN: 'UPDATE_COLUMN',\n\tUPDATE_CELL: 'UPDATE_CELL',\n\tRECEIVE_HYDRATE: 'RECEIVE_HYDRATE',\n\tRECEIVE_HYDRATE_TEST: 'RECEIVE_HYDRATE_TEST',\n\tPERSIST: 'PERSIST',\n\tPROCESS_BORDERS: 'PROCESS_BORDERS',\n};\n\nexport default TYPES;\n","/* External dependencies */\nimport { store as coreStore } from '@wordpress/core-data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/* Internal dependencies */\nimport TYPES from './action-types.js';\n\n/* Load constants */\nconst {\n\tCREATE_TABLE,\n\tINSERT_COLUMN,\n\tINSERT_ROW,\n\tDELETE_TABLE,\n\tDELETE_COLUMN,\n\tDELETE_ROW,\n\tCHANGE_TABLE_ID,\n\tUPDATE_TABLE_PROP,\n\tREMOVE_TABLE_PROP,\n\tUPDATE_ROW,\n\tUPDATE_COLUMN,\n\tUPDATE_CELL,\n\tRECEIVE_HYDRATE,\n\tPROCESS_BORDERS,\n} = TYPES;\n\n/**\n * Returns action object used in signalling a new table has been received\n * from UI.\n *\n * @since    1.0.0\n *\n * @param {Object} table Dynamic Table\n * @return  {Object} Action object\n */\nexport function receiveNewTable(table) {\n\tconsole.log('Receiving New Table');\n\tconsole.log(table);\n\tconsole.log(table.table.table_id);\n\n\treturn {\n\t\ttype: CREATE_TABLE,\n\t\ttableId: table.table.table_id,\n\t\t...table,\n\t};\n}\n\n/**\n * Returns action object used in signalling a new table has been received\n * from REST service.\n *\n * @since    1.0.0\n *\n * @param {number}       table_id        Identifier key for the table\n * @param {string}       block_table_ref Cross reference identified linking table to block within post\n * @param {string}       table_status    Status of retrieved table\n * @param {number}       post_id         Identifier key for the post in which the table appears\n * @param {string}       table_name      Descriptive name of table\n * @param {Array}        attributes      Table header level attributes\n * @param {string}       classes         Table header level classes\n * @param {Array|Object} rows            Array of table row objects\n * @param {Array|Object} columns         Array of table column objects\n * @param {Array|Object} cells           Array of table cell objects\n * @return {Object} Action object\n */\nexport function receiveTable(\n\ttable_id,\n\tblock_table_ref,\n\ttable_status,\n\tpost_id,\n\ttable_name,\n\tattributes,\n\tclasses,\n\trows,\n\tcolumns,\n\tcells\n) {\n\tconsole.log('            ...Action - In receiveTable');\n\tconsole.log('                - id: ' + table_id);\n\tconsole.log('Block Ref = ' + block_table_ref);\n\tconsole.log('Status = ' + table_status);\n\n\treturn {\n\t\ttype: RECEIVE_HYDRATE,\n\t\ttableId: table_id,\n\t\ttable: {\n\t\t\ttable_id,\n\t\t\tblock_table_ref,\n\t\t\ttable_status,\n\t\t\tpost_id,\n\t\t\ttable_name,\n\t\t\tattributes,\n\t\t\tclasses,\n\t\t\trows,\n\t\t\tcolumns,\n\t\t\tcells,\n\t\t},\n\t};\n}\n\n/**\n * Action to create WordPress Core-Data dynamic table entity based on local table.\n * persists the data as soon as the table is created, before post is saved/published.\n *\n * @since    1.0.0\n *\n * @return  {Object} Action object\n */\nexport const createTableEntity =\n\t() =>\n\tasync ({ select, dispatch, registry }) => {\n\t\tconst {\n\t\t\ttable_id,\n\t\t\tblock_table_ref,\n\t\t\tpost_id,\n\t\t\ttable_name,\n\t\t\tattributes,\n\t\t\tclasses,\n\t\t\trows,\n\t\t\tcolumns,\n\t\t\tcells,\n\t\t} = select.getTable('0', true);\n\t\tconst newTable = {\n\t\t\ttitle: table_name,\n\t\t\theader: {\n\t\t\t\tid: table_id,\n\t\t\t\tblock_table_ref: block_table_ref,\n\t\t\t\tstatus: 'new',\n\t\t\t\tpost_id: post_id,\n\t\t\t\ttable_name: table_name,\n\t\t\t\tattributes: attributes,\n\t\t\t\tclasses: classes,\n\t\t\t},\n\t\t\trows: [...rows],\n\t\t\tcolumns: [...columns],\n\t\t\tcells: [...cells],\n\t\t};\n\n\t\tconsole.log('CREATING TABLE ENTITY');\n\t\tconsole.log(newTable);\n\n\t\ttry {\n\t\t\tconst tableEntity = await registry\n\t\t\t\t.dispatch(coreStore)\n\t\t\t\t.saveEntityRecord('dynamic-tables', 'table', newTable);\n\n\t\t\tdispatch.assignTableId(tableEntity.id);\n\n\t\t\treturn tableEntity.id;\n\t\t} catch (error) {\n\t\t\tconsole.log(\n\t\t\t\t'Error in createTableEntity -  Table ID - ' +\n\t\t\t\t\ttable_id +\n\t\t\t\t\t', block table ref = ' +\n\t\t\t\t\tblock_table_ref +\n\t\t\t\t\t', Post Id = ' +\n\t\t\t\t\tpost_id\n\t\t\t);\n\t\t}\n\t};\n\n/**\n * Action to save table entity changes that are required for processing\n * at time other than when the post is saved/published.\n *\n * @since    1.0.0\n *\n * @param {number} tableId Identifier key for the table\n * @return {Object} Action Object\n */\nexport const saveTableEntity =\n\ttableId =>\n\t({ registry }) => {\n\t\tconsole.log('SAVING TABLE ENTITY');\n\n\t\ttry {\n\t\t\tregistry.dispatch(coreStore).saveEditedEntityRecord('dynamic-tables', 'table', tableId);\n\t\t} catch (error) {\n\t\t\tconsole.log('Error in saveTableEntity - Table ID - ' + tableId);\n\t\t\talert('            ...Save Table Entity - async error - ' + error);\n\t\t}\n\t};\n\n/**\n * Update table entity based on changes made to local table updates.  This does\n * not persist changes, only queues them for when the post is saved/published.\n *\n * @since    1.0.0\n *\n * @param {*}      tableId                  Identifier key for the table\n * @param {string} [overrideTableStatus=''] Updates the table's status if populated\n * @return  {Object} Action Object\n */\nexport const updateTableEntity =\n\t(tableId, overrideTableStatus = '') =>\n\t({ select, registry }) => {\n\t\tconst {\n\t\t\ttable_id,\n\t\t\tblock_table_ref,\n\t\t\ttable_status,\n\t\t\tpost_id,\n\t\t\ttable_name,\n\t\t\tattributes,\n\t\t\tclasses,\n\t\t\trows,\n\t\t\tcolumns,\n\t\t\tcells,\n\t\t} = select.getTable(tableId, false);\n\n\t\t// Remove border row if it exists\n\t\tconst filteredRows = rows.filter(row => row.row_id !== '0');\n\n\t\t// Remove border column if it exists\n\t\tconst filteredColumns = columns.filter(column => column.column_id !== '0');\n\n\t\t// Remove border cells if they exists\n\t\tconst filteredCells = cells.filter(cell => cell.row_id !== '0' && cell.column_id !== '0');\n\n\t\t// Remove cell_id from cells.  They don't go back to the webservice\n\t\tconst transformedCells = filteredCells.map(\n\t\t\t({ table_id, column_id, row_id, attributes, classes, content }) => ({\n\t\t\t\ttable_id,\n\t\t\t\tcolumn_id,\n\t\t\t\trow_id,\n\t\t\t\tattributes,\n\t\t\t\tclasses,\n\t\t\t\tcontent,\n\t\t\t})\n\t\t);\n\n\t\tconst tableStatus = (overrideTableStatus, table_status) => {\n\t\t\tif (overrideTableStatus) {\n\t\t\t\treturn overrideTableStatus;\n\t\t\t}\n\t\t\treturn table_status;\n\t\t};\n\n\t\tconst updatedTable = {\n\t\t\tid: tableId,\n\t\t\ttitle: table_name,\n\t\t\theader: {\n\t\t\t\tid: table_id,\n\t\t\t\tblock_table_ref: block_table_ref,\n\t\t\t\tstatus: tableStatus(overrideTableStatus, table_status),\n\t\t\t\tpost_id: post_id,\n\t\t\t\ttable_name: table_name,\n\t\t\t\tattributes: attributes,\n\t\t\t\tclasses: classes,\n\t\t\t},\n\t\t\trows: [...filteredRows],\n\t\t\tcolumns: [...filteredColumns],\n\t\t\tcells: [...transformedCells],\n\t\t};\n\n\t\tconsole.log('UPDATING TABLE ENTITY');\n\t\tconsole.log(updatedTable);\n\n\t\t/**\n\t\t * Options: isCached: Bool\n\t\t *          undoIgnore: Bool\n\t\t */\n\t\ttry {\n\t\t\tregistry\n\t\t\t\t.dispatch(coreStore)\n\t\t\t\t.editEntityRecord('dynamic-tables', 'table', table_id, updatedTable);\n\t\t} catch (error) {\n\t\t\tconsole.log('Error in updateTableEntity - Table ID - ' + tableId);\n\t\t\talert('            ...Update Table Entity - async error - ' + error);\n\t\t}\n\t};\n\n/**\n * Remove table entity.  The delete is persisted.\n *\n * @since    1.0.0\n *\n * @see      processDeletedTables\n *\n * @param {number} tableId Identifier key for the table\n * @return {Object} Action Object\n */\nexport const deleteTableEntity =\n\ttableId =>\n\tasync ({ select, dispatch, registry }) => {\n\t\tconsole.log('In Action deleteTableEntity');\n\n\t\ttry {\n\t\t\tconst deletedTableEntity = await registry\n\t\t\t\t.dispatch(coreStore)\n\t\t\t\t.deleteEntityRecord('dynamic-tables', 'table', tableId);\n\n\t\t\tdispatch({\n\t\t\t\ttype: DELETE_TABLE,\n\t\t\t\ttableId,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log('Error in deleteTableEntity - Table ID - ' + tableId);\n\t\t\talert('            ...Resolver - async error - ' + error);\n\t\t}\n\t\tconsole.log('            Resolver - async completed');\n\t};\n\n/**\n * Signals a delete of table entities for all local tables with a status of 'deleted'.\n *\n * @since    1.0.0\n *\n * @param {Object} deletedTables Object of deleted tables\n * @return  {Object} Action object\n */\nexport const processDeletedTables =\n\tdeletedTables =>\n\t({ dispatch }) => {\n\t\tconsole.log('In Action processDeletedTables');\n\t\tObject.keys(deletedTables).forEach(key => {\n\t\t\tconst deletedTableId = deletedTables[key].table_id;\n\t\t\tconsole.log(deletedTableId);\n\t\t\tdispatch.deleteTableEntity(deletedTables[key].table_id);\n\t\t});\n\t};\n\n/**\n * Searches for previously unbounted tables' block in post.  If found, remove block id\n * attribute. Otherwise, mark table with a deleted.\n *\n * @since    1.0.0\n *\n * @param {Object} unmountedTables Object of currently unmounted tables\n * @return  {Object} Action object\n */\nexport const processUnmountedTables =\n\tunmountedTables =>\n\t({ dispatch, registry }) => {\n\t\tconsole.log('In Action processUnmountedTables');\n\t\tObject.keys(unmountedTables).forEach(key => {\n\t\t\tconst unmountedTableBlockId = unmountedTables[key].unmounted_blockid;\n\t\t\tconst priorStatus = unmountedTables[key].prior_status;\n\t\t\tconst tableBlock = registry.select(blockEditorStore).getBlock(unmountedTableBlockId);\n\t\t\tconsole.log(tableBlock);\n\t\t\tif (tableBlock) {\n\t\t\t\tdispatch.updateTableProp(unmountedTables[key].table_id, 'table_status');\n\t\t\t\tdispatch.updateTableProp(unmountedTables[key].table_id, 'table_status', priorStatus);\n\t\t\t\tdispatch.removeTableProp(unmountedTables[key].table_id, 'unmounted_blockid');\n\t\t\t\tdispatch.removeTableProp(unmountedTables[key].table_id, 'prior_status');\n\t\t\t\tdispatch.updateTableEntity(unmountedTables[key].table_id);\n\t\t\t} else {\n\t\t\t\tdispatch.updateTableProp(unmountedTables[key].table_id, 'table_status', 'deleted');\n\t\t\t\tdispatch.removeTableProp(unmountedTables[key].table_id, 'unmounted_blockid');\n\t\t\t}\n\t\t});\n\t};\n\n/**\n * Signals the addition of a new table column.\n *\n * @since    1.0.0\n *\n * @param {number}       tableId     Identifier key for the table\n * @param {number}       columnId    Identifier for a table column\n * @param {Object}       newColumn   Column definition\n * @param {Array|Object} columnCells Cell definitions associated with the column\n * @return  {Object} Action object\n */\nexport const addColumn = (tableId, columnId, newColumn, columnCells) => {\n\treturn {\n\t\ttype: INSERT_COLUMN,\n\t\ttableId,\n\t\tcolumnId,\n\t\tnewColumn,\n\t\tcolumnCells,\n\t};\n};\n\n/**\n * Signals the addition of a new table row.\n *\n * @since    1.0.0\n *\n * @param {number}       tableId  Identifier key for the table\n * @param {number}       rowId    Identifier for a table row\n * @param {Object}       newRow   Row definition\n * @param {Array|Object} rowCells Cell definitions associated with the row\n * @return  {Object} Action object\n */\nexport const addRow = (tableId, rowId, newRow, rowCells) => {\n\treturn {\n\t\ttype: INSERT_ROW,\n\t\ttableId,\n\t\trowId,\n\t\tnewRow,\n\t\trowCells,\n\t};\n};\n\n/**\n * Signals the removal of a table column.\n *\n * @since    1.0.0\n *\n * @param {number} tableId  Identifier key for the table\n * @param {number} columnId Identifier for a table column\n * @return  {Object} Action object\n */\nexport const removeColumn = (tableId, columnId) => {\n\treturn {\n\t\ttype: DELETE_COLUMN,\n\t\ttableId,\n\t\tcolumnId,\n\t};\n};\n\n/**\n * Signals the removal of a table row.\n *\n * @since    1.0.0\n *\n * @param {number} tableId Identifier key for the table\n * @param {number} rowId   Identifier for a table row\n * @return {Object} Action object\n */\nexport const removeRow = (tableId, rowId) => {\n\treturn {\n\t\ttype: DELETE_ROW,\n\t\ttableId,\n\t\trowId,\n\t};\n};\n\n/**\n * Signals the assignment of a table id following the creation of a new table.\n *\n * @since    1.0.0\n *\n * @param {number} tableId Identifier key for the table\n * @return  {Object} Action object\n */\nexport const assignTableId = tableId => {\n\treturn {\n\t\ttype: CHANGE_TABLE_ID,\n\t\ttableId: '0',\n\t\tnewTableId: String(tableId),\n\t};\n};\n\n/**\n * Signal an update to a header level table attribute.\n *\n * @since    1.0.0\n *\n * @param {number}              tableId   Identifier key for the table\n * @param {string}              attribute attribute name\n * @param {string|number|Array} value     New value for the attribute\n * @return  {Object} Action object\n */\nexport const updateTableProp = (tableId, attribute, value) => {\n\tconsole.log('In Action updateTableProp');\n\treturn {\n\t\ttype: UPDATE_TABLE_PROP,\n\t\ttableId: tableId,\n\t\tattribute,\n\t\tvalue,\n\t};\n};\n\n/**\n * Signal the removal of a header level table attribute.\n *\n * @since    1.0.0\n *\n * @param {number} tableId   Identifier key for the table\n * @param {string} attribute attribute name\n * @return  {Object} Action object\n */\nexport const removeTableProp = (tableId, attribute) => {\n\tconsole.log('In Action removeTableProp');\n\treturn {\n\t\ttype: REMOVE_TABLE_PROP,\n\t\ttableId: tableId,\n\t\tattribute,\n\t};\n};\n\n/**\n * Signal an update to a row attribute/prop.\n *\n * @since    1.0.0\n *\n * @param {number}        tableId   Identifier key for the table\n * @param {number}        rowId     Identifier for a table row\n * @param {string}        attribute Type of prop (attributes, classes)\n * @param {Object|string} value     New value for the prop\n * @return  {Object} Action object\n */\nexport const updateRow = (tableId, rowId, attribute, value) => {\n\tconsole.log('In Action updateRow');\n\treturn {\n\t\ttype: UPDATE_ROW,\n\t\ttableId,\n\t\trowId,\n\t\tattribute,\n\t\tvalue,\n\t};\n};\n\n/**\n * Signal an update to a row attribute/prop.\n *\n * @since    1.0.0\n *\n * @param {number}        tableId   Identifier key for the table\n * @param {number}        columnId  Identifier for a table column\n * @param {string}        attribute Type of prop (attributes, classes)\n * @param {Object|string} value     New value for the prop\n * @return  {Object} Action object\n */\nexport const updateColumn = (tableId, columnId, attribute, value) => {\n\tconsole.log('In Action updateColumn');\n\treturn {\n\t\ttype: UPDATE_COLUMN,\n\t\ttableId,\n\t\tcolumnId,\n\t\tattribute,\n\t\tvalue,\n\t};\n};\n\n/**\n * Signal an update to a cell attribute/prop.\n *\n * @since    1.0.0\n *\n * @param {number}        tableId   Identifier key for the table\n * @param {string}        cellId    Identifier for a table cell\n * @param {string}        attribute Type of prop (content, attributes, classes)\n * @param {Object|string} value     New value for the prop\n * @return {Object} Action object\n */\nexport const updateCell = (tableId, cellId, attribute, value) => {\n\tconsole.log('In Action updateCell');\n\treturn {\n\t\ttype: UPDATE_CELL,\n\t\ttableId,\n\t\tcellId,\n\t\tattribute,\n\t\tvalue,\n\t};\n};\n\n/**\n * Signal the addition or removal of table borders.\n *\n * @since    1.0.0\n *\n * @param {Array|Object} tableId\n * @param {Array|Object} tableRows    Array of table row objects\n * @param {Array|Object} tableColumns Array of table column objects\n * @param {Array|Object} tableCells   Array of table cell objects\n * @return  {Object} Action object\n */\nexport const updateTableBorder =\n\t(tableId, tableRows, tableColumns, tableCells) =>\n\tasync ({ dispatch }) => {\n\t\tconsole.log('Updating Border');\n\n\t\tawait dispatch({\n\t\t\ttype: PROCESS_BORDERS,\n\t\t\ttableId: tableId,\n\t\t\trows: tableRows,\n\t\t\tcolumns: tableColumns,\n\t\t\tcells: tableCells,\n\t\t});\n\t};\n","/**\n * The reducer key used by core data in store registration.\n * This is defined in a separate file to avoid cycle-dependency\n *\n * @since    1.0.0\n *\n * @type     {string}\n */\nconst STORE_NAME = 'dynamic-tables/table';\nexport default STORE_NAME;\n","/* External dependencies */\nimport { createReduxStore, register } from '@wordpress/data';\n\n/* Internal dependencies */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport * as resolvers from './resolvers';\nimport STORE_NAME from './constants';\n\n/**\n * Create Dynamic Tables store.\n *\n * @since    1.0.0\n *\n * @type     {Object} Wordpress block store\n */\nexport const store = createReduxStore(STORE_NAME, {\n\treducer,\n\tselectors,\n\tactions,\n\tresolvers,\n});\n\nregister(store);\n","/* Internal dependencies */\nimport TYPES from './action-types';\nimport { numberToLetter, updateArray, tableSort } from '../utils';\n\nconst {\n\tCREATE_TABLE,\n\tINSERT_COLUMN,\n\tINSERT_ROW,\n\tDELETE_TABLE,\n\tDELETE_COLUMN,\n\tDELETE_ROW,\n\tCHANGE_TABLE_ID,\n\tUPDATE_TABLE_PROP,\n\tREMOVE_TABLE_PROP,\n\tUPDATE_ROW,\n\tUPDATE_COLUMN,\n\tUPDATE_CELL,\n\tRECEIVE_HYDRATE,\n\tPROCESS_BORDERS,\n} = TYPES;\n\n/**\n * Dynamic Table reducer helper for a single table.\n *\n * @since    1.0.0\n *\n * @param {Object} state  Current table\n * @param {Object} action Action activity to be performed\n * @return {Object} Updated table\n */\nconst table = (\n\tstate = {\n\t\ttable: {},\n\t},\n\taction\n) => {\n\tconsole.log('      Reducer. state: ' + JSON.stringify(state));\n\tconsole.log('      Reducer. type: ' + action.type);\n\n\tswitch (action.type) {\n\t\tcase CREATE_TABLE:\n\t\t\treturn {\n\t\t\t\ttable: {\n\t\t\t\t\t...action.table,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase CHANGE_TABLE_ID:\n\t\t\tconsole.log('In Reducer CHANGE_TABLE_ID');\n\t\t\tconst newTableIdState = { ...state };\n\t\t\tconst rowsWithNewId_ChangeId = [];\n\t\t\tconst columnsWithNewId_ChangeId = [];\n\t\t\tconst cellsWithNewId_ChangeId = [];\n\n\t\t\tconsole.log(newTableIdState.rows);\n\t\t\tnewTableIdState.rows.forEach(row => {\n\t\t\t\tconsole.log(row);\n\t\t\t\tconst newRow_ChangeId = {\n\t\t\t\t\t...row,\n\t\t\t\t\ttable_id: action.newTableId,\n\t\t\t\t};\n\t\t\t\trowsWithNewId_ChangeId.push(newRow_ChangeId);\n\t\t\t});\n\n\t\t\tnewTableIdState.columns.forEach(column => {\n\t\t\t\tconst newColumn_ChangeId = {\n\t\t\t\t\t...column,\n\t\t\t\t\ttable_id: action.newTableId,\n\t\t\t\t};\n\t\t\t\tcolumnsWithNewId_ChangeId.push(newColumn_ChangeId);\n\t\t\t});\n\n\t\t\tnewTableIdState.cells.forEach(cell => {\n\t\t\t\tconst newCell_ChangeId = {\n\t\t\t\t\t...cell,\n\t\t\t\t\ttable_id: action.newTableId,\n\t\t\t\t};\n\t\t\t\tcellsWithNewId_ChangeId.push(newCell_ChangeId);\n\t\t\t});\n\n\t\t\tconst updatedTableId = {\n\t\t\t\t...state,\n\t\t\t\ttable_id: action.newTableId,\n\t\t\t\trows: [...rowsWithNewId_ChangeId],\n\t\t\t\tcolumns: [...columnsWithNewId_ChangeId],\n\t\t\t\tcells: [...cellsWithNewId_ChangeId],\n\t\t\t};\n\t\t\tconsole.log(updatedTableId);\n\n\t\t\treturn {\n\t\t\t\ttable: updatedTableId,\n\t\t\t};\n\n\t\tcase UPDATE_TABLE_PROP:\n\t\t\tconsole.log('In Reducer UPDATE_TABLE_PROP');\n\n\t\t\tconst updatedTable = {\n\t\t\t\t...state,\n\t\t\t\t[action.attribute]: action.value,\n\t\t\t};\n\t\t\tconsole.log(updatedTable);\n\n\t\t\treturn {\n\t\t\t\ttable: updatedTable,\n\t\t\t};\n\n\t\tcase REMOVE_TABLE_PROP:\n\t\t\tconst tablePropRemoved = { ...state };\n\t\t\t// const removedAttribute = action.attribute\n\t\t\tdelete tablePropRemoved[action.attribute];\n\n\t\t\treturn {\n\t\t\t\ttable: tablePropRemoved,\n\t\t\t};\n\n\t\tcase INSERT_COLUMN:\n\t\t\tconsole.log('In Reducer INSERT_COLUMN');\n\t\t\tconst insertColumnState = { ...state };\n\n\t\t\t/**\n\t\t\t * Insert new column and update existing column_id's\n\t\t\t */\n\t\t\tconst columnsWithNewId_InsertColumn = [];\n\t\t\tinsertColumnState.columns.forEach(column => {\n\t\t\t\tif (Number(column.column_id) < Number(action.columnId)) {\n\t\t\t\t\tcolumnsWithNewId_InsertColumn.push(column);\n\t\t\t\t} else {\n\t\t\t\t\tconst newColumn_InsertColumn = {\n\t\t\t\t\t\ttable_id: column.table_id,\n\t\t\t\t\t\tcolumn_id: String(Number(column.column_id) + 1),\n\t\t\t\t\t\tcolumn_name: column.column_name,\n\t\t\t\t\t\tattributes: column.attributes,\n\t\t\t\t\t\tclasses: column.classes,\n\t\t\t\t\t};\n\t\t\t\t\tcolumnsWithNewId_InsertColumn.push(newColumn_InsertColumn);\n\t\t\t\t}\n\t\t\t});\n\t\t\tcolumnsWithNewId_InsertColumn.push(action.newColumn);\n\t\t\tconst sortedColumns_InsertColumn = tableSort('columns', columnsWithNewId_InsertColumn);\n\n\t\t\t/**\n\t\t\t * Insert new cells and update existing column_id's\n\t\t\t */\n\t\t\tconst cellsWithNewId_InsertColumn = [];\n\t\t\tinsertColumnState.cells.forEach(cell => {\n\t\t\t\tif (cell.column_id < action.columnId) {\n\t\t\t\t\tcellsWithNewId_InsertColumn.push(cell);\n\t\t\t\t} else {\n\t\t\t\t\tconst newColumnId_InsertColumn = String(Number(cell.column_id) + 1);\n\t\t\t\t\tconst columnLetter_InsertColumn = numberToLetter(newColumnId_InsertColumn);\n\t\t\t\t\tconst cellContent_InsertColumn =\n\t\t\t\t\t\tNumber(cell.row_id) == 0 ? columnLetter_InsertColumn : cell.content;\n\t\t\t\t\tconst newCell_InsertColumn = {\n\t\t\t\t\t\ttable_id: cell.table_id,\n\t\t\t\t\t\tcolumn_id: newColumnId_InsertColumn,\n\t\t\t\t\t\trow_id: cell.row_id,\n\t\t\t\t\t\tcell_id: columnLetter_InsertColumn + cell.row_id,\n\t\t\t\t\t\tattributes: cell.attributes,\n\t\t\t\t\t\tclasses: cell.classes,\n\t\t\t\t\t\tcontent: cellContent_InsertColumn,\n\t\t\t\t\t};\n\t\t\t\t\tcellsWithNewId_InsertColumn.push(newCell_InsertColumn);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst allNewColumnCells_InsertColumn = [\n\t\t\t\t...cellsWithNewId_InsertColumn,\n\t\t\t\t...action.columnCells,\n\t\t\t];\n\t\t\tconst sortedCells_InsertColumn = tableSort('cells', allNewColumnCells_InsertColumn);\n\n\t\t\tconst returnedTableNewColumn_InsertColumn = {\n\t\t\t\t...insertColumnState,\n\t\t\t\trows: [...insertColumnState.rows],\n\t\t\t\tcolumns: [...sortedColumns_InsertColumn],\n\t\t\t\tcells: [...sortedCells_InsertColumn],\n\t\t\t};\n\n\t\t\tconsole.log(returnedTableNewColumn_InsertColumn);\n\n\t\t\treturn {\n\t\t\t\ttable: returnedTableNewColumn_InsertColumn,\n\t\t\t};\n\n\t\tcase INSERT_ROW:\n\t\t\tconsole.log('In Reducer INSERT_ROW');\n\t\t\tconst insertRowState = { ...state };\n\t\t\tconsole.log(insertRowState);\n\n\t\t\t/**\n\t\t\t * Insert new row and update existing row_id's\n\t\t\t */\n\t\t\tconst rowsWithNewId_InsertRow = [];\n\t\t\tinsertRowState.rows.forEach(row => {\n\t\t\t\tif (Number(row.row_id) < Number(action.rowId)) {\n\t\t\t\t\trowsWithNewId_InsertRow.push(row);\n\t\t\t\t} else {\n\t\t\t\t\tconst newRow_InsertRow = {\n\t\t\t\t\t\ttable_id: row.table_id,\n\t\t\t\t\t\trow_id: String(Number(row.row_id) + 1),\n\t\t\t\t\t\tattributes: row.attributes,\n\t\t\t\t\t\tclasses: row.classes,\n\t\t\t\t\t};\n\t\t\t\t\trowsWithNewId_InsertRow.push(newRow_InsertRow);\n\t\t\t\t}\n\t\t\t});\n\t\t\trowsWithNewId_InsertRow.push(action.newRow);\n\t\t\tconsole.log(rowsWithNewId_InsertRow);\n\n\t\t\tconst sortedRows = tableSort('rows', rowsWithNewId_InsertRow);\n\t\t\tconsole.log(sortedRows);\n\n\t\t\t/**\n\t\t\t * Insert new cells and update existing column_id's\n\t\t\t */\n\t\t\tconst cellsWithNewId_InsertRow = [];\n\t\t\tinsertRowState.cells.forEach(cell => {\n\t\t\t\tconsole.log(cell);\n\t\t\t\tif (Number(cell.row_id) < Number(action.rowId)) {\n\t\t\t\t\tcellsWithNewId_InsertRow.push(cell);\n\t\t\t\t} else {\n\t\t\t\t\tconst newRowId_InsertRow = String(Number(cell.row_id) + 1);\n\t\t\t\t\tconst columnLetter_InsertRow =\n\t\t\t\t\t\tcell.column_id == '0' ? '0' : numberToLetter(cell.column_id);\n\t\t\t\t\tconst cellContent_InsertRow =\n\t\t\t\t\t\tNumber(cell.column_id) == 0 ? newRowId_InsertRow : cell.content;\n\t\t\t\t\tconst newCell_InsertRow = {\n\t\t\t\t\t\ttable_id: cell.table_id,\n\t\t\t\t\t\tcolumn_id: cell.column_id,\n\t\t\t\t\t\trow_id: newRowId_InsertRow,\n\t\t\t\t\t\tcell_id: columnLetter_InsertRow + newRowId_InsertRow,\n\t\t\t\t\t\tattributes: cell.attributes,\n\t\t\t\t\t\tclasses: cell.classes,\n\t\t\t\t\t\tcontent: cellContent_InsertRow,\n\t\t\t\t\t};\n\t\t\t\t\tcellsWithNewId_InsertRow.push(newCell_InsertRow);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst allNewRowCells = [...cellsWithNewId_InsertRow, ...action.rowCells];\n\t\t\tconst sortedCells_InsertRow = tableSort('cells', allNewRowCells);\n\n\t\t\tconst returnedTableNewRow_InsertRow = {\n\t\t\t\t...insertRowState,\n\t\t\t\trows: [...sortedRows],\n\t\t\t\tcolumns: [...insertRowState.columns],\n\t\t\t\tcells: [...sortedCells_InsertRow],\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\ttable: returnedTableNewRow_InsertRow,\n\t\t\t};\n\n\t\tcase DELETE_COLUMN:\n\t\t\tconsole.log('In Reducer DELETE_COLUMN');\n\t\t\tconst deleteColumnState = { ...state };\n\n\t\t\t/**\n\t\t\t * Delete new column and update existing column_id's\n\t\t\t */\n\t\t\tconst columnsWithNewId_DeleteColumn = [];\n\t\t\tdeleteColumnState.columns.forEach(column => {\n\t\t\t\tif (Number(column.column_id) < Number(action.columnId)) {\n\t\t\t\t\tcolumnsWithNewId_DeleteColumn.push(column);\n\t\t\t\t} else if (Number(column.column_id) > Number(action.columnId)) {\n\t\t\t\t\tconst newColumn_DeleteColumn = {\n\t\t\t\t\t\ttable_id: column.table_id,\n\t\t\t\t\t\tcolumn_id: String(Number(column.column_id) - 1),\n\t\t\t\t\t\tcolumn_name: column.column_name,\n\t\t\t\t\t\tattributes: column.attributes,\n\t\t\t\t\t\tclasses: column.classes,\n\t\t\t\t\t};\n\t\t\t\t\tcolumnsWithNewId_DeleteColumn.push(newColumn_DeleteColumn);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Delete new cells and update existing column_id's\n\t\t\t */\n\t\t\tconst cellsWithNewId_DeleteColumn = [];\n\t\t\tdeleteColumnState.cells.forEach(cell => {\n\t\t\t\tif (Number(cell.column_id) < Number(action.columnId)) {\n\t\t\t\t\tcellsWithNewId_DeleteColumn.push(cell);\n\t\t\t\t} else if (Number(cell.column_id) > Number(action.columnId)) {\n\t\t\t\t\tconst newColumnId_DeleteColumn = String(Number(cell.column_id) - 1);\n\t\t\t\t\tconst columnLetter_DeleteColumn = numberToLetter(newColumnId_DeleteColumn);\n\t\t\t\t\tconst cellContent_DeleteColumn =\n\t\t\t\t\t\tNumber(cell.row_id) == 0 ? columnLetter_DeleteColumn : cell.content;\n\t\t\t\t\tconst newCell_DeleteColumn = {\n\t\t\t\t\t\ttable_id: cell.table_id,\n\t\t\t\t\t\tcolumn_id: newColumnId_DeleteColumn,\n\t\t\t\t\t\trow_id: cell.row_id,\n\t\t\t\t\t\tcell_id: columnLetter_DeleteColumn + cell.row_id,\n\t\t\t\t\t\tattributes: cell.attributes,\n\t\t\t\t\t\tclasses: cell.classes,\n\t\t\t\t\t\tcontent: cellContent_DeleteColumn,\n\t\t\t\t\t};\n\t\t\t\t\tcellsWithNewId_DeleteColumn.push(newCell_DeleteColumn);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst returnedTableNewColumn_DeleteColumn = {\n\t\t\t\t...deleteColumnState,\n\t\t\t\trows: [...deleteColumnState.rows],\n\t\t\t\tcolumns: [...columnsWithNewId_DeleteColumn],\n\t\t\t\tcells: [...cellsWithNewId_DeleteColumn],\n\t\t\t};\n\n\t\t\tconsole.log(returnedTableNewColumn_DeleteColumn);\n\n\t\t\treturn {\n\t\t\t\ttable: returnedTableNewColumn_DeleteColumn,\n\t\t\t};\n\n\t\tcase DELETE_ROW:\n\t\t\tconsole.log('In Reducer DELETE_ROW');\n\t\t\tconst deleteRowState = { ...state };\n\n\t\t\t/**\n\t\t\t * Delete new column and update existing column_id's\n\t\t\t */\n\t\t\tconst rowsWithNewId_DeleteRow = [];\n\t\t\tconsole.log(deleteRowState);\n\t\t\tdeleteRowState.rows.forEach(row => {\n\t\t\t\tif (Number(row.row_id) < Number(action.rowId)) {\n\t\t\t\t\trowsWithNewId_DeleteRow.push(row);\n\t\t\t\t} else if (Number(row.row_id) > Number(action.rowId)) {\n\t\t\t\t\tconst newRow_DeleteRow = {\n\t\t\t\t\t\ttable_id: row.table_id,\n\t\t\t\t\t\trow_id: String(Number(row.row_id) - 1),\n\t\t\t\t\t\tattributes: row.attributes,\n\t\t\t\t\t\tclasses: row.classes,\n\t\t\t\t\t};\n\t\t\t\t\trowsWithNewId_DeleteRow.push(newRow_DeleteRow);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// rowsWithNewId_DeleteRow.push(action.newColumn)\n\t\t\t// var sortedRows= tableSort('rows', rowsWithNewId_DeleteRow)\n\n\t\t\t/**\n\t\t\t * Delete new cells and update existing row_id's\n\t\t\t */\n\t\t\tconst cellsWithNewId_DeleteRow = [];\n\t\t\tconsole.log(deleteRowState.cells);\n\t\t\tdeleteRowState.cells.forEach(cell => {\n\t\t\t\tif (Number(cell.row_id) < Number(action.rowId)) {\n\t\t\t\t\tcellsWithNewId_DeleteRow.push(cell);\n\t\t\t\t} else if (Number(cell.row_id) > Number(action.rowId)) {\n\t\t\t\t\tconst newRowId_DeleteRow = String(Number(cell.row_id) - 1);\n\t\t\t\t\tconst columnLetter_DeleteRow =\n\t\t\t\t\t\tcell.column_id == '0' ? '0' : numberToLetter(cell.column_id);\n\t\t\t\t\tconst cellContent_DeleteRow =\n\t\t\t\t\t\tNumber(cell.column_id) == 0 ? newRowId_DeleteRow : cell.content;\n\t\t\t\t\tconst newCell_DeleteRow = {\n\t\t\t\t\t\ttable_id: cell.table_id,\n\t\t\t\t\t\tcolumn_id: cell.column_id,\n\t\t\t\t\t\trow_id: newRowId_DeleteRow,\n\t\t\t\t\t\tcell_id: columnLetter_DeleteRow + cell.row_id,\n\t\t\t\t\t\tattributes: cell.attributes,\n\t\t\t\t\t\tclasses: cell.classes,\n\t\t\t\t\t\tcontent: cellContent_DeleteRow,\n\t\t\t\t\t};\n\t\t\t\t\tcellsWithNewId_DeleteRow.push(newCell_DeleteRow);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// var allNewColumnCells = [...cellsWithNewId_DeleteRow, ...action.columnCells]\n\t\t\t// var sortedCells = tableSort('cells', allNewColumnCells)\n\n\t\t\tconst returnedTableNewRow_DeleteRow = {\n\t\t\t\t...deleteRowState,\n\t\t\t\trows: [...rowsWithNewId_DeleteRow],\n\t\t\t\tcolumns: [...deleteRowState.columns],\n\t\t\t\tcells: [...cellsWithNewId_DeleteRow],\n\t\t\t};\n\n\t\t\tconsole.log(returnedTableNewRow_DeleteRow);\n\n\t\t\treturn {\n\t\t\t\ttable: returnedTableNewRow_DeleteRow,\n\t\t\t};\n\n\t\tcase UPDATE_ROW:\n\t\t\tconsole.log('In Reducer UPDATE_ROW');\n\n\t\t\tlet transformedValue_UpdateRow = ' \"' + action.value + '\"';\n\n\t\t\tif (action.attribute === 'attributes') {\n\t\t\t\ttransformedValue_UpdateRow = JSON.stringify(action.value);\n\t\t\t}\n\t\t\tconsole.log();\n\n\t\t\tconst newRowsState = { ...state };\n\t\t\tconst updatedRowData = JSON.parse(\n\t\t\t\t'{ \"' + action.attribute + '\" :' + transformedValue_UpdateRow + '}'\n\t\t\t);\n\t\t\tconsole.log(newRowsState);\n\t\t\tconsole.log(newRowsState.rows);\n\t\t\tconst updatedRows = updateArray(newRowsState.rows, 'row_id', action.rowId, updatedRowData);\n\n\t\t\tconsole.log(updatedRowData);\n\t\t\tconsole.log(updatedRows);\n\n\t\t\tconst returnedUpdatedTableRow = {\n\t\t\t\t...newRowsState,\n\t\t\t\trows: [...updatedRows],\n\t\t\t\tcolumns: [...newRowsState.columns],\n\t\t\t\tcells: [...newRowsState.cells],\n\t\t\t};\n\t\t\treturn {\n\t\t\t\ttable: returnedUpdatedTableRow,\n\t\t\t};\n\n\t\tcase UPDATE_COLUMN:\n\t\t\tconsole.log('In Reducer UPDATE_COLUMN');\n\n\t\t\tlet transformedValue_UpdateColumn = ' \"' + action.value + '\"';\n\n\t\t\tif (action.attribute === 'attributes') {\n\t\t\t\ttransformedValue_UpdateColumn = JSON.stringify(action.value);\n\t\t\t}\n\n\t\t\tconsole.log(transformedValue_UpdateColumn);\n\t\t\tconst newColumnsState = { ...state };\n\t\t\tconst updatedColumnData = JSON.parse(\n\t\t\t\t'{ \"' + action.attribute + '\" :' + transformedValue_UpdateColumn + '}'\n\t\t\t);\n\t\t\tconsole.log(newColumnsState);\n\t\t\tconsole.log(newColumnsState.columns);\n\t\t\tconst updatedColumns = updateArray(\n\t\t\t\tnewColumnsState.columns,\n\t\t\t\t'column_id',\n\t\t\t\taction.columnId,\n\t\t\t\tupdatedColumnData\n\t\t\t);\n\n\t\t\tconsole.log(updatedColumnData);\n\t\t\tconsole.log(updatedColumns);\n\n\t\t\tconst returnedUpdatedTableColumn = {\n\t\t\t\t...newColumnsState,\n\t\t\t\trows: [...newColumnsState.rows],\n\t\t\t\tcolumns: [...updatedColumns],\n\t\t\t\tcells: [...newColumnsState.cells],\n\t\t\t};\n\t\t\treturn {\n\t\t\t\ttable: returnedUpdatedTableColumn,\n\t\t\t};\n\n\t\tcase UPDATE_CELL:\n\t\t\tconsole.log('In Reducer UPDATE_CELL');\n\t\t\tconst newCellsState = { ...state };\n\t\t\tconsole.log(state);\n\t\t\tconsole.log(newCellsState);\n\t\t\tconst updatedCellData = JSON.parse('{ \"' + action.attribute + '\" : \"' + action.value + '\"}');\n\t\t\tconst updatedCells = updateArray(\n\t\t\t\tnewCellsState.cells,\n\t\t\t\t'cell_id',\n\t\t\t\taction.cellId,\n\t\t\t\tupdatedCellData\n\t\t\t);\n\n\t\t\tconst returnedCellState = {\n\t\t\t\t...state,\n\t\t\t\trows: [...newCellsState.rows],\n\t\t\t\tcolumns: [...newCellsState.columns],\n\t\t\t\tcells: [...updatedCells],\n\t\t\t};\n\t\t\tconsole.log(returnedCellState);\n\t\t\treturn {\n\t\t\t\ttable: returnedCellState,\n\t\t\t};\n\n\t\tcase PROCESS_BORDERS:\n\t\t\tconsole.log('In Reducer PROCESS_BORDERS');\n\t\t\tconst newBaseTableState = { ...state };\n\n\t\t\tconst returnedBorderState = {\n\t\t\t\t...newBaseTableState,\n\t\t\t\trows: tableSort('rows', [...action.rows]),\n\t\t\t\tcolumns: tableSort('columns', [...action.columns]),\n\t\t\t\tcells: tableSort('cells', [...action.cells]),\n\t\t\t};\n\n\t\t\tconsole.log(newBaseTableState);\n\t\t\tconsole.log(returnedBorderState);\n\n\t\t\treturn {\n\t\t\t\ttable: returnedBorderState,\n\t\t\t};\n\n\t\tcase RECEIVE_HYDRATE:\n\t\t\tconsole.log('RECEIVE_HYDATE...');\n\t\t\tconsole.log(state);\n\t\t\tconsole.log(action.table);\n\n\t\t\treturn {\n\t\t\t\ttable: {\n\t\t\t\t\t...state.table,\n\t\t\t\t\t...action.table,\n\t\t\t\t},\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n/**\n * Main Dynamic Tables reducer for all tables in block.\n *\n * @since    1.0.0\n *\n * @param {Object} state  Current table state\n * @param {Object} action Dispatched option\n * @return  {Object} Updated state\n */\nconst reducer = (\n\tstate = {\n\t\ttables: {},\n\t},\n\taction\n) => {\n\t// console.log('MAIN REDUCER');\n\t// console.log(state);\n\t// console.log('  Action Table ID = ' + action.tableId);\n\t// console.log(action);\n\n\tconst tableKey = action.tableId;\n\t// console.log(state.tables[tableKey]);\n\n\t// Updated state for the single table being acted upon\n\tconst newTableState = table(state.tables[tableKey], action);\n\t// let returnedTable = {\n\t// \t[action.tableId]: newTableState.table,\n\t// };\n\n\t// Return original state if the updated table is empty\n\tif (JSON.stringify(newTableState.table) === '{}') {\n\t\treturn state;\n\t}\n\t// console.log(returnedTable);\n\n\tconst newTablesState = { ...state.tables };\n\t// let newTablesStateKeys = Object.keys(state.tables)\n\n\tswitch (action.type) {\n\t\tcase CHANGE_TABLE_ID:\n\t\t\tconsole.log('In Reducer CHANGE_TABLE_ID for state');\n\n\t\t\tconst returnedTableNewId = {\n\t\t\t\t[action.newTableId]: newTableState.table,\n\t\t\t};\n\t\t\tconsole.log(returnedTableNewId);\n\n\t\t\tconst filteredTablesState = Object.keys(state.tables).reduce((acc, key) => {\n\t\t\t\tconsole.log(state.tables[key]);\n\t\t\t\tif (state.tables[key].table_id !== action.tableId) {\n\t\t\t\t\tacc[key] = { ...state.tables[key] };\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t}, {});\n\t\t\t// const filteredTablesState = Object.keys(state.tables)\n\t\t\t// .filter((key) =>\n\t\t\t//     state.tables[key] !== '0'\n\t\t\t// )\n\t\t\tconsole.log(filteredTablesState);\n\n\t\t\treturn {\n\t\t\t\ttables: {\n\t\t\t\t\t...filteredTablesState,\n\t\t\t\t\t...returnedTableNewId,\n\t\t\t\t},\n\t\t\t};\n\n\t\tcase DELETE_TABLE:\n\t\t\tconsole.log('In Reducer DELETE_TABLE...');\n\n\t\t\tconst deleteTablesState = Object.keys(state.tables).reduce((acc, key) => {\n\t\t\t\tconsole.log('Reducer key = ' + key);\n\t\t\t\tconsole.log('TableId to delete = ' + String(action.tableId));\n\t\t\t\tconsole.log(acc);\n\t\t\t\tif (key !== String(action.tableId)) {\n\t\t\t\t\tacc[key] = {\n\t\t\t\t\t\t...state.tables[key],\n\t\t\t\t\t\trows: [...state.tables[key].rows],\n\t\t\t\t\t\tcolumns: [...state.tables[key].columns],\n\t\t\t\t\t\tcells: [...state.tables[key].cells],\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t}, {});\n\n\t\t\tconsole.log(deleteTablesState);\n\t\t\treturn {\n\t\t\t\ttables: {\n\t\t\t\t\t...deleteTablesState,\n\t\t\t\t},\n\t\t\t};\n\n\t\tdefault:\n\t\t\tconsole.log('In Reducer Default State Handling');\n\t\t\tconst returnedTableDefault = {\n\t\t\t\t[action.tableId]: newTableState.table,\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\ttables: {\n\t\t\t\t\t...newTablesState,\n\t\t\t\t\t...returnedTableDefault,\n\t\t\t\t},\n\t\t\t};\n\t}\n};\n\nexport default reducer;\n","/* External dependencies */\nimport { store as coreStore } from '@wordpress/core-data';\nimport { numberToLetter } from '../utils';\n\n/**\n * Calculate the cell id for each cell in the Summary.\n *\n * @since    1.0.0\n *\n * @param {*} fetchedCells cell array retrieved the REST api\n * @return  {Array|Object} Cells with the added cell id attribute\n */\nfunction computeCellIds(fetchedCells) {\n\tfetchedCells.forEach(cell => {\n\t\tcell.cell_id = numberToLetter(cell.column_id) + cell.row_id;\n\t\tconsole.log(cell);\n\t});\n\treturn {\n\t\tfetchedCells,\n\t};\n}\n\n/**\n * Requests a table's record from the REST API.\n *\n * @since    1.0.0\n *\n * @param {number}  tableId      Identifier key for the table\n * @param {boolean} isTableStale Whether the current state is stale\n */\nexport const getTable =\n\t(tableId, isTableStale) =>\n\tasync ({ dispatch, registry }) => {\n\t\tconsole.log('            ...Resolver - Before fetch');\n\t\tconsole.log('            ...Table ID = ' + tableId);\n\t\tconsole.log('            ...Table Stale = ' + isTableStale);\n\n\t\tif (!isTableStale || tableId == '0') {\n\t\t\tconsole.log('Bypassing API Call');\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst tableEntity = await registry\n\t\t\t\t.resolveSelect(coreStore)\n\t\t\t\t.getEntityRecord('dynamic-tables', 'table', tableId);\n\n\t\t\tconst table = tableEntity;\n\t\t\tconst table_id = table.id;\n\t\t\tconst block_table_ref = table.header.block_table_ref;\n\t\t\tconst table_status = table.header.status;\n\t\t\tconst post_id = table.header.post_id;\n\t\t\tconst table_name = table.header.table_name;\n\t\t\tconst attributes = table.header.attributes;\n\t\t\tconst classes = table.header.classes;\n\t\t\tconst rows = table.rows;\n\t\t\tconst columns = table.columns;\n\t\t\tcomputeCellIds(table.cells);\n\t\t\tconst cells = table.cells;\n\n\t\t\tdispatch.receiveTable(\n\t\t\t\ttable_id,\n\t\t\t\tblock_table_ref,\n\t\t\t\ttable_status,\n\t\t\t\tpost_id,\n\t\t\t\ttable_name,\n\t\t\t\tattributes,\n\t\t\t\tclasses,\n\t\t\t\trows,\n\t\t\t\tcolumns,\n\t\t\t\tcells\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tconsole.log('Error in getTable - Table ID = ' + tableId);\n\t\t\talert('            ...Resolver - async error - ' + JSON.stringify(error, null, 4));\n\t\t}\n\t};\n","/**\n * Retrieve the current state of a single table by table id.  If stale, refresh\n * the table from the REST api.\n *\n * @since    1.0.0\n *\n * @param {Object}  state        Current state of tables\n * @param {number}  tableId      Identifier key for the table\n * @param {boolean} isTableStale Should fresh data be fetch from API?\n * @return {Object} Requested Table\n */\nexport function getTable(state, tableId, isTableStale) {\n\tif (!state.tables.hasOwnProperty(tableId)) {\n\t\treturn {\n\t\t\ttable_id: tableId,\n\t\t\tblock_table_ref: '',\n\t\t\tpost_id: '',\n\t\t\ttable_status: '',\n\t\t\ttable_name: '',\n\t\t\tattributes: [],\n\t\t\tclasses: '',\n\t\t\trows: [],\n\t\t\tcolumns: [],\n\t\t\tcells: [],\n\t\t};\n\t}\n\treturn state.tables[tableId];\n}\n\n/**\n * Retrieve the current state of a all tables (table blocks) in the post.\n *\n * @since    1.0.0\n *\n * @param {Object} state Current state of tables\n * @return {Object} All tables\n */\nexport function getTables(state) {\n\treturn state.tables;\n}\n\n/**\n * Retrieve the current state of a single table by the block's cross reference key.\n *\n * @since    1.0.0\n *\n * @param {Object} state           Current state of tables\n * @param {string} block_table_ref Cross refernece from block to identify table\n * @return {number} Table id of requested table\n */\nexport function getTableIdByBlock(state, block_table_ref) {\n\tconst newTable = Object.keys(state.tables).reduce((acc, key) => {\n\t\tif (state.tables[key]?.block_table_ref === block_table_ref) {\n\t\t\tacc[key] = { ...state.tables[key] };\n\t\t}\n\t\treturn acc;\n\t}, {});\n\n\tif (newTable.length === 0) {\n\t\treturn false;\n\t}\n\treturn Object.keys(newTable);\n}\n\n/**\n * Return all tables that are associated with unmounted blocks\n *\n * @param {*} state\n * @returns\n */\n/**\n * Get all tables associated with unmounted blocks.\n *\n * @since    1.0.0\n *\n * @param {Object} state Current state of tables\n * @return {Object} Unmounted tables\n */\nexport function getUnmountedTables(state) {\n\tconst unmountedTables = Object.keys(state.tables).reduce((acc, key) => {\n\t\tif (state.tables[key].unmounted_blockid) {\n\t\t\tacc[key] = { ...state.tables[key] };\n\t\t}\n\t\treturn acc;\n\t}, {});\n\treturn unmountedTables;\n}\n\n/**\n * Get all tables with a status of 'deleted'.\n *\n * @since    1.0.0\n *\n * @param {Object} state Current state of tables\n * @return {Object} Deleted tables\n */\nexport function getDeletedTables(state) {\n\tconst deletedTables = Object.keys(state.tables).reduce((acc, key) => {\n\t\tif (state.tables[key].table_status === 'deleted') {\n\t\t\tacc[key] = { ...state.tables[key] };\n\t\t}\n\t\treturn acc;\n\t}, {});\n\treturn deletedTables;\n}\n\n/**\n * Get all tables with a status of 'new'.  There should theoretically only be one\n * at any time.\n *\n * @since    1.0.0\n *\n * @param {Object} state Current state of tables\n * @return {Object} New tables\n */\nexport function getUnsavedTables(state) {\n\tconst newTables = Object.keys(state.tables).reduce((acc, key) => {\n\t\tif (state.tables[key].table_status === 'new') {\n\t\t\tacc[key] = { ...state.tables[key] };\n\t\t}\n\t\treturn acc;\n\t}, {});\n\treturn newTables;\n}\n","/* External dependencies */\nimport { useSelect, useDispatch, dispatch } from '@wordpress/data';\nimport { useState, useEffect, useRef } from '@wordpress/element';\nimport { store as editorStore } from '@wordpress/editor';\nimport { store as noticeStore } from '@wordpress/notices';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tPanel,\n\tPanelBody,\n\tPanelRow,\n\tTabbableContainer,\n\tButton,\n\tSpinner,\n\tPlaceholder,\n\tCheckboxControl,\n\t__experimentalInputControl as InputControl,\n\tBorderBoxControl,\n\t__experimentalNumberControl as NumberControl,\n} from '@wordpress/components';\nimport {\n\tRichText,\n\tuseBlockProps,\n\tuseSettings,\n\tBlockIcon,\n\tAlignmentControl,\n\tInspectorControls,\n\tBlockControls,\n\tBlockAlignmentToolbar,\n\tPanelColorSettings,\n} from '@wordpress/block-editor';\nimport { search, blockTable as icon } from '@wordpress/icons';\n\n/* Internal dependencies */\nimport { store as tableStore } from './data';\nimport { usePostChangesSaved } from './hooks';\nimport {\n\ttableSort,\n\tgenerateBlockTableRef,\n\tsetBorderContent,\n\topenCurrentColumnMenu,\n\topenCurrentRowMenu,\n\tremoveTags,\n} from './utils';\nimport { initTable, getDefaultRow, getDefaultColumn, getDefaultCell } from './table-defaults';\nimport {\n\tprocessColumns,\n\tprocessHeaderRow,\n\tprocessBodyRows,\n\tgridBandedRowTextColorStyle,\n\tgridBandedRowBackgroundColorStyle,\n\tgridInnerBorderStyle,\n\tgridInnerBorderWidthStyle,\n\tstartGridRowNbr,\n\tendGridRowNbr,\n\tgetGridHeaderBackgroundColorStyle,\n\tgetHeaderTextAlignmentStyle,\n\tgetBorderStyleType,\n\tgetBorderStyle,\n} from './style';\n\nimport { ColumnMenu, RowMenu } from './components';\nimport './editor.scss';\n\n/* Create Dynamic Tables entity in WordPress core-data */\ndispatch('core').addEntities([\n\t{\n\t\tname: 'table',\n\t\tkind: 'dynamic-tables',\n\t\tbaseURL: '/dynamic-tables/v1/tables',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'tables',\n\t\tlabel: __('Table'),\n\t\tgetTitle: record => record?.title || __('Unnamed Table'),\n\t},\n]);\n\n/**\n * Exports main logic for Dynamic Tables block.\n *\n * @since    1.0.0\n *\n * @param {Object} props\n */\nexport default function Edit(props) {\n\tconst blockProps = useBlockProps({\n\t\tclassName: 'dynamic-table-edit-block',\n\t});\n\t/* Esternal Store Action useDispatch declarations */\n\tconst { lockPostSaving } = useDispatch(editorStore);\n\tconst { lockPostAutosaving } = useDispatch(editorStore);\n\n\t/* Table Store Action useDispatch declarations */\n\tconst { receiveNewTable } = useDispatch(tableStore);\n\tconst { createTableEntity } = useDispatch(tableStore);\n\tconst { saveTableEntity } = useDispatch(tableStore);\n\tconst { addColumn } = useDispatch(tableStore);\n\tconst { addRow } = useDispatch(tableStore);\n\tconst { removeColumn } = useDispatch(tableStore);\n\tconst { removeRow } = useDispatch(tableStore);\n\tconst { updateTableProp } = useDispatch(tableStore);\n\tconst { updateRow } = useDispatch(tableStore);\n\tconst { updateColumn } = useDispatch(tableStore);\n\tconst { updateCell } = useDispatch(tableStore);\n\tconst { updateTableEntity } = useDispatch(tableStore);\n\tconst { updateTableBorder } = useDispatch(tableStore);\n\tconst { processUnmountedTables } = useDispatch(tableStore);\n\tconst { processDeletedTables } = useDispatch(tableStore);\n\tconst { createNotice, removeNotice } = useDispatch(noticeStore);\n\n\t/* Local State declarations */\n\tconst [isTableStale, setTableStale] = useState(true);\n\tconst [openColumnRow, setOpenColumnRow] = useState(0);\n\tconst [columnAttributes, setColumnAttributes] = useState({});\n\tconst [columnMenuVisible, setColumnMenuVisible] = useState(false);\n\tconst [rowMenuVisible, setRowMenuVisible] = useState(false);\n\tconst [rowAttributes, setRowAttributes] = useState({});\n\tconst [showBorders, setShowBorders] = useState(false);\n\tconst [tableName, setTableName] = useState('');\n\tconst [numColumns, setNumColumns] = useState(1);\n\tconst [numRows, setNumRows] = useState(1);\n\tconst [awaitingTableEntityCreation, setAwaitingTableEntityCreation] = useState(false);\n\n\t/* Current future features: Zoom to details */\n\tconst enableFutureFeatures = false;\n\tconst enableProFeatures = false;\n\n\tconst { table_id, block_table_ref, block_alignment } = props.attributes;\n\tconst themeColors = useSettings('color.palette');\n\tconst borderBoxColors = themeColors[0].map(({ color, name }) => {\n\t\treturn { color, name };\n\t});\n\n\t/**\n\t * Get Current Table Id.\n\t *\n\t * @type     {*}\n\t * @since    1.0.0\n\t *\n\t * @return Table Id\n\t */\n\tconst { currentTableId } = useSelect(select => {\n\t\tconst { getTableIdByBlock } = select(tableStore);\n\t\tconst currentTableId = getTableIdByBlock(block_table_ref);\n\n\t\treturn {\n\t\t\tcurrentTableId: currentTableId,\n\t\t};\n\t});\n\n\t/**\n\t * Set Table ID for newly created tables\n\t *\n\t * @since    1.0.0\n\t *\n\t * @return {boolean} Was Table Changed?\n\t */\n\tconst setTableIdChanged = () => {\n\t\tif (awaitingTableEntityCreation && Number(currentTableId) !== Number(table_id)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tconst isTableIdChanged = setTableIdChanged();\n\n\t/**\n\t * Identify unmounted tables\n\t *\n\t * Table blocks are unmounted when entering the text editor AND when deleted.  However,\n\t * don't know whether the table was deleted when an unmount is detected.  Therefore,\n\t * we mark them as unmounted at that time, and can identify whether the block was\n\t * truly deleted on the subsequent render.\n\t *\n\t * We mark tables as deleted if they do not identify that the block has been remounted\n\t *\n\t * @since 1.0.0\n\t *\n\t * @type  {Object} Object of all table id's that are currently unmounted\n\t */\n\tconst { unmountedTables } = useSelect(select => {\n\t\tconst { getUnmountedTables } = select(tableStore);\n\t\treturn {\n\t\t\tunmountedTables: getUnmountedTables(),\n\t\t};\n\t});\n\n\tif (Object.keys(unmountedTables).length > 0) {\n\t\tprocessUnmountedTables(unmountedTables);\n\t}\n\n\t/**\n\t * Retrive table id's of all tables in a status of deleted.\n\t *\n\t * @since  1.0.0\n\t *\n\t * @type   {Object} Object of all table id's for tables with a 'deleted' status\n\t */\n\tconst { deletedTables } = useSelect(select => {\n\t\tconst { getDeletedTables } = select(tableStore);\n\t\treturn {\n\t\t\tdeletedTables: getDeletedTables(),\n\t\t};\n\t});\n\n\t/**\n\t * Identifies when the post which was being saved has completed the\n\t * save.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @type     {boolean} Post changes have been saved\n\t */\n\tconst postChangesAreSaved = usePostChangesSaved();\n\n\t/**\n\t * Fires when posts have just finished saving and when a change is detected in\n\t * unmounted tables.\n\t */\n\tuseEffect(() => {\n\t\tif (postChangesAreSaved) {\n\t\t\t/**\n\t\t\t * Remove deleted tables from persisted store\n\t\t\t */\n\t\t\tif (Object.keys(deletedTables).length > 0) {\n\t\t\t\tprocessDeletedTables(deletedTables);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Tables are persisted when they are created, but should only remain\n\t\t\t * if the underlying post is saved.  Here we update the status of new\n\t\t\t * tables from \"new\" to \"saved\" once the post is saved.\n\t\t\t */\n\t\t\tif (table.table_status == 'new') {\n\t\t\t\tsetTableAttributes(table.table_id, 'table_status', '', 'PROP', 'saved');\n\t\t\t\tsaveTableEntity(table.table_id);\n\t\t\t}\n\t\t}\n\t}, [postChangesAreSaved, unmountedTables]);\n\n\t/**\n\t * Set Block Table Status\n\t *\n\t * @since    1.0.0\n\t *\n\t * @return  {(\"None\" | \"New\" | \"Stale\" | \"Saved\")}  Table Status\n\t */\n\tconst setBlockTableStatus = () => {\n\t\tif (block_table_ref === '') {\n\t\t\treturn 'None';\n\t\t}\n\n\t\tif (table_id === '0') {\n\t\t\treturn 'New';\n\t\t}\n\n\t\tif (isTableStale) {\n\t\t\treturn 'Stale';\n\t\t}\n\n\t\treturn 'Saved';\n\t};\n\n\t/**\n\t * Summary. (use period). <break> Description. (use period).\n\t *\n\t * @since    1.0.0\n\t *\n\t * @return  {boolean} Is this a new dybamic table block?\n\t */\n\tconst setNewBlock = () => {\n\t\tif (block_table_ref === '') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Set lock for saving.\n\t *\n\t * @since    1.0.0\n\t */\n\tconst setSaveLock = () => {\n\t\tlockPostSaving('lockPostSaving');\n\t\tlockPostAutosaving('lockPostAutosaving');\n\t};\n\n\t/**\n\t * Remove lock for saving.\n\t *\n\t * @since    1.0.0\n\t */\n\tconst setClearSaveLock = () => {\n\t\tlockPostSaving('unlockPostSaving');\n\t\tlockPostAutosaving('unlockPostAutosaving');\n\t};\n\n\tconst isNewBlock = setNewBlock();\n\tconst blockTableStatus = setBlockTableStatus();\n\n\t/**\n\t * Prepare for New Block\n\t */\n\tif (isNewBlock) {\n\t\tsetSaveLock();\n\t}\n\n\t/**\n\t * Retrieve table entity from table webservice and load table store.\n\t *\n\t * @since    1.0.0\n\t */\n\tconst {\n\t\ttable,\n\t\ttableStatus,\n\t\ttableHasStartedResolving,\n\t\ttableHasFinishedResolving,\n\t\ttableIsResolving,\n\t} = useSelect(\n\t\tselect => {\n\t\t\tconst {\n\t\t\t\tgetTable,\n\t\t\t\tgetTableIdByBlock,\n\t\t\t\thasStartedResolution,\n\t\t\t\thasFinishedResolution,\n\t\t\t\tisResolving,\n\t\t\t} = select(tableStore);\n\t\t\tconst selectorArgs = [table_id, isTableStale];\n\n\t\t\tif (block_table_ref === '') {\n\t\t\t\treturn {\n\t\t\t\t\ttable: {},\n\t\t\t\t\ttableStatus: '',\n\t\t\t\t\ttableHasStartedResolving: false,\n\t\t\t\t\ttableHasFinishedResolving: false,\n\t\t\t\t\ttableIsResolving: false,\n\t\t\t\t};\n\t\t\t}\n\t\t\tconst getBlockTable = (table_id, isTableStale, block_table_ref) => {\n\t\t\t\tlet selectedTable = getTable(table_id, isTableStale);\n\t\t\t\tif (\n\t\t\t\t\ttable_id === '0' &&\n\t\t\t\t\tselectedTable.block_table_ref === '' &&\n\t\t\t\t\tawaitingTableEntityCreation\n\t\t\t\t) {\n\t\t\t\t\tconst newTableId = getTableIdByBlock(block_table_ref);\n\t\t\t\t\tselectedTable = getTable(newTableId, isTableStale);\n\n\t\t\t\t\t// Must sync post_id here for new table because \"resolving\" attributes are not available\n\t\t\t\t\tif (\n\t\t\t\t\t\tString(props.context.postId) !== selectedTable.post_id &&\n\t\t\t\t\t\tString(props.context.postId) !== '0'\n\t\t\t\t\t) {\n\t\t\t\t\t\tsetTableAttributes(\n\t\t\t\t\t\t\tselectedTable.table_id,\n\t\t\t\t\t\t\t'post_id',\n\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t'PROP',\n\t\t\t\t\t\t\tString(props.context.postId)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tsetAwaitingTableEntityCreation(false);\n\t\t\t\t\tsetClearSaveLock();\n\t\t\t\t\tprops.setAttributes({ table_id: Number(selectedTable.table_id) });\n\t\t\t\t}\n\t\t\t\treturn selectedTable;\n\t\t\t};\n\n\t\t\tconst blockTable = getBlockTable(table_id, isTableStale, block_table_ref);\n\t\t\tconst tableHasStartedResolving = hasStartedResolution('getTable', selectorArgs);\n\t\t\tconst tableHasFinishedResolving = hasFinishedResolution('getTable', selectorArgs);\n\t\t\tconst tableIsResolving = isResolving('getTable', selectorArgs);\n\n\t\t\tif (tableHasFinishedResolving) {\n\t\t\t\tsetTableStale(() => false);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttable: blockTable,\n\t\t\t\ttableStatus: blockTable.table_status,\n\t\t\t\ttableHasStartedResolving: tableHasStartedResolving,\n\t\t\t\ttableHasFinishedResolving: tableHasFinishedResolving,\n\t\t\t\ttableIsResolving: tableIsResolving,\n\t\t\t};\n\t\t},\n\t\t[table_id, isTableIdChanged, isTableStale, block_table_ref]\n\t);\n\n\tconst currentStatus = useRef(tableStatus);\n\tcurrentStatus.current = tableStatus;\n\n\t/**\n\t * Lookup table attribute value.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Array}  tableAttributes\n\t * @param {string} attributeName\n\t * @return {*} Attribute value\n\t */\n\tfunction getTablePropAttribute(tableAttributes, attributeName) {\n\t\tconst attributeValue = tableAttributes?.[attributeName];\n\t\treturn attributeValue;\n\t}\n\n\t/**\n\t * Extract and unpack table attributes\n\t */\n\tconst showGridLines = getTablePropAttribute(table.attributes, 'showGridLines');\n\tconst allowHorizontalScroll = getTablePropAttribute(table.attributes, 'allowHorizontalScroll');\n\tconst enableHeaderRow = getTablePropAttribute(table.attributes, 'enableHeaderRow');\n\tconst headerAlignment = getTablePropAttribute(table.attributes, 'headerAlignment');\n\tconst gridHeaderBackgroundColor = getTablePropAttribute(\n\t\ttable.attributes,\n\t\t'tableHeaderBackgroundColor'\n\t);\n\tconst headerRowSticky = getTablePropAttribute(table.attributes, 'headerRowSticky');\n\tconst headerBorder = getTablePropAttribute(table.attributes, 'headerBorder');\n\tconst bodyAlignment = getTablePropAttribute(table.attributes, 'bodyAlignment');\n\tconst bodyBorder = getTablePropAttribute(table.attributes, 'bodyBorder');\n\tconst bandedRows = getTablePropAttribute(table.attributes, 'bandedRows');\n\tconst bandedTextColor = getTablePropAttribute(table.attributes, 'bandedTextColor');\n\tconst bandedRowBackgroundColor = getTablePropAttribute(\n\t\ttable.attributes,\n\t\t'bandedRowBackgroundColor'\n\t);\n\tconst gridLineWidth = getTablePropAttribute(table.attributes, 'gridLineWidth');\n\tconst gridAlignment = block_alignment;\n\tconst horizontalAlignment = getTablePropAttribute(table.attributes, 'horizontalAlignment');\n\tconst verticalAlignment = getTablePropAttribute(table.attributes, 'verticalAlignment');\n\tconst hideTitle = getTablePropAttribute(table.attributes, 'hideTitle');\n\n\t/**\n\t * Synchronize PostId\n\t *\n\t * Post ID is assigned a value of '0' upon table creation and can change over the life of a post.\n\t * props.context is authoritative for Post ID so we ensure the table is sync'd to that.\n\t */\n\tif (\n\t\ttableHasStartedResolving &&\n\t\ttableHasFinishedResolving &&\n\t\t!awaitingTableEntityCreation &&\n\t\tString(props.context.postId) !== table.post_id\n\t) {\n\t\tsetTableAttributes(table.table_id, 'post_id', '', 'PROP', String(props.context.postId));\n\t\tsaveTableEntity(table.table_id);\n\t}\n\n\t/**\n\t * Perform clean-up for deleted table block at time of deletion\n\t */\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tsetTableAttributes(table.table_id, 'prior_status', '', 'PROP', currentStatus.current);\n\t\t\tsetTableAttributes(\n\t\t\t\ttable.table_id,\n\t\t\t\t'unmounted_blockid',\n\t\t\t\t'',\n\t\t\t\t'PROP',\n\t\t\t\tblockProps['data-block'],\n\t\t\t\tfalse\n\t\t\t);\n\t\t\t// saveTableEntity(table.table_id)\n\t\t};\n\t}, []);\n\n\tconst tableColumnLength =\n\t\tJSON.stringify(table.table) === '{}' || blockTableStatus == 'None' ? 0 : table.columns.length;\n\tconst tableRowLength =\n\t\tJSON.stringify(table.table) === '{}' || blockTableStatus == 'None' ? 0 : table.rows.length;\n\n\t/**\n\t * Set state for number of columns and rows when the number of table rows has changes\n\t *\n\t * TODO: Verify this is still needed following update to table store to track all tables in editor\n\t */\n\tuseEffect(() => {\n\t\tif (!isNewBlock) {\n\t\t\tif (tableColumnLength != numColumns) {\n\t\t\t\tsetNumColumns(tableColumnLength);\n\t\t\t}\n\t\t\tif (tableRowLength != numRows) {\n\t\t\t\tsetNumRows(tableRowLength);\n\t\t\t}\n\t\t}\n\t}, [tableColumnLength, tableRowLength]);\n\n\t/**\n\t * Insert a new column in the table.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {number} tableId  Identifier key for the table\n\t * @param {number} columnId Identifier for the table column\n\t * @return {Object} Dynamic Table\n\t */\n\tfunction insertColumn(tableId, columnId) {\n\t\tconst newColumn = getDefaultColumn(tableId, columnId);\n\t\tconst tableCells = [];\n\n\t\tfor (let i = 0; i < numRows; i++) {\n\t\t\tif (i === 0) {\n\t\t\t\tconst cell = getDefaultCell(tableId, columnId, i, 'Border');\n\t\t\t\ttableCells.push(cell);\n\t\t\t} else {\n\t\t\t\tconst cell = getDefaultCell(tableId, columnId, i);\n\t\t\t\ttableCells.push(cell);\n\t\t\t}\n\t\t}\n\n\t\taddColumn(tableId, columnId, newColumn, tableCells);\n\t\tsetTableStale(false);\n\t\treturn updateTableEntity(tableId);\n\t}\n\n\t/**\n\t * Insert a new row in the table.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {number} tableId Identifier key for the table\n\t * @param {number} rowId   Identifier for the table row\n\t * @return {Object} Dynamic Table\n\t */\n\tfunction insertRow(tableId, rowId) {\n\t\tconst newRow = getDefaultRow(tableId, rowId);\n\t\tconst tableCells = [];\n\n\t\tfor (let i = 0; i < numColumns; i++) {\n\t\t\tif (i === 0) {\n\t\t\t\tconst cell = getDefaultCell(tableId, i, rowId, 'Border');\n\t\t\t\t// cell.content =\n\t\t\t\ttableCells.push(cell);\n\t\t\t} else {\n\t\t\t\tconst cell = getDefaultCell(tableId, i, rowId);\n\t\t\t\ttableCells.push(cell);\n\t\t\t}\n\t\t}\n\n\t\taddRow(tableId, rowId, newRow, tableCells);\n\t\tsetTableStale(false);\n\t\treturn updateTableEntity(tableId);\n\t}\n\n\t/**\n\t * Delete a column from the table\n\t *\n\t * @param {number} tableId  Identifier key for the table\n\t * @param {number} columnId Identifier for the table column\n\t * @return {Object} Dynamic Table\n\t */\n\tfunction deleteColumn(tableId, columnId) {\n\t\tremoveColumn(tableId, columnId);\n\t\tsetTableStale(false);\n\t\treturn updateTableEntity(tableId);\n\t}\n\n\t/**\n\t * Delete a column from the table\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {*} tableId\n\t * @param {*} rowId\n\t * @return {Object} Dynamic Table\n\t */\n\tfunction deleteRow(tableId, rowId) {\n\t\tremoveRow(tableId, rowId);\n\t\tsetTableStale(false);\n\t\treturn updateTableEntity(tableId);\n\t}\n\n\t/**\n\t * Update table store to reflect changes made to EXISTING table attributes.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {number}                  tableId        Identifier key for the table\n\t * @param {string}                  attribute      (table, column, row, cell)\n\t * @param {number | null}           id             Column and/or row id\n\t * @param {string}                  type           (CONTENT, ATTRIBUTES, CLASSES, PROP)\n\t * @param {string | number | Array} value          New value that will replace existing config\n\t * @param {boolean}                 [persist=true] Update table entity (not just the table store)\n\t */\n\tfunction setTableAttributes(tableId, attribute, id, type, value, persist = true) {\n\t\tswitch (type) {\n\t\t\tcase 'CONTENT': {\n\t\t\t\tif (attribute === 'cell') {\n\t\t\t\t\tupdateCell(tableId, id, 'content', value);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'ATTRIBUTES': {\n\t\t\t\tif (attribute === 'cell') {\n\t\t\t\t\tupdateCell(tableId, id, 'attributes', value);\n\t\t\t\t} else if (attribute === 'row') {\n\t\t\t\t\tsetRowAttributes(value);\n\t\t\t\t\tupdateRow(tableId, id, 'attributes', value);\n\t\t\t\t} else if (attribute === 'column') {\n\t\t\t\t\tsetColumnAttributes(value);\n\t\t\t\t\tupdateColumn(tableId, id, 'attributes', value);\n\t\t\t\t} else if (attribute === 'table') {\n\t\t\t\t\tupdateTableProp(tableId, 'attributes', value);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'CLASSES': {\n\t\t\t\tif (attribute === 'cell') {\n\t\t\t\t\tupdateCell(tableId, id, 'classes', value);\n\t\t\t\t} else if (attribute === 'column') {\n\t\t\t\t\tupdateColumn(tableId, id, 'classes', value);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'PROP':\n\t\t\t\t{\n\t\t\t\t\tupdateTableProp(tableId, attribute, value);\n\t\t\t\t\tif (attribute === 'unmounted_blockid') {\n\t\t\t\t\t\tupdateTableEntity(tableId, 'unknown');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.log('Unrecognized Attibute Type');\n\t\t}\n\t\tsetTableStale(false);\n\n\t\t/**\n\t\t * Update Table Status only table change is for status and the\n\t\t * call must bypass the regular persist (persist === false)\n\t\t */\n\t\tif (persist) {\n\t\t\treturn updateTableEntity(tableId);\n\t\t}\n\t}\n\n\t/**\n\t * Show or hide column and row borders to support updates to them.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object}  table     Dynamic Table\n\t * @param {boolean} isChecked Are borders being toggled on?\n\t */\n\tfunction onToggleBorders(table, isChecked) {\n\t\tlet updatedRows;\n\t\tlet updatedColumns;\n\t\tlet updatedCells;\n\n\t\t/**\n\t\t * Remove borders if unchecked\n\t\t */\n\t\tif (isChecked === false) {\n\t\t\tsetNumColumns(numColumns - 1);\n\t\t\tsetNumRows(numRows - 1);\n\n\t\t\tupdatedRows = table.rows.filter(row => row.row_id !== '0');\n\t\t\tupdatedColumns = table.columns.filter(column => column.column_id !== '0');\n\t\t\tupdatedCells = table.cells.filter(cell => cell.row_id !== '0' && cell.column_id !== '0');\n\t\t\tupdateTableBorder(table.table_id, updatedRows, updatedColumns, updatedCells);\n\t\t} else {\n\t\t\t/**\n\t\t\t * Create borders if checked\n\t\t\t */\n\t\t\tsetNumColumns(numColumns + 1);\n\t\t\tsetNumRows(numRows + 1);\n\n\t\t\t/**  Create header row border at top of table */\n\t\t\tconst rowBorder = [];\n\t\t\trowBorder.push(getDefaultRow(table_id, 0, 'Border'));\n\n\t\t\tconst rowCells = [];\n\t\t\tfor (let i = 0; i <= numColumns; i++) {\n\t\t\t\tconst cell = getDefaultCell(table_id, i, 0, 'Border');\n\t\t\t\trowCells.push(cell);\n\t\t\t}\n\n\t\t\t/** Create column border down left side of table */\n\t\t\tconst columnBorder = [];\n\t\t\tcolumnBorder.push(getDefaultColumn(table_id, 0, 'Border'));\n\n\t\t\tconst columnCells = [];\n\t\t\tfor (let i = 1; i <= numRows; i++) {\n\t\t\t\tconst cell = getDefaultCell(table_id, 0, i, 'Border');\n\t\t\t\tcolumnCells.push(cell);\n\t\t\t}\n\n\t\t\t/** Sort table parts */\n\t\t\tupdatedRows = tableSort('rows', [...table.rows, ...rowBorder]);\n\t\t\tupdatedColumns = tableSort('columns', [...table.columns, ...columnBorder]);\n\t\t\tupdatedCells = tableSort('cells', [...table.cells, ...rowCells, ...columnCells]);\n\n\t\t\tupdateTableBorder(table.table_id, updatedRows, updatedColumns, updatedCells);\n\t\t}\n\t\tsetShowBorders(isChecked);\n\t\tsetTableStale(false);\n\t}\n\n\t/**\n\t * Create new table and related table entity.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {number} columnCount Number of columns in table\n\t * @param {number} rowCount    Number of rows in table\n\t * @param {string} tableName   Name of new table\n\t */\n\tfunction createTable(columnCount, rowCount, tableName) {\n\t\tsetTableStale(false);\n\t\tconst newBlockTableRef = generateBlockTableRef();\n\t\tconst newTable = initTable(newBlockTableRef, columnCount, rowCount, tableName);\n\n\t\tprops.setAttributes({ block_table_ref: newBlockTableRef });\n\t\treceiveNewTable(newTable);\n\t\tsetAwaitingTableEntityCreation(true);\n\t\tcreateTableEntity();\n\t}\n\n\t/**\n\t * Process event to create new table.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event Table Creation Event\n\t */\n\tfunction onCreateTable(event) {\n\t\tevent.preventDefault();\n\t\tcreateTable(numColumns, numRows, tableName);\n\t}\n\n\t/**\n\t * Process changes for the column count when defining a new table creation.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {number} num_columns Number of columns entered in form\n\t */\n\tfunction onChangeInitialColumnCount(num_columns) {\n\t\tlet newNumColumns = num_columns;\n\t\tif (num_columns < 1 || num_columns > 50) {\n\t\t\tconst errorText =\n\t\t\t\t'Cannot have ' +\n\t\t\t\tnum_columns +\n\t\t\t\t' columns.  You must have at least 1 and no more than 50 columns.';\n\t\t\tcreateNotice('error', errorText, {\n\t\t\t\tid: 'invalidNumColumns',\n\t\t\t\tisDismissible: true,\n\t\t\t\tpoliteness: 'assertive',\n\t\t\t});\n\n\t\t\tnewNumColumns = Number(numColumns);\n\t\t} else {\n\t\t\tremoveNotice('invalidNumColumns');\n\t\t}\n\t\tsetNumColumns(newNumColumns);\n\t}\n\n\t/**\n\t * Process changes for the row count when defining a new table creation.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {number} num_rows Number of rows entered in form\n\t */\n\tfunction onChangeInitialRowCount(num_rows) {\n\t\tlet newNumRows = num_rows;\n\t\tif (num_rows < 1 || num_rows > 1000) {\n\t\t\tconst errorText =\n\t\t\t\t'Cannot have ' + num_rows + ' rows.  You must have at least 1 and no more than 1,000 rows.';\n\t\t\tcreateNotice('error', errorText, {\n\t\t\t\tid: 'invalidNumRows',\n\t\t\t\tisDismissible: true,\n\t\t\t\tpoliteness: 'assertive',\n\t\t\t});\n\n\t\t\tnewNumRows = Number(numRows);\n\t\t} else {\n\t\t\tremoveNotice('invalidNumRows');\n\t\t}\n\t\tsetNumRows(newNumRows);\n\t}\n\n\t/**\n\t * Process updates (insert, update, delete) to a table column.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event                   Table Creation Event\n\t * @param {string} updateType              attribute (Update), insert, delete\n\t * @param {number} tableId                 Identifier key for the table\n\t * @param {number} columnId                Identifier for the table column\n\t * @param {Array}  updatedColumnAttributes New column attribute values\n\t */\n\tfunction onUpdateColumn(event, updateType, tableId, columnId, updatedColumnAttributes) {\n\t\tswitch (updateType) {\n\t\t\tcase 'attributes': {\n\t\t\t\tsetTableAttributes(tableId, 'column', columnId, 'ATTRIBUTES', updatedColumnAttributes);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'insert': {\n\t\t\t\tsetOpenColumnRow(0);\n\t\t\t\tsetColumnMenuVisible(false);\n\t\t\t\tinsertColumn(tableId, columnId);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'delete': {\n\t\t\t\tsetOpenColumnRow(0);\n\t\t\t\tsetColumnMenuVisible(false);\n\t\t\t\tdeleteColumn(tableId, columnId);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.log('Unrecognized Column Update Type');\n\t\t}\n\t}\n\n\t/**\n\t * Process updates (insert, update, delete) to a table row.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} event                   Table Creation Event\n\t * @param {string} updateType              attribute (Update), insert, delete\n\t * @param {number} tableId                 Identifier key for the table\n\t * @param {number} rowId                   Identifier for the table row\n\t * @param {Array}  updatedColumnAttributes New column attribute values\n\t * @param {Array}  updatedRowAttributes    New row attribute values\n\t */\n\tfunction onUpdateRow(event, updateType, tableId, rowId, updatedRowAttributes) {\n\t\tswitch (updateType) {\n\t\t\tcase 'attributes': {\n\t\t\t\tsetTableAttributes(tableId, 'row', rowId, 'ATTRIBUTES', updatedRowAttributes);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'insert': {\n\t\t\t\tsetOpenColumnRow(0);\n\t\t\t\tsetRowMenuVisible(false);\n\t\t\t\tinsertRow(tableId, rowId);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'delete': {\n\t\t\t\tsetOpenColumnRow(0);\n\t\t\t\tsetRowMenuVisible(false);\n\t\t\t\tdeleteRow(tableId, rowId);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.log('Unrecognized Row Update Type');\n\t\t}\n\t}\n\n\t/**\n\t * Process mouse clicks on the table borders.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {number} column_id Identifier for the table column\n\t * @param {number} row_id    Identifier for the table row\n\t * @param {Object} table     Dynamic Table\n\t */\n\tfunction onMouseBorderClick(column_id, row_id, table) {\n\t\tif (row_id === '0' && column_id !== '0') {\n\t\t\tconst compareColumnId = column_id;\n\t\t\tconst clickedColumn = table.columns.find(({ column_id }) => column_id === compareColumnId);\n\t\t\tsetColumnAttributes(clickedColumn.attributes);\n\t\t\tsetColumnMenuVisible(true);\n\t\t\tsetOpenColumnRow(column_id);\n\t\t}\n\n\t\tif (row_id !== '0' && column_id === '0') {\n\t\t\tconst compareRowId = row_id;\n\t\t\tconst clickedRow = table.rows.find(({ row_id }) => row_id === compareRowId);\n\t\t\tsetRowAttributes(clickedRow.attributes);\n\t\t\tsetRowMenuVisible(true);\n\t\t\tsetOpenColumnRow(row_id);\n\t\t}\n\t\tsetTableStale(false);\n\t}\n\n\t/**\n\t * Process request to prevent the table title from displaying\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object}  table     Dynamic Table\n\t * @param {boolean} isChecked Is the table title being hidden?\n\t */\n\tfunction onHideTitle(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\thideTitle: isChecked,\n\t\t};\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t * Process request to allow the table to scroll horizontally\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object}  table     Dynamic Table\n\t * @param {boolean} isChecked Show horizontal scroll bar if appropriate?\n\t */\n\tfunction onAllowHorizontalScroll(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\tallowHorizontalScroll: isChecked,\n\t\t};\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t * Process request to show banded even numbered table rows\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object}  table     Dynamic Table\n\t * @param {boolean} isChecked Show banded table rows?\n\t */\n\tfunction onShowBandedRows(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\tbandedRows: isChecked,\n\t\t};\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t * Process requests for specific background and text colors on banded table rows\n\t *\n\t * @param {Object} table Dynamic Table\n\t * @param {string} type  Attribute to be colored (background, text)\n\t * @param {string} color New color code (hex)\n\t */\n\tfunction onBandedRowColor(table, type, color) {\n\t\tlet updatedTableAttributes = '';\n\t\tif (type == 'background') {\n\t\t\tupdatedTableAttributes = {\n\t\t\t\t...table.attributes,\n\t\t\t\tbandedRowBackgroundColor: color,\n\t\t\t};\n\t\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t\t}\n\n\t\tif (type == 'text') {\n\t\t\tupdatedTableAttributes = {\n\t\t\t\t...table.attributes,\n\t\t\t\tbandedTextColor: color,\n\t\t\t};\n\t\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t\t}\n\t}\n\n\t/**\n\t * Process request create a header row from the first table row.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object}  table     Dynamic Table\n\t * @param {boolean} isChecked Create a header row\n\t */\n\tfunction onEnableHeaderRow(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\tenableHeaderRow: isChecked,\n\t\t\theaderRowSticky: false,\n\t\t};\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\n\t\tconst updatedRowAttributes = {\n\t\t\t...table.rows.find(x => x.row_id === '1').attributes,\n\t\t\tisHeader: isChecked ? true : false,\n\t\t};\n\t\tsetTableAttributes(table.table_id, 'row', '1', 'ATTRIBUTES', updatedRowAttributes);\n\t}\n\n\t/**\n\t * Process request to align header column content horizontally.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} table     Dynamic Table\n\t * @param {string} alignment The alignment position (left, center, right)\n\t */\n\tfunction onAlignHeader(table, alignment) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\theaderAlignment: alignment,\n\t\t};\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t * Process request to syle header row borders.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} table  Dynamic Table\n\t * @param {Array}  border Outside header border color, width, style\n\t */\n\tfunction onHeaderBorder(table, border) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\theaderBorder: border,\n\t\t};\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t * Process request to make the header row sticky with vertical scroll.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object}  table     Dynamic Table\n\t * @param {boolean} isChecked Make header row sticky\n\t */\n\tfunction onHeaderRowSticky(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\theaderRowSticky: isChecked,\n\t\t};\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t * Process request to align body column content horizontally.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} table     Dynamic Table\n\t * @param {string} alignment The alignment position (left, center, right)\n\t */\n\tfunction onAlignBody(table, alignment) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\tbodyAlignment: alignment,\n\t\t};\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t * Process request to syle body row borders.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} table  Dynamic Table\n\t * @param {Array}  border Outside body border color, width, style\n\t */\n\tfunction onBodyBorder(table, border) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\tbodyBorder: border,\n\t\t};\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t * Process request to show inner body row grid lines.\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object}  table     Dynamic Table\n\t * @param {boolean} isChecked Show inner body row grid lines\n\t */\n\tfunction onShowGridLines(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\tshowGridLines: isChecked,\n\t\t};\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t * Process request to set grid line width\n\t *\n\t * @since    1.0.0\n\t *\n\t * @param {Object} table         Dynamic Table\n\t * @param {string} gridLineWidth Width of grid lines in pixels\n\t */\n\tfunction onGridLineWidth(table, gridLineWidth) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\tgridLineWidth: Number(gridLineWidth),\n\t\t};\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t * Set variables used to render the dynamic table\n\t */\n\n\tconst gridColumnStyle = processColumns(\n\t\tisNewBlock,\n\t\ttableIsResolving,\n\t\tenableFutureFeatures,\n\t\ttable.columns\n\t);\n\n\tconst gridHeaderRowStyle = processHeaderRow(isNewBlock, tableIsResolving, table.rows);\n\tconst gridBodyRowStyle = processBodyRows(isNewBlock, tableIsResolving, table.rows);\n\tconst startGridHeaderRowNbrStyle = showBorders ? 2 : 1;\n\n\tconst endGridHeaderRowNbrStyle = endGridRowNbr(\n\t\t1,\n\t\t'Header',\n\t\tnumRows,\n\t\tenableHeaderRow,\n\t\tshowBorders,\n\t\tfalse\n\t);\n\n\tconst startGridBodyRowNbrStyle = startGridRowNbr(enableHeaderRow, showBorders);\n\n\tconst endGridBodyRowNbrStyle = endGridRowNbr(\n\t\tstartGridBodyRowNbrStyle,\n\t\t'Body',\n\t\tnumRows,\n\t\tenableHeaderRow,\n\t\tshowBorders,\n\t\tfalse\n\t);\n\n\tconst horizontalScrollStyle = allowHorizontalScroll ? 'auto' : 'hidden';\n\n\tconst gridBandedRowTextColor = gridBandedRowTextColorStyle(\n\t\tisNewBlock,\n\t\ttableIsResolving,\n\t\tbandedTextColor\n\t);\n\n\tconst gridBandedRowBackgroundColor = gridBandedRowBackgroundColorStyle(\n\t\tisNewBlock,\n\t\ttableIsResolving,\n\t\tbandedRowBackgroundColor\n\t);\n\n\tconst gridShowInnerLines = gridInnerBorderStyle(isNewBlock, tableIsResolving, showGridLines);\n\n\tconst gridInnerLineWidth = gridInnerBorderWidthStyle(\n\t\tisNewBlock,\n\t\ttableIsResolving,\n\t\tshowGridLines,\n\t\tgridLineWidth\n\t);\n\n\tconst headerRowStickyStyle = headerRowSticky ? 'auto' : 'hidden';\n\tconst headerRowStickyClass = headerRowSticky ? 'grid-control__header--sticky ' : '';\n\n\tconst gridHeaderBackgroundColorStyle = getGridHeaderBackgroundColorStyle(\n\t\tisNewBlock,\n\t\ttableIsResolving,\n\t\tgridHeaderBackgroundColor,\n\t\tblockProps.style.backgroundColor\n\t);\n\n\t/**\n\t * Header Styling\n\t */\n\tconst headerTextAlignmentStyle = getHeaderTextAlignmentStyle(\n\t\tisNewBlock,\n\t\ttableIsResolving,\n\t\theaderAlignment\n\t);\n\tconst headerBorderStyleType = getBorderStyleType(headerBorder);\n\n\t// Top header border\n\tconst headerBorderTopColor = getBorderStyle(headerBorder, 'top', 'color', headerBorderStyleType);\n\tconst headerBorderTopStyle = getBorderStyle(headerBorder, 'top', 'style', headerBorderStyleType);\n\tconst headerBorderTopWidth = getBorderStyle(headerBorder, 'top', 'width', headerBorderStyleType);\n\n\t// Right header border\n\tconst headerBorderRightColor = getBorderStyle(\n\t\theaderBorder,\n\t\t'right',\n\t\t'color',\n\t\theaderBorderStyleType\n\t);\n\tconst headerBorderRightStyle = getBorderStyle(\n\t\theaderBorder,\n\t\t'right',\n\t\t'style',\n\t\theaderBorderStyleType\n\t);\n\tconst headerBorderRightWidth = getBorderStyle(\n\t\theaderBorder,\n\t\t'right',\n\t\t'width',\n\t\theaderBorderStyleType\n\t);\n\n\t// Bottom header border\n\tconst headerBorderBottomColor = getBorderStyle(\n\t\theaderBorder,\n\t\t'bottom',\n\t\t'color',\n\t\theaderBorderStyleType\n\t);\n\tconst headerBorderBottomStyle = getBorderStyle(\n\t\theaderBorder,\n\t\t'bottom',\n\t\t'style',\n\t\theaderBorderStyleType\n\t);\n\tconst headerBorderBottomWidth = getBorderStyle(\n\t\theaderBorder,\n\t\t'bottom',\n\t\t'width',\n\t\theaderBorderStyleType\n\t);\n\n\t// Left header border\n\tconst headerBorderLeftColor = getBorderStyle(\n\t\theaderBorder,\n\t\t'left',\n\t\t'color',\n\t\theaderBorderStyleType\n\t);\n\tconst headerBorderLeftStyle = getBorderStyle(\n\t\theaderBorder,\n\t\t'left',\n\t\t'style',\n\t\theaderBorderStyleType\n\t);\n\tconst headerBorderLeftWidth = getBorderStyle(\n\t\theaderBorder,\n\t\t'left',\n\t\t'width',\n\t\theaderBorderStyleType\n\t);\n\n\t/**\n\t * Body Styling\n\t */\n\tconst bodyTextAlignmentStyle = getHeaderTextAlignmentStyle(\n\t\tisNewBlock,\n\t\ttableIsResolving,\n\t\tbodyAlignment\n\t);\n\tconst bodyBorderStyleType = getBorderStyleType(bodyBorder);\n\t// Top body border\n\tconst bodyBorderTopColor = getBorderStyle(bodyBorder, 'top', 'color', bodyBorderStyleType);\n\tconst bodyBorderTopStyle = getBorderStyle(bodyBorder, 'top', 'style', bodyBorderStyleType);\n\tconst bodyBorderTopWidth = getBorderStyle(bodyBorder, 'top', 'width', bodyBorderStyleType);\n\n\t// Right body border\n\tconst bodyBorderRightColor = getBorderStyle(bodyBorder, 'right', 'color', bodyBorderStyleType);\n\tconst bodyBorderRightStyle = getBorderStyle(bodyBorder, 'right', 'style', bodyBorderStyleType);\n\tconst bodyBorderRightWidth = getBorderStyle(bodyBorder, 'right', 'width', bodyBorderStyleType);\n\n\t// Bottom body border\n\tconst bodyBorderBottomColor = getBorderStyle(bodyBorder, 'bottom', 'color', bodyBorderStyleType);\n\tconst bodyBorderBottomStyle = getBorderStyle(bodyBorder, 'bottom', 'style', bodyBorderStyleType);\n\tconst bodyBorderBottomWidth = getBorderStyle(bodyBorder, 'bottom', 'width', bodyBorderStyleType);\n\n\t// Left body border\n\tconst bodyBorderLeftColor = getBorderStyle(bodyBorder, 'left', 'color', bodyBorderStyleType);\n\tconst bodyBorderLeftStyle = getBorderStyle(bodyBorder, 'left', 'style', bodyBorderStyleType);\n\tconst bodyBorderLeftWidth = getBorderStyle(bodyBorder, 'left', 'width', bodyBorderStyleType);\n\n\treturn (\n\t\t<div {...blockProps}>\n\t\t\t{/* Render an existing table after it has been fetched  */}\n\n\t\t\t{!isNewBlock && !tableIsResolving && (\n\t\t\t\t<>\n\t\t\t\t\t<BlockControls>\n\t\t\t\t\t\t<BlockAlignmentToolbar\n\t\t\t\t\t\t\tvalue={block_alignment}\n\t\t\t\t\t\t\tonChange={e => props.setAttributes({ block_alignment: e })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</BlockControls>\n\n\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t<Panel>\n\t\t\t\t\t\t\t<PanelBody title=\"Definition\" initialOpen={true}>\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<div className=\"grid-control__inspector-controls--read-only\">\n\t\t\t\t\t\t\t\t\t\t<span className=\"grid-control__inspector-controls--read-only-label\">\n\t\t\t\t\t\t\t\t\t\t\tTable Name:\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t{removeTags(table.table_name)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<div className=\"grid-control__inspector-controls--read-only\">\n\t\t\t\t\t\t\t\t\t\t<span className=\"grid-control__inspector-controls--read-only-label\">\n\t\t\t\t\t\t\t\t\t\t\tTable Columns/Rows:\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t{numColumns}/{numRows}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t\t\t\t\tlabel=\"Show table borders\"\n\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\tchecked={showBorders}\n\t\t\t\t\t\t\t\t\t\tonChange={e => onToggleBorders(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t\t\t\t\tlabel=\"Hide Table Title\"\n\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\tchecked={hideTitle}\n\t\t\t\t\t\t\t\t\t\tonChange={e => onHideTitle(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t\t\t<PanelBody title=\"Table Header\" initialOpen={false}>\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t\t\t\t\tlabel=\"First Row as Header?\"\n\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\tchecked={enableHeaderRow}\n\t\t\t\t\t\t\t\t\t\tonChange={e => onEnableHeaderRow(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t\t\t\t\tlabel=\"Freeze Header Row?\"\n\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\tdisabled={!enableHeaderRow}\n\t\t\t\t\t\t\t\t\t\tchecked={headerRowSticky}\n\t\t\t\t\t\t\t\t\t\tonChange={e => onHeaderRowSticky(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<span className=\"inspector-controls-menu__header-alignment--middle\">\n\t\t\t\t\t\t\t\t\t\t<AlignmentControl\n\t\t\t\t\t\t\t\t\t\t\tid=\"header-alignment\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={headerAlignment}\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onAlignHeader(table, e)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"inspector-controls-nemu__label--left-margin\"\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"header-alignment\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tText Alignment\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<BorderBoxControl\n\t\t\t\t\t\t\t\t\t\tclassName=\"border-box-workaround\"\n\t\t\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\t\t\t__experimentalIsRenderedInSidebar\n\t\t\t\t\t\t\t\t\t\tlabel=\"Borders\"\n\t\t\t\t\t\t\t\t\t\t// hideLabelFromVision=\"false\"\n\t\t\t\t\t\t\t\t\t\tisCompact=\"true\"\n\t\t\t\t\t\t\t\t\t\tcolors={borderBoxColors}\n\t\t\t\t\t\t\t\t\t\tvalue={headerBorder}\n\t\t\t\t\t\t\t\t\t\tonChange={e => onHeaderBorder(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t\t\t<PanelBody title=\"Table Body\" initialOpen={false}>\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t\t\t\t\tlabel=\"Allow Horizontal Acroll?\"\n\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\tchecked={allowHorizontalScroll}\n\t\t\t\t\t\t\t\t\t\tonChange={e => onAllowHorizontalScroll(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<span className=\"inspector-controls-menu__header-alignment--middle\">\n\t\t\t\t\t\t\t\t\t\t<AlignmentControl\n\t\t\t\t\t\t\t\t\t\t\tid=\"body-alignment\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={bodyAlignment}\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onAlignBody(table, e)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"inspector-controls-menu__label--left-margin\"\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"body-alignment\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tText Alignment\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<BorderBoxControl\n\t\t\t\t\t\t\t\t\t\tclassName=\"border-box-workaround\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Borders\"\n\t\t\t\t\t\t\t\t\t\thideLabelFromVision=\"false\"\n\t\t\t\t\t\t\t\t\t\tisCompact=\"true\"\n\t\t\t\t\t\t\t\t\t\tcolors={borderBoxColors}\n\t\t\t\t\t\t\t\t\t\tvalue={bodyBorder}\n\t\t\t\t\t\t\t\t\t\tonChange={e => onBodyBorder(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t</Panel>\n\t\t\t\t\t</InspectorControls>\n\n\t\t\t\t\t<InspectorControls group=\"styles\">\n\t\t\t\t\t\t<PanelBody title=\"Banded Table Rows\" initialOpen={false}>\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t\t\t\tlabel=\"Display Banded Rows\"\n\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\tchecked={bandedRows}\n\t\t\t\t\t\t\t\t\t// checked={true}\n\t\t\t\t\t\t\t\t\tonChange={e => onShowBandedRows(table, e)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t<PanelColorSettings\n\t\t\t\t\t\t\t\t__experimentalIsRenderedInSidebar\n\t\t\t\t\t\t\t\ttitle={'Banded Row Color'}\n\t\t\t\t\t\t\t\tcolors={themeColors}\n\t\t\t\t\t\t\t\tcolorSettings={[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvalue: bandedTextColor,\n\t\t\t\t\t\t\t\t\t\tonChange: newColor => onBandedRowColor(table, 'text', newColor),\n\t\t\t\t\t\t\t\t\t\tlabel: 'Text',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvalue: bandedRowBackgroundColor,\n\t\t\t\t\t\t\t\t\t\tonChange: newColor => onBandedRowColor(table, 'background', newColor),\n\t\t\t\t\t\t\t\t\t\tlabel: 'Background',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t\t<PanelBody title=\"Grid Lines\" initialOpen={false}>\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t\t\t\tlabel=\"Display Inner Grid Lines\"\n\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\tchecked={showGridLines}\n\t\t\t\t\t\t\t\t\tonChange={e => onShowGridLines(table, e)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\t\tlabel=\"Inner Grid Line Width\"\n\t\t\t\t\t\t\t\t\tvalue={gridLineWidth}\n\t\t\t\t\t\t\t\t\tlabelPosition=\"side\"\n\t\t\t\t\t\t\t\t\tonChange={e => onGridLineWidth(table, e)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t<InspectorControls group=\"typography\"></InspectorControls>\n\n\t\t\t\t\t<div style={{ display: 'block' }}>\n\t\t\t\t\t\t{!hideTitle && (\n\t\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\t\tid=\"tableTitle\"\n\t\t\t\t\t\t\t\tstyle={{ '--gridAlignment': gridAlignment }}\n\t\t\t\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\t\t\t\tallowedFormats={['core/bold', 'core/italic']}\n\t\t\t\t\t\t\t\tonChange={e => setTableAttributes(table_id, 'table_name', '', 'PROP', e)}\n\t\t\t\t\t\t\t\tvalue={table.table_name}\n\t\t\t\t\t\t\t></RichText>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<TabbableContainer>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"grid-scroller\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t'--headerRowSticky': headerRowStickyStyle,\n\t\t\t\t\t\t\t\t\t// \"--startGridBodyRowNbr\": startGridBodyRowNbrStyle,\n\t\t\t\t\t\t\t\t\t// \"--endGridBodyRowNbr\": endGridBodyRowNbrStyle\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={'grid-control ' + headerRowStickyClass}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t'--gridTemplateColumns': gridColumnStyle,\n\t\t\t\t\t\t\t\t\t\t'--horizontalScroll': horizontalScrollStyle,\n\t\t\t\t\t\t\t\t\t\t'--headerRowSticky': headerRowStickyStyle,\n\t\t\t\t\t\t\t\t\t\t'--gridNumColumns': numColumns,\n\t\t\t\t\t\t\t\t\t\t'--gridNumRows': numRows,\n\t\t\t\t\t\t\t\t\t\t'--gridAlignment': gridAlignment,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{/* Render Table Border Row if present */}\n\t\t\t\t\t\t\t\t\t{showBorders && (\n\t\t\t\t\t\t\t\t\t\t<div className={'grid-control__border'}>\n\t\t\t\t\t\t\t\t\t\t\t{table.cells\n\t\t\t\t\t\t\t\t\t\t\t\t.filter(cell => cell.attributes.border && cell.row_id === '0')\n\t\t\t\t\t\t\t\t\t\t\t\t.map(({ table_id, row_id, column_id, cell_id, content, classes }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst borderContent = setBorderContent(row_id, column_id, content);\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst isOpenCurrentColumnMenu = openCurrentColumnMenu(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnMenuVisible,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\topenColumnRow,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumn_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst isFirstColumn = column_id === '1' ? true : false;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Show zoom to details column */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isFirstColumn && enableFutureFeatures && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={'grid-control__border-cells'} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={cell_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={e => onMouseBorderClick(column_id, row_id, table, e)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isOpenCurrentColumnMenu && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ColumnMenu\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttableId={table_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnId={column_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnLabel={borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnAttributes={columnAttributes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenableProFeatures={enableProFeatures}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedColumn={onUpdateColumn}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></ColumnMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t{/* Render Table Header Row if present */}\n\t\t\t\t\t\t\t\t\t{table.rows\n\t\t\t\t\t\t\t\t\t\t.filter(row => row.attributes.isHeader === true)\n\t\t\t\t\t\t\t\t\t\t.map(({ row_id }) => {\n\t\t\t\t\t\t\t\t\t\t\tconst renderedRow = row_id;\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"grid-control__header\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--gridTemplateHeaderRows': gridHeaderRowStyle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--startGridHeaderRowNbr': startGridHeaderRowNbrStyle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--endGridHeaderRowNbr': endGridHeaderRowNbrStyle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--headerBorderTopColor': headerBorderTopColor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--headerBorderTopStyle': headerBorderTopStyle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--headerBorderTopWidth': headerBorderTopWidth,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--headerBorderRightColor': headerBorderRightColor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--headerBorderRightStyle': headerBorderRightStyle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--headerBorderRightWidth': headerBorderRightWidth,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--headerBorderBottomColor': headerBorderBottomColor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--headerBorderBottomStyle': headerBorderBottomStyle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--headerBorderBottomWidth': headerBorderBottomWidth,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--headerBorderLeftColor': headerBorderLeftColor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--headerBorderLeftStyle': headerBorderLeftStyle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--headerBorderLeftWidth': headerBorderLeftWidth,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--headerTextAlignment': headerTextAlignmentStyle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{table.cells\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.filter(cell => cell.row_id === renderedRow)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttable_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumn_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tattributes,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isFirstColumn = column_id === '1' ? true : false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isBorder = attributes.border;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst borderContent = setBorderContent(row_id, column_id, content);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isOpenCurrentRowMenu = openCurrentRowMenu(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowMenuVisible,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\topenColumnRow,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst showGridLinesCSS = gridShowInnerLines;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst gridLineWidthCSS = gridInnerLineWidth;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Show zoom to details column */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isFirstColumn && isBorder && enableFutureFeatures && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={'grid-control__border-cells'} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isBorder && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={cell_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={e =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseBorderClick(column_id, row_id, table, e)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isOpenCurrentRowMenu && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RowMenu\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttableId={table_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowId={row_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowLabel={borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowAttributes={rowAttributes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRow={onUpdateRow}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></RowMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Show zoom to details column */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isFirstColumn && enableFutureFeatures && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={'grid-control__header-cells'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--showGridLines': showGridLinesCSS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--gridLineWidth': gridLineWidthCSS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!isBorder && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={cell_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={'grid-control__header-cells'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--showGridLines': showGridLinesCSS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--gridLineWidth': gridLineWidthCSS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTableAttributes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttable_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'cell',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'CONTENT',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={content}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></RichText>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t\t\t\t{/* Render Table Body */}\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={'grid-control__body'}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t'--gridTemplateBodyRows': gridBodyRowStyle,\n\t\t\t\t\t\t\t\t\t\t\t'--startGridBodyRowNbr': startGridBodyRowNbrStyle,\n\t\t\t\t\t\t\t\t\t\t\t'--endGridBodyRowNbr': endGridBodyRowNbrStyle,\n\t\t\t\t\t\t\t\t\t\t\t'--bodyBorderTopColor': bodyBorderTopColor,\n\t\t\t\t\t\t\t\t\t\t\t'--bodyBorderTopStyle': bodyBorderTopStyle,\n\t\t\t\t\t\t\t\t\t\t\t'--bodyBorderTopWidth': bodyBorderTopWidth,\n\t\t\t\t\t\t\t\t\t\t\t'--bodyBorderRightColor': bodyBorderRightColor,\n\t\t\t\t\t\t\t\t\t\t\t'--bodyBorderRightStyle': bodyBorderRightStyle,\n\t\t\t\t\t\t\t\t\t\t\t'--bodyBorderRightWidth': bodyBorderRightWidth,\n\t\t\t\t\t\t\t\t\t\t\t'--bodyBorderBottomColor': bodyBorderBottomColor,\n\t\t\t\t\t\t\t\t\t\t\t'--bodyBorderBottomStyle': bodyBorderBottomStyle,\n\t\t\t\t\t\t\t\t\t\t\t'--bodyBorderBottomWidth': bodyBorderBottomWidth,\n\t\t\t\t\t\t\t\t\t\t\t'--bodyBorderLeftColor': bodyBorderLeftColor,\n\t\t\t\t\t\t\t\t\t\t\t'--bodyBorderLeftStyle': bodyBorderLeftStyle,\n\t\t\t\t\t\t\t\t\t\t\t'--bodyBorderLeftWidth': bodyBorderLeftWidth,\n\t\t\t\t\t\t\t\t\t\t\t'--bodyTextAlignment': bodyTextAlignmentStyle,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{/* Render Table Body Row Wrapper*/}\n\t\t\t\t\t\t\t\t\t\t{table.rows\n\t\t\t\t\t\t\t\t\t\t\t.filter(row => row.attributes.isHeader !== true && row.row_id !== '0')\n\t\t\t\t\t\t\t\t\t\t\t.map(({ row_id }) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst renderedRow = row_id;\n\n\t\t\t\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t\t\t\t * Set calculated class names\n\t\t\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\t\t\tlet calculatedClasses = '';\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst bandedRowOffset = enableHeaderRow ? 1 : 0;\n\t\t\t\t\t\t\t\t\t\t\t\tif (bandedRows && bandedRowOffset == 0 && Number(row_id) % 2 === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcalculatedClasses =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcalculatedClasses + 'grid-control__body-rows--banded-row ';\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\tbandedRows &&\n\t\t\t\t\t\t\t\t\t\t\t\t\tbandedRowOffset == 1 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\tNumber(row_id) > 1 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t(Number(row_id) + bandedRowOffset) % 2 === 0\n\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcalculatedClasses =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcalculatedClasses + 'grid-control__body-rows--banded-row ';\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={'grid-control__body-row ' + calculatedClasses}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--bandedRowTextColor': gridBandedRowTextColor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--bandedRowBackgroundColor': gridBandedRowBackgroundColor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Render Table Body Row Cells*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{table.cells\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.filter(cell => cell.row_id === renderedRow)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttable_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumn_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tattributes,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclasses,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t * Set general processing variables\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isFirstColumn = column_id === '1' ? true : false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isBorder = attributes.border;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst borderContent = setBorderContent(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumn_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isOpenCurrentRowMenu = openCurrentRowMenu(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowMenuVisible,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\topenColumnRow,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trow_id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst showGridLinesCSS = gridShowInnerLines;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst gridLineWidthCSS = gridInnerLineWidth;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Show zoom to details column */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isFirstColumn && isBorder && enableFutureFeatures && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={'grid-control__border-cells'} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isBorder && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={cell_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={e =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseBorderClick(column_id, row_id, table, e)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isOpenCurrentRowMenu && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RowMenu\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttableId={table_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowId={row_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowLabel={borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowAttributes={rowAttributes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRow={onUpdateRow}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></RowMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Show zoom to details column */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isFirstColumn && !isBorder && enableFutureFeatures && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'grid-control__body-cells grid-control__body-cells--zoom'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--showGridLines': showGridLinesCSS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--gridLineWidth': gridLineWidthCSS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button href=\"#\" icon={search} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!isBorder && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={cell_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={'grid-control__body-cells ' + classes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--showGridLines': showGridLinesCSS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'--gridLineWidth': gridLineWidthCSS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetTableAttributes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttable_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'cell',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'CONTENT',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={content}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></RichText>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</TabbableContainer>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t{/* Show a spinner while the table is being fetcheds */}\n\t\t\t{!isNewBlock && tableIsResolving && <Spinner>Retrieving Table Data</Spinner>}\n\n\t\t\t{/* Show the form to identify and create a new table */}\n\t\t\t{isNewBlock && (\n\t\t\t\t<Placeholder\n\t\t\t\t\tlabel={__('Dynamic Table')}\n\t\t\t\t\ticon={<BlockIcon icon={icon} showColors />}\n\t\t\t\t\tinstructions={__('Create a new dynamic table.')}\n\t\t\t\t>\n\t\t\t\t\t<form className=\"blocks-table__placeholder-form\" onSubmit={onCreateTable}>\n\t\t\t\t\t\t<InputControl\n\t\t\t\t\t\t\tlabel={__('Table Name')}\n\t\t\t\t\t\t\tplaceholder=\"New Table\"\n\t\t\t\t\t\t\trequired=\"true\"\n\t\t\t\t\t\t\tonChange={e => setTableName(e)}\n\t\t\t\t\t\t\tvalue={tableName}\n\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-input\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\tlabel={__('Table Columns')}\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\trequired=\"true\"\n\t\t\t\t\t\t\tvalue={numColumns}\n\t\t\t\t\t\t\tonChange={e => onChangeInitialColumnCount(e)}\n\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-input\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\tlabel={__('Table Rows')}\n\t\t\t\t\t\t\trequired=\"true\"\n\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\tvalue={numRows}\n\t\t\t\t\t\t\tonChange={e => onChangeInitialRowCount(e)}\n\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-input\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button className=\"blocks-table__placeholder-button\" variant=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t{__('Create Table')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</form>\n\t\t\t\t</Placeholder>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","// extracted by mini-css-extract-plugin\nexport {};","import { useState, useEffect } from '@wordpress/element';\nimport { usePrevious } from '@wordpress/compose';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Returns `true` if post changes are saved, otherwise `false`.\n *\n * @return {boolean} Are post changes saved\n */\nexport const usePostChangesSaved = () => {\n\tconst [areChangesSaved, setAreChangesSaved] = useState(false);\n\tconst { hasUnsavedChanges } = useSelect(select => {\n\t\treturn {\n\t\t\thasUnsavedChanges: select('core/editor').isEditedPostDirty(),\n\t\t};\n\t});\n\tconst hadUnsavedChanges = usePrevious(hasUnsavedChanges);\n\n\tuseEffect(() => {\n\t\tif (!hasUnsavedChanges && hadUnsavedChanges) {\n\t\t\tsetAreChangesSaved(true);\n\t\t}\n\t\tif (hasUnsavedChanges) {\n\t\t\tsetAreChangesSaved(false);\n\t\t}\n\t}, [hasUnsavedChanges, hadUnsavedChanges]);\n\n\treturn areChangesSaved;\n};\n","import { registerBlockType } from '@wordpress/blocks';\nimport './style.scss';\nimport Edit from './edit';\nimport metadata from './block.json';\n\n// dynamic-tables/dynamic-tables\nconsole.log(metadata.name);\n\nregisterBlockType(metadata.name, {\n\t// registerBlockType('dynamic-tables/dynamic-tables', {\n\t// From  edit.js\n\tapiVersion: 3,\n\tedit: Edit,\n\tsave(props) {\n\t\treturn null;\n\t},\n});\n","/**\n * Establish grid css grid-template-columns based upon attributes associated with columns\n *\n * @since    1.0.0\n *\n * @param {boolean}      isNewBlock           Has the block been newly created and not yet persisted?\n * @param {boolean}      tableIsResolving     Are we still waiting for table to finish resolving?\n * @param {boolean}      enableFutureFeatures Include features intended for a future release?\n * @param {Array|Object} columns              Table columns\n * @return {string} Value for grid-template-columns css attribute\n */\n\nexport function processColumns(isNewBlock, tableIsResolving, enableFutureFeatures, columns) {\n\tif (isNewBlock || tableIsResolving) {\n\t\treturn undefined;\n\t}\n\n\tlet newGridColumnStyle = '';\n\t{\n\t\tcolumns.map(({ column_id, column_name, attributes, classes }) => {\n\t\t\tconst {\n\t\t\t\tcolumnWidthType,\n\t\t\t\tminWidth,\n\t\t\t\tminWidthUnits,\n\t\t\t\tmaxWidth,\n\t\t\t\tmaxWidthUnits,\n\t\t\t\tfixedWidth,\n\t\t\t\tfixedWidthUnits,\n\t\t\t\tdisableForTablet,\n\t\t\t\tdisableForPhone,\n\t\t\t} = attributes;\n\n\t\t\tlet sizing = '';\n\n\t\t\tif (column_id === '1' && enableFutureFeatures) {\n\t\t\t\tnewGridColumnStyle = newGridColumnStyle + '40px ';\n\t\t\t}\n\t\t\tswitch (columnWidthType) {\n\t\t\t\tcase 'Proportional': {\n\t\t\t\t\tif (minWidth > 0) {\n\t\t\t\t\t\tsizing = 'minmax(' + minWidth + minWidthUnits + ', ' + maxWidth + 'fr) ';\n\t\t\t\t\t} else\n\t\t\t\t\t\t// sizing = '1fr '\n\t\t\t\t\t\tsizing = maxWidth + 'fr ';\n\t\t\t\t\tnewGridColumnStyle = newGridColumnStyle + sizing;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'Auto': {\n\t\t\t\t\tnewGridColumnStyle = newGridColumnStyle + 'auto ';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'Fixed': {\n\t\t\t\t\tnewGridColumnStyle = newGridColumnStyle + fixedWidth + fixedWidthUnits + ' ';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'Custom': {\n\t\t\t\t\tsizing = 'minmax(' + minWidth + minWidthUnits + ', ' + maxWidth + maxWidthUnits + ') ';\n\t\t\t\t\tnewGridColumnStyle = newGridColumnStyle + sizing;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log('Unrecognized Attibute Type');\n\t\t\t}\n\t\t});\n\t}\n\treturn newGridColumnStyle;\n}\n\n/**\n * Establish grid css grid-template-rows based upon attributes associated with header row(s).\n *\n * @since    1.0.0\n *\n * @param {boolean}      isNewBlock       Has the block been newly created and not yet persisted?\n * @param {boolean}      tableIsResolving Are we still waiting for table to finish resolving?\n * @param {Array|Object} rows             Table rows\n * @return {string} Value for grid-template-rows css attribute in header rows\n */\nexport function processHeaderRow(isNewBlock, tableIsResolving, rows) {\n\tif (isNewBlock || tableIsResolving) {\n\t\treturn undefined;\n\t}\n\n\tlet newGridRowStyle = '';\n\t{\n\t\trows.map(({ row_id, attributes, classes }) => {\n\t\t\tconst {\n\t\t\t\trowHeightType,\n\t\t\t\tminHeight,\n\t\t\t\tminHeightUnits,\n\t\t\t\tmaxHeight,\n\t\t\t\tmaxHeightUnits,\n\t\t\t\tfixedHeight,\n\t\t\t\tfixedHeightUnits,\n\t\t\t\tisHeader,\n\t\t\t} = attributes;\n\n\t\t\tlet sizing = '';\n\n\t\t\tif (isHeader) {\n\t\t\t\tswitch (rowHeightType) {\n\t\t\t\t\tcase 'Auto': {\n\t\t\t\t\t\tnewGridRowStyle = newGridRowStyle + 'auto ';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'Fixed': {\n\t\t\t\t\t\tnewGridRowStyle = newGridRowStyle + fixedHeight + fixedHeightUnits + ' ';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'Custom': {\n\t\t\t\t\t\tsizing =\n\t\t\t\t\t\t\t'minmax(' + minHeight + minHeightUnits + ', ' + maxHeight + maxHeightUnits + ') ';\n\t\t\t\t\t\tnewGridRowStyle = newGridRowStyle + sizing;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log('Unrecognized Attibute Type');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\treturn newGridRowStyle;\n}\n\n/**\n * Establish grid css grid-template-rows based upon attributes associated with body row(s).\n *\n * @since    1.0.0\n *\n * @param {boolean}      isNewBlock       Has the block been newly created and not yet persisted?\n * @param {boolean}      tableIsResolving Are we still waiting for table to finish resolving?\n * @param {Array|Object} rows             Table rows\n * @return {string} Value for grid-template-rows css attribute in body rows\n */\nexport function processBodyRows(isNewBlock, tableIsResolving, rows) {\n\tif (isNewBlock || tableIsResolving) {\n\t\treturn undefined;\n\t}\n\n\tlet newGridRowStyle = '';\n\t{\n\t\trows.map(({ row_id, attributes, classes }) => {\n\t\t\tconst {\n\t\t\t\trowHeightType,\n\t\t\t\tminHeight,\n\t\t\t\tminHeightUnits,\n\t\t\t\tmaxHeight,\n\t\t\t\tmaxHeightUnits,\n\t\t\t\tfixedHeight,\n\t\t\t\tfixedHeightUnits,\n\t\t\t\tisHeader,\n\t\t\t} = attributes;\n\n\t\t\tlet sizing = '';\n\n\t\t\tif (!isHeader) {\n\t\t\t\tswitch (rowHeightType) {\n\t\t\t\t\tcase 'Auto': {\n\t\t\t\t\t\tnewGridRowStyle = newGridRowStyle + 'auto ';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'Fixed': {\n\t\t\t\t\t\tnewGridRowStyle = newGridRowStyle + fixedHeight + fixedHeightUnits + ' ';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'Custom': {\n\t\t\t\t\t\tsizing =\n\t\t\t\t\t\t\t'minmax(' + minHeight + minHeightUnits + ', ' + maxHeight + maxHeightUnits + ') ';\n\t\t\t\t\t\tnewGridRowStyle = newGridRowStyle + sizing;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log('Unrecognized Attibute Type');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\treturn newGridRowStyle;\n}\n\n/**\n * Create Styling Variable for the text color in banded rows.\n *\n * @since    1.0.0\n *\n * @param {boolean} isNewBlock       Has the block been newly created and not yet persisted?\n * @param {boolean} tableIsResolving Are we still waiting for table to finish resolving?\n * @param {string}  color            Color code associated with the banded row text\n * @return {string} CSS color code\n */\nexport function gridBandedRowTextColorStyle(isNewBlock, tableIsResolving, color) {\n\tif (isNewBlock || tableIsResolving) {\n\t\treturn undefined;\n\t}\n\treturn color;\n}\n\n/**\n * Create Styling Variable for the background color in banded rows.\n *\n * @since    1.0.0\n *\n * @param {boolean} isNewBlock       Has the block been newly created and not yet persisted?\n * @param {boolean} tableIsResolving Are we still waiting for table to finish resolving?\n * @param {string}  color            Color code associated with the banded row background color\n * @return {string} CSS color code\n */\nexport function gridBandedRowBackgroundColorStyle(isNewBlock, tableIsResolving, color) {\n\tif (isNewBlock || tableIsResolving) {\n\t\treturn undefined;\n\t}\n\treturn color;\n}\n\n/**\n * Create Styling Variable for the header background color.\n *\n * @since    1.0.0\n *\n * @param {boolean} isNewBlock       Has the block been newly created and not yet persisted?\n * @param {boolean} tableIsResolving Are we still waiting for table to finish resolving?\n * @param {string}  tableColor       Color code associated with table header color if populated\n * @param {string}  blockColor       Color code associated with block\n * @return {string} Value for header background-color\n */\nexport function getGridHeaderBackgroundColorStyle(\n\tisNewBlock,\n\ttableIsResolving,\n\ttableColor,\n\tblockColor\n) {\n\tif (isNewBlock || tableIsResolving) {\n\t\treturn undefined;\n\t}\n\n\tif (tableColor) {\n\t\treturn tableColor;\n\t}\n\n\treturn blockColor;\n}\n\n/**\n * Create Styling Variable for showing inner grid borders/lines.\n *\n * @since    1.0.0\n *\n * @param {boolean} isNewBlock       Has the block been newly created and not yet persisted?\n * @param {boolean} tableIsResolving Are we still waiting for table to finish resolving?\n * @param {boolean} showGridLines    Do we render grid lines\n * @return {string} CSS value to show vs. hide table inside grid (border) lines\n */\nexport function gridInnerBorderStyle(isNewBlock, tableIsResolving, showGridLines) {\n\tif (isNewBlock || tableIsResolving) {\n\t\treturn undefined;\n\t}\n\tif (showGridLines) {\n\t\treturn 'solid';\n\t}\n\n\treturn 'hidden';\n}\n\n/**\n * Create Styling Variable for inner grid borders/lines width.\n *\n * @since    1.0.0\n *\n * @param {boolean} isNewBlock       Has the block been newly created and not yet persisted?\n * @param {boolean} tableIsResolving Are we still waiting for table to finish resolving?\n * @param {boolean} showGridLines    Do we render grid lines\n * @param {string}  gridLineWidth    Number of pixels for grid line width\n * @return  {string} CSS value for border width\n */\nexport function gridInnerBorderWidthStyle(\n\tisNewBlock,\n\ttableIsResolving,\n\tshowGridLines,\n\tgridLineWidth\n) {\n\tif (isNewBlock || tableIsResolving) {\n\t\treturn undefined;\n\t}\n\n\tif (!showGridLines) {\n\t\treturn '0px';\n\t}\n\n\treturn String(gridLineWidth) + 'px';\n}\n\n/**\n * CSS starting grid row line number for body rows.\n *\n * @since    1.0.0\n *\n * @param {boolean} enableHeader Does the table contain a header row?\n * @param {boolean} showBorders  Are borders to be displayed?\n * @return  {number} First body row number\n */\nexport function startGridRowNbr(enableHeader, showBorders) {\n\tlet startGridLine = 1;\n\tstartGridLine = enableHeader ? startGridLine + 1 : startGridLine;\n\tstartGridLine = showBorders ? startGridLine + 1 : startGridLine;\n\n\treturn startGridLine;\n}\n\n/**\n * CSS ending grid row line number.\n *\n * @since    1.0.0\n *\n * @param {number}  startGridLine Starting line number for the row group\n * @param {string}  rowGroup      Header or Body\n * @param {number}  numRows       Total number of grid rows in this row group\n * @param {boolean} enableHeader  Does the table contain a header row(s)?\n * @param {boolean} showBorders   Are borders to be displayed?\n * @param {boolean} enableFooter  Does the table contain a footer row(s)?\n * @return  {number} Line number of ending grid row\n */\nexport function endGridRowNbr(\n\tstartGridLine,\n\trowGroup,\n\tnumRows,\n\tenableHeader,\n\tshowBorders,\n\tenableFooter // Always false.  Reserved for future functionality\n) {\n\tlet endGridLine;\n\n\tswitch (rowGroup) {\n\t\tcase 'Header': {\n\t\t\tendGridLine = 2;\n\t\t\tendGridLine = showBorders ? endGridLine++ : endGridLine;\n\t\t\tbreak;\n\t\t}\n\t\tcase 'Body': {\n\t\t\tendGridLine = startGridLine + numRows;\n\t\t\tendGridLine = showBorders ? endGridLine++ : endGridLine;\n\t\t\tendGridLine = enableHeader ? endGridLine - 1 : endGridLine;\n\t\t\tendGridLine = enableFooter ? endGridLine - 1 : endGridLine;\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tconsole.log('Unknown row type');\n\t}\n\n\treturn endGridLine;\n}\n\nexport function getHeaderTextAlignmentStyle(isNewBlock, tableIsResolving, textAlignment) {\n\tif (isNewBlock || tableIsResolving) {\n\t\treturn undefined;\n\t}\n\n\treturn textAlignment;\n}\n\n/**\n * Determine whether the border is styled differently or the same for each side of the border.\n *\n * The BorderBoxControl stores the syle values as a flat object (simple) or as nested objects\n * (complex).  We evaluate the object value to determine which type it is.\n *\n * @since    1.0.0\n *\n * @param {Object} border Border style definition\n * @return {string} Border type (flat vs. split)\n */\nexport function getBorderStyleType(border) {\n\tif (border) {\n\t\tconst borderWrapper = Object.entries(border);\n\t\tfor (let i = 0; i < borderWrapper.length; i++) {\n\t\t\tif (\n\t\t\t\tborderWrapper[i].some(value => {\n\t\t\t\t\treturn typeof value == 'object';\n\t\t\t\t})\n\t\t\t) {\n\t\t\t\treturn 'split';\n\t\t\t}\n\t\t}\n\t\treturn 'flat';\n\t}\n\treturn 'unknown';\n}\n\n/**\n * Get the border style, color, and width of the specified border segment.\n *\n * @since    1.0.0\n *\n * @param {Object} border          Border style definition\n * @param {string} borderLocation  The specified border segment (top | right | bottom | left)\n * @param {string} borderAttribute The attribute to be styled (style | color | width)\n * @param {string} borderType      Whether the border is the same on all side (flat) or different (split)\n * @return {string} CSS value for the requested attribute\n */\nexport function getBorderStyle(border, borderLocation, borderAttribute, borderType) {\n\tswitch (borderType) {\n\t\tcase 'split': {\n\t\t\treturn border[borderLocation][borderAttribute];\n\t\t}\n\n\t\tcase 'flat': {\n\t\t\treturn border[borderAttribute];\n\t\t}\n\n\t\tdefault: {\n\t\t\tswitch (borderAttribute) {\n\t\t\t\tcase 'color': {\n\t\t\t\t\treturn 'black';\n\t\t\t\t}\n\n\t\t\t\tcase 'style': {\n\t\t\t\t\treturn 'solid';\n\t\t\t\t}\n\n\t\t\t\tcase 'width': {\n\t\t\t\t\treturn '1px';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","// extracted by mini-css-extract-plugin\nexport {};","/* Internal dependencies */\nimport { numberToLetter } from './utils';\n\n/**\n * Create a new dynamic table\n *\n * @since    1.0.0\n *\n * @param {string} newBlockTableRef Block table cross reference unique string\n * @param {number} columnCount      Number of columns to include in the table\n * @param {number} rowCount         Number of rows to include in the table\n * @param {string} tableName        Name of the new table\n * @return  {Object} New Dynamic Table\n */\nexport function initTable(newBlockTableRef, columnCount, rowCount, tableName) {\n\tconst tableCells = initTableCells(Number(columnCount), Number(rowCount));\n\tconst rowArray = [];\n\n\tfor (let i = 1; i <= rowCount; i++) {\n\t\tconst row = getDefaultRow('0', i);\n\t\trowArray.push(row);\n\t}\n\n\tconst columnArray = [];\n\n\tfor (let i = 1; i <= columnCount; i++) {\n\t\tconst column = getDefaultColumn('0', i);\n\t\tcolumnArray.push(column);\n\t}\n\n\tconst newTable = {\n\t\ttable: {\n\t\t\ttable_id: '0',\n\t\t\tblock_table_ref: newBlockTableRef,\n\t\t\tpost_id: '0',\n\t\t\ttable_status: 'new',\n\t\t\ttable_name: tableName,\n\t\t\tattributes: getDefaultTableAttributes('table'),\n\t\t\tclasses: getDefaultTableClasses('table'),\n\t\t\trows: rowArray,\n\t\t\tcolumns: columnArray,\n\t\t\tcells: tableCells,\n\t\t},\n\t};\n\n\treturn newTable;\n}\n\n/**\n * Build an array of table cells using default attribute values.\n *\n * @since    1.0.0\n *\n * @param {number} init_num_columns\n * @param {number} init_num_rows\n * @return  {Array} Array of cells associated with the new table\n */\nexport function initTableCells(init_num_columns, init_num_rows) {\n\tconst tableCells = [];\n\n\tlet x = 1;\n\tlet y = 1;\n\n\twhile (y <= init_num_rows) {\n\t\twhile (x <= init_num_columns) {\n\t\t\tif (y == 1) {\n\t\t\t\tconst cell = getDefaultCell('0', String(x), String(y));\n\t\t\t\ttableCells.push(cell);\n\t\t\t} else {\n\t\t\t\tconst cell = getDefaultCell('0', String(x), String(y));\n\t\t\t\ttableCells.push(cell);\n\t\t\t}\n\t\t\tx++;\n\t\t}\n\t\tx = 1;\n\t\ty++;\n\t}\n\treturn tableCells;\n}\n\n/**\n * Get a new row with default values.\n *\n * @since    1.0.0\n *\n * @param {number} tableId     Table id to assign to row\n * @param {number} rowId       Row id to assign to row\n * @param {string} rowLocation Border or another value, default = body\n * @return  {Array} New table row\n */\nexport function getDefaultRow(tableId, rowId, rowLocation = 'Body') {\n\tlet row;\n\tif (rowLocation === 'Border') {\n\t\trow = {\n\t\t\ttable_id: String(tableId),\n\t\t\trow_id: String(rowId),\n\t\t\tattributes: getDefaultTableAttributes('rows', rowLocation),\n\t\t\tclasses: getDefaultTableClasses('rows'),\n\t\t};\n\t} else {\n\t\trow = {\n\t\t\ttable_id: String(tableId),\n\t\t\trow_id: String(rowId),\n\t\t\tattributes: getDefaultTableAttributes('rows', rowLocation),\n\t\t\tclasses: getDefaultTableClasses('rows'),\n\t\t};\n\t}\n\treturn row;\n}\n\n/**\n * Get a new column with default values.\n *\n * @since    1.0.0\n *\n * @param {number} tableId        Table id to assign to column\n * @param {number} columnId       Column id to assign to column\n * @param {string} columnLocation Border or another value, default = body\n * @return  {Array} New table column\n */\nexport function getDefaultColumn(tableId, columnId, columnLocation = 'Body') {\n\tlet column;\n\tif (columnLocation === 'Border') {\n\t\tcolumn = {\n\t\t\ttable_id: String(tableId),\n\t\t\tcolumn_id: String(columnId),\n\t\t\tcolumn_name: 'Border',\n\t\t\tattributes: getDefaultTableAttributes('columns', columnLocation),\n\t\t\tclasses: '',\n\t\t};\n\t} else {\n\t\tcolumn = {\n\t\t\ttable_id: String(tableId),\n\t\t\tcolumn_id: String(columnId),\n\t\t\tcolumn_name: 'Comments',\n\t\t\tattributes: getDefaultTableAttributes('columns', columnLocation),\n\t\t\tclasses: getDefaultTableClasses('columns'),\n\t\t};\n\t}\n\treturn column;\n}\n\n/**\n * Get a new cell with default values.\n *\n * @since    1.0.0\n *\n * @param {number} tableId      Table id to assign to cell\n * @param {number} columnId     Column id to assign to column\n * @param {number} rowId        Row id to assign to row\n * @param {string} cellLocation Border or another value, default = body\n * @return {Array} New table cell\n */\nexport function getDefaultCell(tableId, columnId, rowId, cellLocation = 'Body') {\n\tlet cell;\n\tconst columnLetter = numberToLetter(columnId);\n\tconst borderContent = rowId == 0 ? columnLetter : String(rowId);\n\n\tif (cellLocation === 'Border') {\n\t\tcell = {\n\t\t\ttable_id: String(tableId),\n\t\t\tcolumn_id: String(columnId),\n\t\t\trow_id: String(rowId),\n\t\t\tcell_id: rowId === 0 ? columnLetter + '0' : '0' + String(columnId),\n\t\t\tattributes: getDefaultTableAttributes('cells', cellLocation),\n\t\t\tclasses: 'grid-control__border-cells hover',\n\t\t\tcontent: borderContent,\n\t\t};\n\t} else {\n\t\tcell = {\n\t\t\ttable_id: String(tableId),\n\t\t\tcolumn_id: String(columnId),\n\t\t\trow_id: String(rowId),\n\t\t\tcell_id: columnLetter + rowId,\n\t\t\tattributes: getDefaultTableAttributes('cells', cellLocation),\n\t\t\tclasses: getDefaultTableClasses('cells'),\n\t\t\tcontent: '',\n\t\t};\n\t}\n\treturn cell;\n}\n\n/**\n * Get default attributes for a specific table part.\n *\n * @since    1.0.0\n *\n * @param {string} tableComponent    table header, rows, column, cell\n * @param {string} componentLocation Border or another value, default = body\n * @return {Object} Attributes\n */\nexport function getDefaultTableAttributes(tableComponent, componentLocation = 'Body') {\n\tconst tableBaseAttributes = {\n\t\tshowGridLines: true,\n\t\tbandedRows: false,\n\t\tbandedRowBackgroundColor: '#d8dbda',\n\t\tbandedTextColor: '#d8dbda',\n\t\tgridLineWidth: 1,\n\t\tallowHorizontalScroll: true,\n\t\tenableHeaderRow: false,\n\t\theaderAlignment: 'center',\n\t\theaderRowSticky: false,\n\t\theaderBorder: { color: 'black', style: 'solid', width: '1px' },\n\t\thorizontalAlignment: 'none',\n\t\tbodyAlignment: undefined,\n\t\tbodyBorder: { color: 'black', style: 'solid', width: '1px' },\n\t\tverticalAlignment: 'none',\n\t\thideTitle: true,\n\t};\n\n\tconst columnAttributes = {\n\t\tcolumnWidthType: 'Proportional',\n\t\tminWidth: 2,\n\t\tminWidthUnits: 'ch',\n\t\tmaxWidth: 1,\n\t\tmaxWidthUnits: 'fr',\n\t\tfixedWidth: 1,\n\t\tfixedWidthUnits: 'fr',\n\t\tdisableForTablet: false,\n\t\tdisableForPhone: false,\n\t\tisFixedLeftColumnGroup: false,\n\t\thorizontalAlignment: 'none',\n\t};\n\n\tconst columnBorderAttributes = {\n\t\tcolumnWidthType: 'Fixed',\n\t\tminWidth: 0,\n\t\tminWidthUnits: '',\n\t\tmaxWidth: 0,\n\t\tmaxWidthUnits: '',\n\t\tfixedWidth: 20,\n\t\tfixedWidthUnits: 'px',\n\t\tdisableForTablet: false,\n\t\tdisableForPhone: false,\n\t\tisFixedLeftColumnGroup: false,\n\t\thorizontalAlignment: 'center',\n\t};\n\n\tconst rowAttributes = {\n\t\trowHeightType: 'Auto',\n\t\tminHeight: 0,\n\t\tminHeightUnits: 'em',\n\t\tmaxHeight: 0,\n\t\tmaxHeightUnits: 'em',\n\t\tfixedHeight: 0,\n\t\tfixedHeightUnits: 'em',\n\t\tisHeader: false,\n\t\tverticalAlignment: 'none',\n\t};\n\n\tconst rowBorderAttributes = {\n\t\trowHeightType: 'Auto',\n\t\tminHeight: 0,\n\t\tminHeightUnits: 'em',\n\t\tmaxHeight: 0,\n\t\tmaxHeightUnits: 'em',\n\t\tfixedHeight: 0,\n\t\tfixedHeightUnits: 'em',\n\t\tisHeader: false,\n\t\tverticalAlignment: 'none',\n\t};\n\n\tconst cellAttributes = {\n\t\tborder: false,\n\t};\n\n\tconst cellBorderAttributes = {\n\t\tborder: true,\n\t};\n\n\tswitch (tableComponent) {\n\t\tcase 'table':\n\t\t\treturn tableBaseAttributes;\n\t\tcase 'columns':\n\t\t\tif (componentLocation === 'Border') {\n\t\t\t\treturn columnBorderAttributes;\n\t\t\t}\n\t\t\treturn columnAttributes;\n\t\tcase 'rows':\n\t\t\tif (componentLocation === 'Border') {\n\t\t\t\treturn rowBorderAttributes;\n\t\t\t}\n\t\t\treturn rowAttributes;\n\t\tcase 'cells':\n\t\t\tif (componentLocation === 'Border') {\n\t\t\t\treturn cellBorderAttributes;\n\t\t\t}\n\t\t\treturn cellAttributes;\n\t}\n}\n\n/**\n * Get default classes for a specific table part.\n *\n * @since    1.0.0\n *\n * @param {string} tableComponent table header, rows, column, cell\n * @return  {string} Classes\n */\nexport function getDefaultTableClasses(tableComponent) {\n\tconst tableBaseClasses = '';\n\n\tconst columnClasses = '';\n\n\tconst rowClasses = '';\n\n\tconst cellClasses = '';\n\n\tswitch (tableComponent) {\n\t\tcase 'table':\n\t\t\treturn tableBaseClasses;\n\t\tcase 'columns':\n\t\t\treturn columnClasses;\n\t\tcase 'rows':\n\t\t\treturn rowClasses;\n\t\tcase 'cells':\n\t\t\treturn cellClasses;\n\t}\n}\n","/**\n * Convert a column number to a string of letters.\n *\n * @since    1.0.0\n *\n * @param {number} letterNumber Integer\n * @return  {string} Column letter\n */\nexport function numberToLetter(letterNumber) {\n\tconst letterMap = [\n\t\t{ nbr: '1', letter: 'A' },\n\t\t{ nbr: '2', letter: 'B' },\n\t\t{ nbr: '3', letter: 'C' },\n\t\t{ nbr: '4', letter: 'D' },\n\t\t{ nbr: '5', letter: 'E' },\n\t\t{ nbr: '6', letter: 'F' },\n\t\t{ nbr: '7', letter: 'G' },\n\t\t{ nbr: '8', letter: 'H' },\n\t\t{ nbr: '9', letter: 'I' },\n\t\t{ nbr: 'a', letter: 'J' },\n\t\t{ nbr: 'b', letter: 'k' },\n\t\t{ nbr: 'c', letter: 'L' },\n\t\t{ nbr: 'd', letter: 'M' },\n\t\t{ nbr: 'e', letter: 'N' },\n\t\t{ nbr: 'f', letter: 'O' },\n\t\t{ nbr: 'g', letter: 'P' },\n\t\t{ nbr: 'h', letter: 'Q' },\n\t\t{ nbr: 'i', letter: 'R' },\n\t\t{ nbr: 'j', letter: 'S' },\n\t\t{ nbr: 'k', letter: 'T' },\n\t\t{ nbr: 'l', letter: 'U' },\n\t\t{ nbr: 'm', letter: 'V' },\n\t\t{ nbr: 'n', letter: 'W' },\n\t\t{ nbr: 'o', letter: 'X' },\n\t\t{ nbr: 'p', letter: 'Y' },\n\t\t{ nbr: 'q', letter: 'Z' },\n\t];\n\n\tif (letterNumber === 0) {\n\t\treturn '0';\n\t}\n\n\tconst letterLookup = letterNumber.toString(26).split('');\n\tlet letterDigit = '';\n\n\tletterLookup.map(value => {\n\t\tletterDigit = letterDigit + letterMap.find(x => x.nbr === value).letter;\n\t});\n\n\treturn letterDigit;\n}\n\n/**\n * Update one attribute value inside the array.\n *\n * @since    1.0.0\n *\n * @param {Array|Object} arrayIn     current state with nested arrays and objects\n * @param {string}       key         State array type\n * @param {number}       id          Identifier of object associated with they key\n * @param {Object}       updatedData New object value\n * @return  {Array|Object} Updated object that represents one attribute of the new state\n */\nexport function updateArray(arrayIn, key, id, updatedData) {\n\treturn arrayIn.map(item => (item[key] === id ? { ...item, ...updatedData } : item));\n}\n\n/**\n * Sort table part array by the natural identifier assigned at design time.\n *\n * @since    1.0.0\n *\n * @param {string} tablePart  Table part to be sorted (columns | rows | cells)\n * @param {Array}  tableArray Array of all attributes of the table part being sorted\n * @return Sorted tableArray based on the ID of each object in the array\n */\nexport function tableSort(tablePart, tableArray) {\n\tif (tablePart === 'rows') {\n\t\tconst sortedRows = [...tableArray];\n\t\tsortedRows.sort((a, b) => {\n\t\t\tif (Number([a.row_id]) < Number([b.row_id])) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 1;\n\t\t});\n\t\treturn sortedRows;\n\t}\n\n\tif (tablePart === 'columns') {\n\t\tconst sortedColumns = [...tableArray];\n\t\tsortedColumns.sort((a, b) => {\n\t\t\tif (Number([a.column_id]) < Number([b.column_id])) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 1;\n\t\t});\n\t\treturn sortedColumns;\n\t}\n\n\tif (tablePart === 'cells') {\n\t\tconst sortedCells = [...tableArray];\n\t\tsortedCells.sort((a, b) => {\n\t\t\tif (Number([a.row_id]) === Number([b.row_id])) {\n\t\t\t\tif (Number([a.column_id]) < Number([b.column_id])) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif (Number([a.row_id]) < Number([b.row_id])) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 1;\n\t\t});\n\t\treturn sortedCells;\n\t}\n}\n\n/**\n * Create a random identifier for assignment as a block/table cross reference.\n *\n * @since    1.0.0\n *\n * @return  {string} New block_table_ref\n */\nexport function generateBlockTableRef() {\n\tconst timestamp = Date.now();\n\treturn timestamp.toString(16);\n}\n\n/**\n * Set content for borders occuring in rows (integers) and columns (letters).\n *\n * @since    1.0.0\n *\n * @param {*} row     current row_id\n * @param {*} column  current column_id\n * @param {*} content current content\n * @return  {number | string | null} cell content\n */\nexport function setBorderContent(row, column, content) {\n\tif (row === '0' && column === '0') {\n\t\treturn '';\n\t}\n\treturn content;\n}\n\n/**\n * Identify whether to display the column menu component for the current column\n *\n * @since    1.0.0\n *\n * @param {boolean} columnMenuVisible Whether the column menu should be visible based on current state of processing\n * @param {number}  openColumnRow     The column id or row id that should be open\n * @param {number}  column_id         Current column id\n * @return  {boolean} Show the current column menu?\n */\nexport function openCurrentColumnMenu(columnMenuVisible, openColumnRow, column_id) {\n\tif (columnMenuVisible && openColumnRow === column_id) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Identify whether to display the row menu component for the current column\n *\n * @since    1.0.0\n *\n * @param {boolean} rowMenuVisible Whether the row menu should be visible based on current state of processing\n * @param {number}  openColumnRow  The column id or row id that should be open\n * @param {number}  row_id         Current row id\n * @return  {boolean} Show the current row menu?\n */\nexport function openCurrentRowMenu(rowMenuVisible, openColumnRow, row_id) {\n\tif (rowMenuVisible && openColumnRow === row_id) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Strip any HTML tags.\n *\n * @param {string} str String to evaluate\n * @return  {string} String with any embedded tages removed\n * @since    1.0.0\n */\nexport function removeTags(str) {\n\tif (str === null || str === '') return false;\n\tstr = str.toString();\n\n\t// Regular expression to identify HTML tags in\n\t// the input string. Replacing the identified\n\t// HTML tag with a null string.\n\treturn str.replace(/(<([^>]+)>)/gi, '');\n}\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"notices\"];","module.exports = window[\"wp\"][\"primitives\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkdynamic_tables\"] = globalThis[\"webpackChunkdynamic_tables\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["useEffect","useState","DropdownMenu","MenuGroup","MenuItem","moreVertical","settings","tableColumnBefore","tableColumnDelete","ConfigureColumnWidth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ColumnMenu","props","openModalColumnWidth","setOpenModalColumnWidth","columnAttributes","setColumnAttributes","tableId","columnId","columnLabel","enableProFeatures","updatedColumn","onInsertColumn","event","onDeleteColumn","onUpdateColumnWidth","updatedColumnAttributes","preventDefault","children","icon","defaultOpen","label","onClose","onClick","e","openColumnWidth","Modal","SelectControl","CheckboxControl","Button","__experimentalNumberControl","NumberControl","columnWidthType","setHideProportional","setHideCustom","setHideFixed","setColumnWidthType","setMinWidth","minWidth","setMinWidthUnits","minWidthUnits","setMaxWidth","maxWidth","setMaxWidthUnits","maxWidthUnits","setFixedWidth","fixedWidth","setFixedWidthUnits","setDisableForPhone","disableForPhone","setDisableForTablet","disableForTablet","stopProp","stopPropagation","handleCancel","hideProportional","hideCustom","hideFixed","fixedWidthUnits","onWidthType","onMinimumWidth","target","value","onMinimumWidthUnits","onMaximumWidth","onMaximumWidthUnits","onFixedWidth","Number","onFixedWidthUnits","onTablet","checked","onPhone","onUpdate","isFixedLeftColumnGroup","horizontalAlignment","title","onRequestClose","focusOnMount","isDismissible","shouldCloseOnClickOutside","size","className","onSubmit","onMouseDown","onChange","options","__nextHasNoMarginBottom","labelPosition","onBlur","variant","type","ConfigureRowHeight","openRowHeight","rowLabel","rowAttributes","rowHeightType","setRowHeightType","setMinHeight","minHeight","setMinHeightUnits","minHeightUnits","setMaxHeight","maxHeight","setMaxHeightUnits","maxHeightUnits","setFixedHeight","fixedHeight","setFixedHeightUnits","fixedHeightUnits","onHeightType","onMinimumHeight","onMinimumHeightUnits","onMaximumHeight","onMaximumHeightUnits","onFixedHeight","onFixedHeightUnits","updatedRowAttributes","isFixedLeftRowGroup","RowMenu","tableRowBefore","tableRowDelete","openModalRowHeight","setOpenModalRowHeight","setRowAttributes","rowId","updatedRow","onInsertRow","onDeleteRow","onUpdateRowHeight","TYPES","CREATE_TABLE","INSERT_COLUMN","INSERT_ROW","DELETE_TABLE","DELETE_COLUMN","DELETE_ROW","CHANGE_TABLE_ID","UPDATE_TABLE_PROP","REMOVE_TABLE_PROP","UPDATE_ROW","UPDATE_COLUMN","UPDATE_CELL","RECEIVE_HYDRATE","RECEIVE_HYDRATE_TEST","PERSIST","PROCESS_BORDERS","store","coreStore","blockEditorStore","receiveNewTable","table","console","log","table_id","receiveTable","block_table_ref","table_status","post_id","table_name","attributes","classes","rows","columns","cells","createTableEntity","select","dispatch","registry","getTable","newTable","header","id","status","tableEntity","saveEntityRecord","assignTableId","error","saveTableEntity","saveEditedEntityRecord","alert","updateTableEntity","overrideTableStatus","filteredRows","filter","row","row_id","filteredColumns","column","column_id","filteredCells","cell","transformedCells","map","content","tableStatus","updatedTable","editEntityRecord","deleteTableEntity","deletedTableEntity","deleteEntityRecord","processDeletedTables","deletedTables","Object","keys","forEach","key","deletedTableId","processUnmountedTables","unmountedTables","unmountedTableBlockId","unmounted_blockid","priorStatus","prior_status","tableBlock","getBlock","updateTableProp","removeTableProp","addColumn","newColumn","columnCells","addRow","newRow","rowCells","removeColumn","removeRow","newTableId","String","attribute","updateRow","updateColumn","updateCell","cellId","updateTableBorder","tableRows","tableColumns","tableCells","STORE_NAME","createReduxStore","register","reducer","selectors","actions","resolvers","numberToLetter","updateArray","tableSort","state","action","JSON","stringify","newTableIdState","rowsWithNewId_ChangeId","columnsWithNewId_ChangeId","cellsWithNewId_ChangeId","newRow_ChangeId","push","newColumn_ChangeId","newCell_ChangeId","updatedTableId","tablePropRemoved","insertColumnState","columnsWithNewId_InsertColumn","newColumn_InsertColumn","column_name","sortedColumns_InsertColumn","cellsWithNewId_InsertColumn","newColumnId_InsertColumn","columnLetter_InsertColumn","cellContent_InsertColumn","newCell_InsertColumn","cell_id","allNewColumnCells_InsertColumn","sortedCells_InsertColumn","returnedTableNewColumn_InsertColumn","insertRowState","rowsWithNewId_InsertRow","newRow_InsertRow","sortedRows","cellsWithNewId_InsertRow","newRowId_InsertRow","columnLetter_InsertRow","cellContent_InsertRow","newCell_InsertRow","allNewRowCells","sortedCells_InsertRow","returnedTableNewRow_InsertRow","deleteColumnState","columnsWithNewId_DeleteColumn","newColumn_DeleteColumn","cellsWithNewId_DeleteColumn","newColumnId_DeleteColumn","columnLetter_DeleteColumn","cellContent_DeleteColumn","newCell_DeleteColumn","returnedTableNewColumn_DeleteColumn","deleteRowState","rowsWithNewId_DeleteRow","newRow_DeleteRow","cellsWithNewId_DeleteRow","newRowId_DeleteRow","columnLetter_DeleteRow","cellContent_DeleteRow","newCell_DeleteRow","returnedTableNewRow_DeleteRow","transformedValue_UpdateRow","newRowsState","updatedRowData","parse","updatedRows","returnedUpdatedTableRow","transformedValue_UpdateColumn","newColumnsState","updatedColumnData","updatedColumns","returnedUpdatedTableColumn","newCellsState","updatedCellData","updatedCells","returnedCellState","newBaseTableState","returnedBorderState","tables","tableKey","newTableState","newTablesState","returnedTableNewId","filteredTablesState","reduce","acc","deleteTablesState","returnedTableDefault","computeCellIds","fetchedCells","isTableStale","resolveSelect","getEntityRecord","hasOwnProperty","getTables","getTableIdByBlock","length","getUnmountedTables","getDeletedTables","getUnsavedTables","newTables","useSelect","useDispatch","useRef","editorStore","noticeStore","__","Panel","PanelBody","PanelRow","TabbableContainer","Spinner","Placeholder","__experimentalInputControl","InputControl","BorderBoxControl","RichText","useBlockProps","useSettings","BlockIcon","AlignmentControl","InspectorControls","BlockControls","BlockAlignmentToolbar","PanelColorSettings","search","blockTable","tableStore","usePostChangesSaved","generateBlockTableRef","setBorderContent","openCurrentColumnMenu","openCurrentRowMenu","removeTags","initTable","getDefaultRow","getDefaultColumn","getDefaultCell","processColumns","processHeaderRow","processBodyRows","gridBandedRowTextColorStyle","gridBandedRowBackgroundColorStyle","gridInnerBorderStyle","gridInnerBorderWidthStyle","startGridRowNbr","endGridRowNbr","getGridHeaderBackgroundColorStyle","getHeaderTextAlignmentStyle","getBorderStyleType","getBorderStyle","addEntities","name","kind","baseURL","baseURLParams","context","plural","getTitle","record","Edit","blockProps","lockPostSaving","lockPostAutosaving","createNotice","removeNotice","setTableStale","openColumnRow","setOpenColumnRow","columnMenuVisible","setColumnMenuVisible","rowMenuVisible","setRowMenuVisible","showBorders","setShowBorders","tableName","setTableName","numColumns","setNumColumns","numRows","setNumRows","awaitingTableEntityCreation","setAwaitingTableEntityCreation","enableFutureFeatures","block_alignment","themeColors","borderBoxColors","color","currentTableId","setTableIdChanged","isTableIdChanged","postChangesAreSaved","setTableAttributes","setBlockTableStatus","setNewBlock","setSaveLock","setClearSaveLock","isNewBlock","blockTableStatus","tableHasStartedResolving","tableHasFinishedResolving","tableIsResolving","hasStartedResolution","hasFinishedResolution","isResolving","selectorArgs","getBlockTable","selectedTable","postId","setAttributes","currentStatus","current","getTablePropAttribute","tableAttributes","attributeName","attributeValue","showGridLines","allowHorizontalScroll","enableHeaderRow","headerAlignment","gridHeaderBackgroundColor","headerRowSticky","headerBorder","bodyAlignment","bodyBorder","bandedRows","bandedTextColor","bandedRowBackgroundColor","gridLineWidth","gridAlignment","verticalAlignment","hideTitle","tableColumnLength","tableRowLength","insertColumn","i","insertRow","deleteColumn","deleteRow","persist","onToggleBorders","isChecked","rowBorder","columnBorder","createTable","columnCount","rowCount","newBlockTableRef","onCreateTable","onChangeInitialColumnCount","num_columns","newNumColumns","errorText","politeness","onChangeInitialRowCount","num_rows","newNumRows","onUpdateColumn","updateType","onUpdateRow","onMouseBorderClick","compareColumnId","clickedColumn","find","compareRowId","clickedRow","onHideTitle","updatedTableAttributes","onAllowHorizontalScroll","onShowBandedRows","onBandedRowColor","onEnableHeaderRow","x","isHeader","onAlignHeader","alignment","onHeaderBorder","border","onHeaderRowSticky","onAlignBody","onBodyBorder","onShowGridLines","onGridLineWidth","gridColumnStyle","gridHeaderRowStyle","gridBodyRowStyle","startGridHeaderRowNbrStyle","endGridHeaderRowNbrStyle","startGridBodyRowNbrStyle","endGridBodyRowNbrStyle","horizontalScrollStyle","gridBandedRowTextColor","gridBandedRowBackgroundColor","gridShowInnerLines","gridInnerLineWidth","headerRowStickyStyle","headerRowStickyClass","gridHeaderBackgroundColorStyle","style","backgroundColor","headerTextAlignmentStyle","headerBorderStyleType","headerBorderTopColor","headerBorderTopStyle","headerBorderTopWidth","headerBorderRightColor","headerBorderRightStyle","headerBorderRightWidth","headerBorderBottomColor","headerBorderBottomStyle","headerBorderBottomWidth","headerBorderLeftColor","headerBorderLeftStyle","headerBorderLeftWidth","bodyTextAlignmentStyle","bodyBorderStyleType","bodyBorderTopColor","bodyBorderTopStyle","bodyBorderTopWidth","bodyBorderRightColor","bodyBorderRightStyle","bodyBorderRightWidth","bodyBorderBottomColor","bodyBorderBottomStyle","bodyBorderBottomWidth","bodyBorderLeftColor","bodyBorderLeftStyle","bodyBorderLeftWidth","initialOpen","disabled","htmlFor","__next40pxDefaultSize","__experimentalIsRenderedInSidebar","isCompact","colors","hideLabelFromVision","group","colorSettings","newColor","display","tagName","allowedFormats","borderContent","isOpenCurrentColumnMenu","isFirstColumn","renderedRow","isBorder","isOpenCurrentRowMenu","showGridLinesCSS","gridLineWidthCSS","tabIndex","calculatedClasses","bandedRowOffset","href","showColors","instructions","placeholder","required","min","usePrevious","areChangesSaved","setAreChangesSaved","hasUnsavedChanges","isEditedPostDirty","hadUnsavedChanges","registerBlockType","metadata","apiVersion","edit","save","undefined","newGridColumnStyle","sizing","newGridRowStyle","tableColor","blockColor","enableHeader","startGridLine","rowGroup","enableFooter","endGridLine","textAlignment","borderWrapper","entries","some","borderLocation","borderAttribute","borderType","initTableCells","rowArray","columnArray","getDefaultTableAttributes","getDefaultTableClasses","init_num_columns","init_num_rows","y","rowLocation","columnLocation","cellLocation","columnLetter","tableComponent","componentLocation","tableBaseAttributes","width","columnBorderAttributes","rowBorderAttributes","cellAttributes","cellBorderAttributes","tableBaseClasses","columnClasses","rowClasses","cellClasses","letterNumber","letterMap","nbr","letter","letterLookup","toString","split","letterDigit","arrayIn","updatedData","item","tablePart","tableArray","sort","a","b","sortedColumns","sortedCells","timestamp","Date","now","str","replace"],"sourceRoot":""}