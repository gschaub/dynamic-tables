{"version":3,"file":"index.js","mappings":"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;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/block-table.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/more-vertical.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/search.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/settings.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/table-column-before.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/table-column-delete.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/table-row-before.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/table-row-delete.js","webpack://dynamic-tables/./src/components/column-dropdown-menu/index.js","webpack://dynamic-tables/./src/components/configure-column-width/index.js","webpack://dynamic-tables/./src/components/configure-row-height/index.js","webpack://dynamic-tables/./src/components/index.js","webpack://dynamic-tables/./src/components/row-dropdown-menu/index.js","webpack://dynamic-tables/./src/data/action-types.js","webpack://dynamic-tables/./src/data/actions.js","webpack://dynamic-tables/./src/data/constants.js","webpack://dynamic-tables/./src/data/index.js","webpack://dynamic-tables/./src/data/reducer.js","webpack://dynamic-tables/./src/data/resolvers.js","webpack://dynamic-tables/./src/data/selectors.js","webpack://dynamic-tables/./src/data/table-entity.js","webpack://dynamic-tables/./src/edit.js","webpack://dynamic-tables/./src/hooks.js","webpack://dynamic-tables/./src/index.js","webpack://dynamic-tables/./src/style.js","webpack://dynamic-tables/./src/table-defaults.js","webpack://dynamic-tables/./src/utils.js","webpack://dynamic-tables/./src/components/configure-column-width/style.scss?6ddd","webpack://dynamic-tables/./src/components/configure-row-height/style.scss?c2b2","webpack://dynamic-tables/./src/editor.scss?0339","webpack://dynamic-tables/./src/style.scss?75bd","webpack://dynamic-tables/external window \"React\"","webpack://dynamic-tables/external window \"ReactJSXRuntime\"","webpack://dynamic-tables/external window [\"wp\",\"apiFetch\"]","webpack://dynamic-tables/external window [\"wp\",\"blockEditor\"]","webpack://dynamic-tables/external window [\"wp\",\"blocks\"]","webpack://dynamic-tables/external window [\"wp\",\"components\"]","webpack://dynamic-tables/external window [\"wp\",\"compose\"]","webpack://dynamic-tables/external window [\"wp\",\"coreData\"]","webpack://dynamic-tables/external window [\"wp\",\"data\"]","webpack://dynamic-tables/external window [\"wp\",\"dataControls\"]","webpack://dynamic-tables/external window [\"wp\",\"editor\"]","webpack://dynamic-tables/external window [\"wp\",\"element\"]","webpack://dynamic-tables/external window [\"wp\",\"i18n\"]","webpack://dynamic-tables/external window [\"wp\",\"notices\"]","webpack://dynamic-tables/external window [\"wp\",\"primitives\"]","webpack://dynamic-tables/external window [\"wp\",\"url\"]","webpack://dynamic-tables/webpack/bootstrap","webpack://dynamic-tables/webpack/runtime/chunk loaded","webpack://dynamic-tables/webpack/runtime/compat get default export","webpack://dynamic-tables/webpack/runtime/define property getters","webpack://dynamic-tables/webpack/runtime/hasOwnProperty shorthand","webpack://dynamic-tables/webpack/runtime/make namespace object","webpack://dynamic-tables/webpack/runtime/jsonp chunk loading","webpack://dynamic-tables/webpack/before-startup","webpack://dynamic-tables/webpack/startup","webpack://dynamic-tables/webpack/after-startup"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst blockTable = /*#__PURE__*/_jsx(SVG, {\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM5 4.5h14c.3 0 .5.2.5.5v3.5h-15V5c0-.3.2-.5.5-.5zm8 5.5h6.5v3.5H13V10zm-1.5 3.5h-7V10h7v3.5zm-7 5.5v-4h7v4.5H5c-.3 0-.5-.2-.5-.5zm14.5.5h-6V15h6.5v4c0 .3-.2.5-.5.5z\"\n  })\n});\nexport default blockTable;\n//# sourceMappingURL=block-table.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst moreVertical = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M13 19h-2v-2h2v2zm0-6h-2v-2h2v2zm0-6h-2V5h2v2z\"\n  })\n});\nexport default moreVertical;\n//# sourceMappingURL=more-vertical.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst search = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M13 5c-3.3 0-6 2.7-6 6 0 1.4.5 2.7 1.3 3.7l-3.8 3.8 1.1 1.1 3.8-3.8c1 .8 2.3 1.3 3.7 1.3 3.3 0 6-2.7 6-6S16.3 5 13 5zm0 10.5c-2.5 0-4.5-2-4.5-4.5s2-4.5 4.5-4.5 4.5 2 4.5 4.5-2 4.5-4.5 4.5z\"\n  })\n});\nexport default search;\n//# sourceMappingURL=search.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst settings = /*#__PURE__*/_jsxs(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: [/*#__PURE__*/_jsx(Path, {\n    d: \"m19 7.5h-7.628c-.3089-.87389-1.1423-1.5-2.122-1.5-.97966 0-1.81309.62611-2.12197 1.5h-2.12803v1.5h2.12803c.30888.87389 1.14231 1.5 2.12197 1.5.9797 0 1.8131-.62611 2.122-1.5h7.628z\"\n  }), /*#__PURE__*/_jsx(Path, {\n    d: \"m19 15h-2.128c-.3089-.8739-1.1423-1.5-2.122-1.5s-1.8131.6261-2.122 1.5h-7.628v1.5h7.628c.3089.8739 1.1423 1.5 2.122 1.5s1.8131-.6261 2.122-1.5h2.128z\"\n  })]\n});\nexport default settings;\n//# sourceMappingURL=settings.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst tableColumnBefore = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"-2 -2 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M6.4 3.776v3.648H2.752v1.792H6.4v3.648h1.728V9.216h3.712V7.424H8.128V3.776zM0 17.92V0h20.48v17.92H0zM12.8 1.28H1.28v14.08H12.8V1.28zm6.4 0h-5.12v3.84h5.12V1.28zm0 5.12h-5.12v3.84h5.12V6.4zm0 5.12h-5.12v3.84h5.12v-3.84z\"\n  })\n});\nexport default tableColumnBefore;\n//# sourceMappingURL=table-column-before.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst tableColumnDelete = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"-2 -2 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M6.4 9.98L7.68 8.7v-.256L6.4 7.164V9.98zm6.4-1.532l1.28-1.28V9.92L12.8 8.64v-.192zm7.68 9.472V0H0v17.92h20.48zm-1.28-2.56h-5.12v-1.024l-.256.256-1.024-1.024v1.792H7.68v-1.792l-1.024 1.024-.256-.256v1.024H1.28V1.28H6.4v2.368l.704-.704.576.576V1.216h5.12V3.52l.96-.96.32.32V1.216h5.12V15.36zm-5.76-2.112l-3.136-3.136-3.264 3.264-1.536-1.536 3.264-3.264L5.632 5.44l1.536-1.536 3.136 3.136 3.2-3.2 1.536 1.536-3.2 3.2 3.136 3.136-1.536 1.536z\"\n  })\n});\nexport default tableColumnDelete;\n//# sourceMappingURL=table-column-delete.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst tableRowBefore = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"-2 -2 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M6.656 6.464h2.88v2.88h1.408v-2.88h2.88V5.12h-2.88V2.24H9.536v2.88h-2.88zM0 17.92V0h20.48v17.92H0zm7.68-2.56h5.12v-3.84H7.68v3.84zm-6.4 0H6.4v-3.84H1.28v3.84zM19.2 1.28H1.28v9.024H19.2V1.28zm0 10.24h-5.12v3.84h5.12v-3.84zM6.656 6.464h2.88v2.88h1.408v-2.88h2.88V5.12h-2.88V2.24H9.536v2.88h-2.88zM0 17.92V0h20.48v17.92H0zm7.68-2.56h5.12v-3.84H7.68v3.84zm-6.4 0H6.4v-3.84H1.28v3.84zM19.2 1.28H1.28v9.024H19.2V1.28zm0 10.24h-5.12v3.84h5.12v-3.84z\"\n  })\n});\nexport default tableRowBefore;\n//# sourceMappingURL=table-row-before.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst tableRowDelete = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"-2 -2 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M17.728 11.456L14.592 8.32l3.2-3.2-1.536-1.536-3.2 3.2L9.92 3.648 8.384 5.12l3.2 3.2-3.264 3.264 1.536 1.536 3.264-3.264 3.136 3.136 1.472-1.536zM0 17.92V0h20.48v17.92H0zm19.2-6.4h-.448l-1.28-1.28H19.2V6.4h-1.792l1.28-1.28h.512V1.28H1.28v3.84h6.208l1.28 1.28H1.28v3.84h7.424l-1.28 1.28H1.28v3.84H19.2v-3.84z\"\n  })\n});\nexport default tableRowDelete;\n//# sourceMappingURL=table-row-delete.js.map","import { useEffect, useState } from \"@wordpress/element\"\r\nimport {\r\n    DropdownMenu,\r\n    MenuGroup,\r\n    MenuItem\r\n} from '@wordpress/components';\r\nimport {\r\n    AlignmentToolbar\r\n\r\n} from '@wordpress/block-editor';\r\nimport {\r\n    blockTable as icon,\r\n    moreVertical,\r\n    more,\r\n    settings,\r\n    arrowLeft,\r\n    arrowRight,\r\n    arrowUp,\r\n    arrowDown,\r\n    tableColumnBefore,\r\n    tableColumnAfter,\r\n    tableColumnDelete,\r\n    trash\r\n} from '@wordpress/icons';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as tableStore } from \"../../data\"\r\nimport { ConfigureColumnWidth } from '../configure-column-width';\r\nimport '../../editor.scss';\r\n\r\n\r\nfunction ColumnMenu(props) {\r\n\r\n    const [openModalColumnWidth, setOpenModalColumnWidth] = useState(false);\r\n    const [columnAttributes, setColumnAttributes] = useState({})\r\n\r\n    const {\r\n        tableId,\r\n        columnId,\r\n        columnLabel,\r\n        enableProFeatures,\r\n        updatedColumn\r\n    } = props\r\n\r\n    useEffect(() => {\r\n        setColumnAttributes(props.columnAttributes)\r\n    }, [props.columnAttributes])\r\n\r\n    console.log('In Component ColumnMenu')\r\n    console.log(props)\r\n\r\n    function onInsertColumn(event, columnId) {\r\n        console.log('    ...onInsertColumn');\r\n        console.log(event);\r\n        console.log('columnId = ' + columnId)\r\n        updatedColumn(event, 'insert', tableId, columnId, '')\r\n    }\r\n\r\n    function onDeleteColumn(event, columnId) {\r\n        console.log('    ...onInsertColumn');\r\n        console.log(event);\r\n        console.log('columnId = ' + columnId)\r\n        updatedColumn(event, 'delete', tableId, columnId, '')\r\n    }\r\n\r\n    function onUpdateColumnWidth(event, updatedColumnAttributes) {\r\n        console.log('    ...onUpdateColumn Width');\r\n        console.log(event);\r\n        console.log(updatedColumnAttributes);\r\n        if (openModalColumnWidth) {\r\n            setOpenModalColumnWidth(false)\r\n            updatedColumn(event, 'attributes', tableId, columnId, updatedColumnAttributes)\r\n        } else {\r\n            event.preventDefault()\r\n            setOpenModalColumnWidth(true)\r\n        }\r\n    }\r\n\r\n    console.log('Open column width page = ' + openModalColumnWidth)\r\n\r\n    return (\r\n        <>\r\n            <DropdownMenu\r\n                // style={{ display: \"none\" }}\r\n                icon={moreVertical}\r\n                defaultOpen=\"true\"\r\n                label={columnLabel}>\r\n                {({ onClose }) => (\r\n                    <>\r\n                        <MenuGroup>\r\n                            <MenuItem icon={settings} onClick={onUpdateColumnWidth}>\r\n                                Update Column Width\r\n                            </MenuItem>\r\n                        </MenuGroup>\r\n                        <MenuGroup>\r\n                            <MenuItem icon={tableColumnBefore} onClick={e => onInsertColumn(e, columnId)}>\r\n                                Insert Column\r\n                            </MenuItem>\r\n                            <MenuItem icon={tableColumnDelete} onClick={e => onDeleteColumn(e, columnId)}>\r\n                                Delete Column\r\n                            </MenuItem>\r\n                        </MenuGroup>\r\n                    </>\r\n                )}\r\n            </DropdownMenu>\r\n\r\n            {openModalColumnWidth && (\r\n                <ConfigureColumnWidth\r\n                    columnId={columnId}\r\n                    columnLabel={columnLabel}\r\n                    columnAttributes={columnAttributes}\r\n                    enableProFeatures={enableProFeatures}\r\n                    openColumnWidth={onUpdateColumnWidth}>\r\n                </ConfigureColumnWidth>\r\n            )}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport { ColumnMenu };","import { useEffect, useState } from \"@wordpress/element\"\r\n/**\r\n * WordPress dependencies\r\n */\r\n\r\nimport {\r\n    Modal,\r\n    SelectControl,\r\n    CheckboxControl,\r\n    Button,\r\n    __experimentalInputControl as InputControl,\r\n    __experimentalNumberControl as NumberControl\r\n} from '@wordpress/components';\r\n\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport './style.scss';\r\n\r\nfunction ConfigureColumnWidth(props) {\r\n\r\n    const { openColumnWidth,\r\n        columnId,\r\n        columnLabel,\r\n        columnAttributes,\r\n        enableProFeatures\r\n    } = props;\r\n    //    const [closePage, setClosePage] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        switch (columnAttributes.columnWidthType) {\r\n            case 'Proportional':\r\n                {\r\n                    setHideProportional(false)\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Auto':\r\n                {\r\n                    setHideProportional(true)\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Fixed':\r\n                {\r\n                    setHideProportional(true)\r\n                    setHideCustom(true)\r\n                    setHideFixed(false)\r\n                    break;\r\n                }\r\n\r\n            case 'Custom':\r\n                {\r\n                    setHideProportional(true)\r\n                    setHideCustom(false)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n        }\r\n\r\n        setColumnWidthType(columnAttributes.columnWidthType)\r\n        setMinWidth(columnAttributes.minWidth)\r\n        setMinWidthUnits(columnAttributes.minWidthUnits)\r\n        setMaxWidth(columnAttributes.maxWidth)\r\n        setMaxWidthUnits(columnAttributes.maxWidthUnits)\r\n        setFixedWidth(columnAttributes.fixedWidth)\r\n        setFixedWidthUnits(columnAttributes.fixedWidth)\r\n        setDisableForPhone(columnAttributes.disableForPhone)\r\n        setDisableForTablet(columnAttributes.disableForTablet)\r\n    }, [columnAttributes])\r\n\r\n    function stopProp(event) {\r\n        event.stopPropagation()\r\n    }\r\n\r\n    function handleCancel(event) {\r\n        openColumnWidth(false)\r\n    }\r\n\r\n    const [columnWidthType, setColumnWidthType] = useState();\r\n    const [hideProportional, setHideProportional] = useState(true);\r\n    const [hideCustom, setHideCustom] = useState(true);\r\n    const [hideFixed, setHideFixed] = useState(true);\r\n    const [minWidth, setMinWidth] = useState(0);\r\n    const [minWidthUnits, setMinWidthUnits] = useState();\r\n    const [maxWidth, setMaxWidth] = useState(1);\r\n    const [maxWidthUnits, setMaxWidthUnits] = useState();\r\n    const [fixedWidth, setFixedWidth] = useState(0);\r\n    const [fixedWidthUnits, setFixedWidthUnits] = useState();\r\n    const [disableForTablet, setDisableForTablet] = useState(false);\r\n    const [disableForPhone, setDisableForPhone] = useState(false);\r\n\r\n    console.log('In Component ConfigureColumnWidth')\r\n    console.log(props)\r\n\r\n    function onWidthType(event) {\r\n        console.log('...In Width Type Update');\r\n        console.log(event);\r\n\r\n        switch (event) {\r\n            case 'Proportional':\r\n                {\r\n                    setMaxWidth(1)\r\n                    setMaxWidthUnits('fr')\r\n                    setMinWidth(20)\r\n                    setMinWidthUnits('ch')\r\n                    setFixedWidth(0)\r\n                    setFixedWidthUnits('px')\r\n                    setHideProportional(false)\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Auto':\r\n                {\r\n                    setMaxWidth(0)\r\n                    setMaxWidthUnits('fr')\r\n                    setMinWidth(0)\r\n                    setMinWidthUnits('ch')\r\n                    setFixedWidth(0)\r\n                    setFixedWidthUnits('px')\r\n                    setHideProportional(true)\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Fixed':\r\n                {\r\n                    setMaxWidth(0)\r\n                    setMaxWidthUnits('fr')\r\n                    setMinWidth(0)\r\n                    setMinWidthUnits('ch')\r\n                    setFixedWidth(40)\r\n                    setFixedWidthUnits('px')\r\n                    setHideProportional(true)\r\n                    setHideCustom(true)\r\n                    setHideFixed(false)\r\n                    break;\r\n                }\r\n\r\n            case 'Custom':\r\n                {\r\n                    setMaxWidth(40)\r\n                    setMaxWidthUnits('ch')\r\n                    setMinWidth(20)\r\n                    setMinWidthUnits('ch')\r\n                    setFixedWidth(0)\r\n                    setFixedWidthUnits('px')\r\n                    setHideProportional(true)\r\n                    setHideCustom(false)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n        }\r\n\r\n        setColumnWidthType(event)\r\n    }\r\n\r\n    function onMinimumWidth(event) {\r\n        console.log('...In MixWidth Update');\r\n        console.log(event);\r\n        setMinWidth(event.target.value)\r\n    }\r\n\r\n    function onMinimumWidthUnits(event) {\r\n        console.log('...In MixWidth Units Update');\r\n        console.log(event);\r\n        setMinWidthUnits(event)\r\n    }\r\n\r\n    function onMaximumWidth(event) {\r\n        console.log('...In Max Width Update');\r\n        console.log(event);\r\n        setMaxWidth(event.target.value)\r\n    }\r\n\r\n    function onMaximumWidthUnits(event) {\r\n        console.log('...In Max Width  Update');\r\n        console.log(event);\r\n        setMaxWidthUnits(event)\r\n    }\r\n\r\n    function onFixedWidth(event) {\r\n        console.log('...In Max Width Update');\r\n        console.log(event);\r\n        setFixedWidth(Number(event.target.value))\r\n    }\r\n\r\n    function onFixedWidthUnits(event) {\r\n        console.log('...In Max Width Units Update');\r\n        console.log(event);\r\n        setFixedWidthUnits(event)\r\n    }\r\n\r\n    function onTablet(checked) {\r\n        console.log('...In Tablet Update');\r\n        console.log(checked);\r\n\r\n        setDisableForTablet(checked)\r\n    }\r\n\r\n    function onPhone(checked) {\r\n        console.log('...In Phone Update');\r\n        console.log(checked);\r\n\r\n        setDisableForPhone(checked)\r\n    }\r\n\r\n    function onUpdate(event) {\r\n        // event.preventDefault()\r\n        console.log('COLUMN WIDTH UPDATED...')\r\n        console.log(event)\r\n        console.log('...Max Width = ' + maxWidth)\r\n\r\n        var updatedColumnAttributes =\r\n        {\r\n            columnWidthType: columnWidthType,\r\n            minWidth: minWidth,\r\n            minWidthUnits: minWidthUnits,\r\n            maxWidth: Number(maxWidth),\r\n            maxWidthUnits: maxWidthUnits,\r\n            fixedWidth: fixedWidth,\r\n            fixedWidthUnits: fixedWidthUnits,\r\n            disableForTablet: disableForTablet,\r\n            disableForPhone: disableForPhone,\r\n            isFixedLeftColumnGroup: false,\r\n            horizontalAlignment: \"none\"\r\n        }\r\n\r\n        console.log(updatedColumnAttributes)\r\n\r\n        openColumnWidth(false, updatedColumnAttributes)\r\n    }\r\n\r\n    console.log('RENDER PROPS');\r\n    console.log('...Disable Proportional Input = ' + hideProportional);\r\n    console.log('...Disable Fixed Input = ' + hideFixed);\r\n    console.log('...Disable Custom Input = ' + hideCustom);\r\n\r\n    return (\r\n        <>\r\n            {(openColumnWidth) && (\r\n                <Modal\r\n                    title=\"Configure Column Width\"\r\n                    onRequestClose={handleCancel}\r\n                    focusOnMount=\"firstContentElement\"\r\n                    isDismissible=\"false\"\r\n                    shouldCloseOnClickOutside=\"false\"\r\n                    size=\"large\">\r\n                    <p className=\"column-label\">\r\n                        For column {columnLabel}\r\n                    </p>\r\n\r\n                    <form\r\n                        // className=\"blocks-table__placeholder-form\"\r\n                        onSubmit={onUpdate}\r\n                        onMouseDown={stopProp}\r\n\r\n                    >\r\n                        <SelectControl\r\n                            label=\"Width Type\"\r\n                            value={columnWidthType}\r\n                            onChange={e => onWidthType(e)}\r\n                            options={[\r\n                                { value: \"Proportional\", label: \"Proportional\" },\r\n                                { value: \"Auto\", label: \"Automatic\" },\r\n                                { value: \"Fixed\", label: \"Fixed width\" },\r\n                                { value: \"Custom\", label: \"Custom\" }\r\n                            ]}\r\n                            __nextHasNoMarginBottom\r\n                        />\r\n\r\n                        <fieldset\r\n                            className={(hideProportional === true ? \" column-width--not-visible\" : \"\")}>\r\n                            <legend>Set Proportional Width</legend>\r\n                            <NumberControl\r\n                                className=\"column-width-value-input\"\r\n                                label=\"Number of portions\"\r\n                                labelPosition=\"side\"\r\n                                onBlur={e => onMaximumWidth(e)}\r\n                                value={maxWidth}\r\n                            />\r\n\r\n                            <span\r\n                                className=\"column-width-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"column-width-value-input\"\r\n                                    label=\"Minimum width\"\r\n                                    labelPosition=\"left\"\r\n                                    value={minWidth}\r\n                                    onBlur={e => onMinimumWidth(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"column-width-unit-input\"\r\n                                    labelPosition=\"left\"\r\n                                    label=\"Units\"\r\n                                    value={minWidthUnits}\r\n                                    onChange={e => onMinimumWidthUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"characters\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n                        </fieldset>\r\n\r\n                        <fieldset\r\n                            className={(hideFixed === true ? \"column-width--not-visible\" : \"\")}>\r\n                            <legend>Set Fixed Width</legend>\r\n\r\n                            <span\r\n                                className=\"column-width-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"column-width-input\"\r\n                                    label=\"Fixed width\"\r\n                                    labelPosition=\"left\"\r\n                                    value={fixedWidth}\r\n                                    onBlur={e => onFixedWidth(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"column-width-unit-input\"\r\n                                    label=\"Units\"\r\n                                    labelPosition=\"left\"\r\n                                    value={fixedWidthUnits}\r\n                                    onChange={e => onFixedWidthUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"font\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n                        </fieldset>\r\n\r\n                        <fieldset\r\n                            className={(hideCustom === true ? \"column-width--not-visible\" : \"\")}>\r\n                            <legend>Set Custom Width</legend>\r\n                            <span\r\n                                className=\"column-width-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"column-width-input\"\r\n                                    label=\"Minimum width\"\r\n                                    labelPosition=\"left\"\r\n                                    value={minWidth}\r\n                                    onBlur={e => onMinimumWidth(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"column-width-unit-input\"\r\n                                    labelPosition=\"left\"\r\n                                    label=\"Units\"\r\n                                    value={minWidthUnits}\r\n                                    onChange={e => onMinimumWidthUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"characters\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n\r\n                            <span\r\n                                className=\"column-width-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"column-width-input\"\r\n                                    label=\"Maximum width\"\r\n                                    labelPosition=\"left\"\r\n                                    value={maxWidth}\r\n                                    onBlur={e => onMaximumWidth(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"column-width-unit-input\"\r\n                                    labelPosition=\"left\"\r\n                                    label=\"Units\"\r\n                                    value={maxWidthUnits}\r\n                                    onChange={e => onMaximumWidthUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"characters\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n                        </fieldset>\r\n\r\n                        {enableProFeatures && (\r\n                            <>\r\n                                <CheckboxControl\r\n                                    label=\"Hide for tablet\"\r\n                                    checked={disableForTablet}\r\n                                    onChange={onTablet}\r\n                                />\r\n                                <CheckboxControl\r\n                                    label=\"Hide for phone\"\r\n                                    checked={disableForPhone}\r\n                                    onChange={onPhone}\r\n                                />\r\n                            </>\r\n                        )}\r\n                        <span>\r\n                            <Button variant=\"secondary\" onClick={handleCancel}>\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </span>\r\n                    </form>\r\n                </Modal >\r\n            )\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport { ConfigureColumnWidth };","import { useEffect, useState } from \"@wordpress/element\"\r\n/**\r\n * WordPress dependencies\r\n */\r\n\r\nimport {\r\n    Modal,\r\n    SelectControl,\r\n    CheckboxControl,\r\n    TabbableContainer,\r\n    Button,\r\n    __experimentalInputControl as InputControl,\r\n    __experimentalNumberControl as NumberControl\r\n} from '@wordpress/components';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport './style.scss';\r\n\r\nfunction ConfigureRowHeight(props) {\r\n\r\n    const { openRowHeight,\r\n        rowId,\r\n        rowLabel,\r\n        rowAttributes\r\n    } = props;\r\n    //    const [closePage, setClosePage] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        switch (rowAttributes.rowHeightType) {\r\n            case 'Auto':\r\n                {\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Fixed':\r\n                {\r\n                    setHideCustom(true)\r\n                    setHideFixed(false)\r\n                    break;\r\n                }\r\n\r\n            case 'Custom':\r\n                {\r\n                    setHideCustom(false)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n        }\r\n\r\n        setRowHeightType(rowAttributes.rowHeightType)\r\n        setMinHeight(rowAttributes.minHeight)\r\n        setMinHeightUnits(rowAttributes.minHeightUnits)\r\n        setMaxHeight(rowAttributes.maxHeight)\r\n        setMaxHeightUnits(rowAttributes.maxHeightUnits)\r\n        setFixedHeight(rowAttributes.fixedHeight)\r\n        setFixedHeightUnits(rowAttributes.fixedHeightUnits)\r\n    }, [rowAttributes])\r\n\r\n    function stopProp(event) {\r\n        event.stopPropagation()\r\n    }\r\n\r\n    function handleCancel(event) {\r\n        openRowHeight(false)\r\n    }\r\n\r\n    const [rowHeightType, setRowHeightType] = useState();\r\n    const [hideCustom, setHideCustom] = useState(true);\r\n    const [hideFixed, setHideFixed] = useState(true);\r\n    const [minHeight, setMinHeight] = useState(0);\r\n    const [minHeightUnits, setMinHeightUnits] = useState();\r\n    const [maxHeight, setMaxHeight] = useState(1);\r\n    const [maxHeightUnits, setMaxHeightUnits] = useState();\r\n    const [fixedHeight, setFixedHeight] = useState(0);\r\n    const [fixedHeightUnits, setFixedHeightUnits] = useState();\r\n\r\n    console.log('In Component ConfigureRowHeight')\r\n    console.log(props)\r\n\r\n    function onHeightType(event) {\r\n        console.log('...In Height Type Update');\r\n        console.log(event);\r\n\r\n        switch (event) {\r\n            case 'Auto':\r\n                {\r\n                    setMaxHeight(0)\r\n                    setMaxHeightUnits('fr')\r\n                    setMinHeight(0)\r\n                    setMinHeightUnits('ch')\r\n                    setFixedHeight(0)\r\n                    setFixedHeightUnits('px')\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Fixed':\r\n                {\r\n                    setMaxHeight(0)\r\n                    setMaxHeightUnits('fr')\r\n                    setMinHeight(0)\r\n                    setMinHeightUnits('ch')\r\n                    setFixedHeight(40)\r\n                    setFixedHeightUnits('px')\r\n                    setHideCustom(true)\r\n                    setHideFixed(false)\r\n                    break;\r\n                }\r\n\r\n            case 'Custom':\r\n                {\r\n                    setMaxHeight(40)\r\n                    setMaxHeightUnits('ch')\r\n                    setMinHeight(20)\r\n                    setMinHeightUnits('ch')\r\n                    setFixedHeight(0)\r\n                    setFixedHeightUnits('px')\r\n                    setHideCustom(false)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n        }\r\n\r\n        setRowHeightType(event)\r\n    }\r\n\r\n    function onMinimumHeight(event) {\r\n        console.log('...In MixHeight Update');\r\n        console.log(event);\r\n        setMinHeight(event.target.value)\r\n    }\r\n\r\n    function onMinimumHeightUnits(event) {\r\n        console.log('...In MixHeight Units Update');\r\n        console.log(event);\r\n        setMinHeightUnits(event)\r\n    }\r\n\r\n    function onMaximumHeight(event) {\r\n        console.log('...In Max Height Update');\r\n        console.log(event);\r\n        setMaxHeight(event.target.value)\r\n    }\r\n\r\n    function onMaximumHeightUnits(event) {\r\n        console.log('...In Max Height Update');\r\n        console.log(event);\r\n        setMaxHeightUnits(event)\r\n    }\r\n\r\n    function onFixedHeight(event) {\r\n        console.log('...In Max Height Update');\r\n        console.log(event);\r\n        setFixedHeight(Number(event.target.value))\r\n    }\r\n\r\n    function onFixedHeightUnits(event) {\r\n        console.log('...In Max Height Units Update');\r\n        console.log(event);\r\n        setFixedHeightUnits(event)\r\n    }\r\n\r\n    function onUpdate(event) {\r\n        // event.preventDefault()\r\n        console.log('ROW HEIGHT  UPDATED...')\r\n        console.log(event)\r\n        console.log('...Max Height = ' + maxHeight)\r\n\r\n        var updatedRowAttributes =\r\n        {\r\n            rowHeightType: rowHeightType,\r\n            minHeight: minHeight,\r\n            minHeightUnits: minHeightUnits,\r\n            maxHeight: Number(maxHeight),\r\n            maxHeightUnits: maxHeightUnits,\r\n            fixedHeight: fixedHeight,\r\n            fixedHeightUnits: fixedHeightUnits,\r\n            isFixedLeftRowGroup: false,\r\n            horizontalAlignment: \"none\"\r\n        }\r\n\r\n        console.log(updatedRowAttributes)\r\n\r\n        openRowHeight(false, updatedRowAttributes)\r\n    }\r\n\r\n    console.log('RENDER PROPS');\r\n    console.log('...Disable Fixed Input = ' + hideFixed);\r\n    console.log('...Disable Custom Input = ' + hideCustom);\r\n\r\n    return (\r\n        <>\r\n            {(openRowHeight) && (\r\n                <Modal\r\n                    title=\"Configure Row Height\"\r\n                    onRequestClose={handleCancel}\r\n                    focusOnMount=\"firstContentElement\"\r\n                    isDismissible=\"false\"\r\n                    shouldCloseOnClickOutside=\"false\"\r\n                    size=\"large\">\r\n                    <p className=\"row-label\">\r\n                        For row {rowLabel}\r\n                    </p>\r\n\r\n                    <form\r\n                        // className=\"blocks-table__placeholder-form\"\r\n                        onSubmit={onUpdate}\r\n                        onMouseDown={stopProp}\r\n\r\n                    >\r\n                        <SelectControl\r\n                            label=\"Height Type\"\r\n                            value={rowHeightType}\r\n                            onChange={e => onHeightType(e)}\r\n                            options={[\r\n                                { value: \"Auto\", label: \"Automatic\" },\r\n                                { value: \"Fixed\", label: \"Fixed height\" },\r\n                                { value: \"Custom\", label: \"Custom\" }\r\n                            ]}\r\n                            __nextHasNoMarginBottom\r\n                        />\r\n\r\n                        <fieldset\r\n                            className={(hideFixed === true ? \"row-height--not-visible\" : \"\")}>\r\n                            <legend>Set Fixed Height</legend>\r\n\r\n                            <span\r\n                                className=\"row-height-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"row-height-input\"\r\n                                    label=\"Fixed height\"\r\n                                    labelPosition=\"left\"\r\n                                    value={fixedHeight}\r\n                                    onBlur={e => onFixedHeight(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"row-height-unit-input\"\r\n                                    label=\"Units\"\r\n                                    labelPosition=\"left\"\r\n                                    value={fixedHeightUnits}\r\n                                    onChange={e => onFixedHeightUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"font\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n                        </fieldset>\r\n\r\n                        <fieldset\r\n                            className={(hideCustom === true ? \"row-height--not-visible\" : \"\")}>\r\n                            <legend>Set Custom Height</legend>\r\n                            <span\r\n                                className=\"row-height-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"row-height-input\"\r\n                                    label=\"Minimum height\"\r\n                                    labelPosition=\"left\"\r\n                                    value={minHeight}\r\n                                    onBlur={e => onMinimumHeight(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"row-height-unit-input\"\r\n                                    labelPosition=\"left\"\r\n                                    label=\"Units\"\r\n                                    value={minHeightUnits}\r\n                                    onChange={e => onMinimumHeightUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"characters\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n\r\n                            <span\r\n                                className=\"row-height-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"row-height-input\"\r\n                                    label=\"Maximum height\"\r\n                                    labelPosition=\"left\"\r\n                                    value={maxHeight}\r\n                                    onBlur={e => onMaximumHeight(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"row-height-unit-input\"\r\n                                    labelPosition=\"left\"\r\n                                    label=\"Units\"\r\n                                    value={maxHeightUnits}\r\n                                    onChange={e => onMaximumHeightUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"characters\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n                        </fieldset>\r\n\r\n                        <span>\r\n                            <Button variant=\"secondary\" onClick={handleCancel}>\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </span>\r\n                    </form>\r\n                </Modal >\r\n            )\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport { ConfigureRowHeight };","export { ColumnMenu } from './column-dropdown-menu';\r\nexport { ConfigureColumnWidth } from './configure-column-width';\r\n\r\nexport { RowMenu } from './row-dropdown-menu';\r\nexport { ConfigureRowHeight } from './configure-row-height';\r\n","import { useEffect, useState } from \"@wordpress/element\"\r\nimport {\r\n    DropdownMenu,\r\n    MenuGroup,\r\n    MenuItem\r\n} from '@wordpress/components';\r\nimport {\r\n    AlignmentToolbar\r\n\r\n} from '@wordpress/block-editor';\r\nimport {\r\n    blockTable as icon,\r\n    moreVertical,\r\n    more,\r\n    settings,\r\n    arrowLeft,\r\n    arrowRight,\r\n    arrowUp,\r\n    arrowDown,\r\n    tableRowBefore,\r\n    tableRowAfter,\r\n    tableRowDelete,\r\n    trash\r\n} from '@wordpress/icons';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as tableStore } from \"../../data\"\r\nimport { ConfigureRowHeight } from '../configure-row-height';\r\nimport '../../editor.scss';\r\n\r\n\r\nfunction RowMenu(props) {\r\n\r\n    const [openModalRowHeight, setOpenModalRowHeight] = useState(false);\r\n    const [rowAttributes, setRowAttributes] = useState({})\r\n\r\n    const {\r\n        tableId,\r\n        rowId,\r\n        rowLabel,\r\n        updatedRow\r\n    } = props\r\n\r\n    useEffect(() => {\r\n        setRowAttributes(props.rowAttributes)\r\n    }, [props.rowAttributes])\r\n\r\n    console.log('In Component RowMenu')\r\n    console.log(props)\r\n\r\n    function onInsertRow(event, rowId) {\r\n        console.log('    ...onInsertRow');\r\n        console.log(event);\r\n        console.log('rowId = ' + rowId)\r\n        updatedRow(event, 'insert', tableId, rowId, '')\r\n    }\r\n\r\n    function onDeleteRow(event, rowId) {\r\n        console.log('    ...onDeleteRow');\r\n        console.log(event);\r\n        console.log('rowId = ' + rowId)\r\n        updatedRow(event, 'delete', tableId, rowId, '')\r\n    }\r\n\r\n    function onUpdateRowHeight(event, updatedRowAttributes) {\r\n        console.log('    ...onUpdateRowHeight');\r\n        console.log(event);\r\n        console.log(updatedRowAttributes);\r\n        if (openModalRowHeight) {\r\n            // event.preventDefault()\r\n            setOpenModalRowHeight(false)\r\n            updatedRow(event, 'attributes', tableId, rowId, updatedRowAttributes)\r\n        } else {\r\n            event.preventDefault()\r\n            setOpenModalRowHeight(true)\r\n        }\r\n    }\r\n\r\n    console.log('Open row height page = ' + openModalRowHeight)\r\n\r\n    return (\r\n        <>\r\n            <DropdownMenu\r\n                // style={{ display: \"none\" }}\r\n                icon={moreVertical}\r\n                defaultOpen=\"true\"\r\n                label={rowLabel}>\r\n                {({ onClose }) => (\r\n                    <>\r\n                        <MenuGroup>\r\n                            <MenuItem icon={settings} onClick={onUpdateRowHeight}>\r\n                                Update Row Height\r\n                            </MenuItem>\r\n                        </MenuGroup>\r\n                        <MenuGroup>\r\n                            <MenuItem icon={tableRowBefore} onClick={e => onInsertRow(e, rowId)}>\r\n                                Insert Row\r\n                            </MenuItem>\r\n                            <MenuItem icon={tableRowDelete} onClick={e => onDeleteRow(e, rowId)}>\r\n                                Delete Row\r\n                            </MenuItem>\r\n                        </MenuGroup>\r\n                    </>\r\n                )}\r\n            </DropdownMenu>\r\n\r\n            {openModalRowHeight && (\r\n                <ConfigureRowHeight\r\n                    rowId={rowId}\r\n                    rowLabel={rowLabel}\r\n                    rowAttributes={rowAttributes}\r\n                    openRowHeight={onUpdateRowHeight}>\r\n                </ConfigureRowHeight>\r\n            )}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport { RowMenu };","const TYPES = {\r\n    CREATE_TABLE: \"CREATE_TABLE\",\r\n    INSERT_COLUMN: \"INSERT_COLUMN\",\r\n    INSERT_ROW: \"INSERT_ROW\",\r\n    DELETE_TABLE: \"DELETE_TABLE\",\r\n    DELETE_COLUMN: \"DELETE_COLUMN\",\r\n    DELETE_ROW: \"DELETE_ROW\",\r\n    CHANGE_TABLE_ID: \"CHANGE_TABLE_ID\",\r\n    UPDATE_TABLE_PROP: \"UPDATE_TABLE_PROP\",\r\n    REMOVE_TABLE_PROP: \"REMOVE_TABLE_PROP\",\r\n    UPDATE_ROW: \"UPDATE_ROW\",\r\n    UPDATE_COLUMN: \"UPDATE_COLUMN\",\r\n    UPDATE_CELL: \"UPDATE_CELL\",\r\n    RECEIVE_HYDRATE: \"RECEIVE_HYDRATE\",\r\n    RECEIVE_HYDRATE_TEST: \"RECEIVE_HYDRATE_TEST\",\r\n    PERSIST: \"PERSIST\",\r\n    PROCESS_BORDERS: \"PROCESS_BORDERS\"\r\n};\r\n\r\nexport default TYPES;","import { addEntities } from '@wordpress/core-data';\nimport { addQueryArgs } from \"@wordpress/url\";\nimport { apiFetch } from \"@wordpress/data-controls\";\nimport { store as coreStore } from \"@wordpress/core-data\"\nimport { store as blockEditorStore } from \"@wordpress/block-editor\"\nimport { loadTableEntityConfig } from './table-entity';\nimport TYPES from \"./action-types.js\";\n\nconst {\n\tCREATE_TABLE,\n\tINSERT_COLUMN,\n\tINSERT_ROW,\n\tDELETE_TABLE,\n\tDELETE_COLUMN,\n\tDELETE_ROW,\n\tCHANGE_TABLE_ID,\n\tUPDATE_TABLE_PROP,\n\tREMOVE_TABLE_PROP,\n\tUPDATE_ROW,\n\tUPDATE_COLUMN,\n\tUPDATE_CELL,\n\tRECEIVE_HYDRATE,\n\tRECEIVE_HYDRATE_TEST,\n\tPERSIST,\n\tPROCESS_BORDERS\n} = TYPES;\n\n// loadTableEntityConfig()\n\n/**\n * @example wp.data.dispatch( 'mfw/table').refreshPost\n * @example wp.data.dispatch( 'mfw/table' ).table\n *\n *\n *\n */\n\nexport function receiveNewTable(table) {\n\tconsole.log('Receiving New Table')\n\tconsole.log(table)\n\tconsole.log(table.table.table_id)\n\n\treturn {\n\t\ttype: CREATE_TABLE,\n\t\ttableId: table.table.table_id,\n\t\t...table\n\t}\n}\n\nexport function receiveTable(table_id, block_table_ref, table_status, post_id, table_name, attributes, classes, rows, columns, cells) {\n\tconsole.log('            ...Action - In receiveTable')\n\t//console.log(table);\n\tconsole.log('                - id: ' + table_id)\n\t//console.log('                - table: ' + JSON.stringify(table));\n\t//console.log('                - tableId ' + tableId);\n\tconsole.log('Block Ref = ' + block_table_ref)\n\tconsole.log('Status = ' + table_status)\n\n\treturn {\n\t\ttype: RECEIVE_HYDRATE,\n\t\ttableId: table_id,\n\t\ttable: {\n\t\t\ttable_id,\n\t\t\tblock_table_ref,\n\t\t\ttable_status,\n\t\t\tpost_id,\n\t\t\ttable_name,\n\t\t\tattributes,\n\t\t\tclasses,\n\t\t\trows,\n\t\t\tcolumns,\n\t\t\tcells\n\t\t}\n\t}\n}\n\nexport const createTableEntity =\n\t() =>\n\t\tasync ({ select, dispatch, registry }) => {\n\n\t\t\tconst { table_id, block_table_ref, post_id, table_name, attributes, classes, rows, columns, cells } = select.getTable('0', 'Saved');\n\t\t\tconst testTable = select.getTable('0', false);\n\t\t\tconsole.log(testTable);\n\t\t\tconst newTable = {\n\t\t\t\ttitle: table_name,\n\t\t\t\theader: {\n\t\t\t\t\tid: table_id,\n\t\t\t\t\tblock_table_ref: block_table_ref,\n\t\t\t\t\tstatus: 'new',\n\t\t\t\t\tpost_id: post_id,\n\t\t\t\t\ttable_name: table_name,\n\t\t\t\t\tattributes: attributes,\n\t\t\t\t\tclasses: classes\n\t\t\t\t},\n\t\t\t\trows: [...rows],\n\t\t\t\tcolumns: [...columns],\n\t\t\t\tcells: [...cells]\n\t\t\t}\n\n\t\t\tconsole.log('CREATING TABLE ENTITY')\n\t\t\tconsole.log(newTable)\n\n\t\t\ttry {\n\t\t\t\tconst tableEntity = await registry\n\t\t\t\t\t.dispatch(coreStore)\n\t\t\t\t\t.saveEntityRecord(\n\t\t\t\t\t\t'dynamic-tables',\n\t\t\t\t\t\t'table',\n\t\t\t\t\t\tnewTable\n\t\t\t\t\t);\n\n\t\t\t\tdispatch.assignTableId(tableEntity.id);\n\n\t\t\t\treturn tableEntity.id\n\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('Error in createTableEntity -  Table ID - ' + table_id + ', block table ref = ' + block_table_ref + ', Post Id = ' + post_id);\n\t\t\t\talert('            ...Create Table Entity - async error - ' + error);\n\t\t\t}\n\t\t};\n\nexport const saveTableEntity =\n\t(tableId) =>\n\t\t({ registry }) => {\n\n\t\t\tconsole.log('SAVING TABLE ENTITY')\n\n\t\t\ttry {\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch(coreStore)\n\t\t\t\t\t.saveEditedEntityRecord(\n\t\t\t\t\t\t'dynamic-tables',\n\t\t\t\t\t\t'table',\n\t\t\t\t\t\ttableId\n\t\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('Error in saveTableEntity - Table ID - ' + tableId);\n\t\t\t\talert('            ...Save Table Entity - async error - ' + error);\n\t\t\t}\n\t\t};\n\nexport const updateTableEntity =\n\t(tableId, overrideTableStatus = '') =>\n\t\t({ select, registry }) => {\n\n\t\t\tconst testTable = select.getTable(tableId, false)\n\t\t\tconsole.log(testTable)\n\t\t\tconst {\n\t\t\t\ttable_id,\n\t\t\t\tblock_table_ref,\n\t\t\t\ttable_status,\n\t\t\t\tpost_id,\n\t\t\t\ttable_name,\n\t\t\t\tattributes,\n\t\t\t\tclasses,\n\t\t\t\trows,\n\t\t\t\tcolumns,\n\t\t\t\tcells\n\t\t\t} = select.getTable(tableId, false)\n\n\t\t\t// Remove border row if it exists\n\t\t\tvar filteredRows = rows\n\t\t\t\t.filter((row) =>\n\t\t\t\t\trow.row_id !== '0'\n\t\t\t\t)\n\n\t\t\t// Remove border column if it exists\n\t\t\tvar filteredColumns = columns\n\t\t\t\t.filter((column) =>\n\t\t\t\t\tcolumn.column_id !== '0'\n\t\t\t\t)\n\n\t\t\t// Remove border cells if they exists\n\t\t\tvar filteredCells = cells\n\t\t\t\t.filter((cell) =>\n\t\t\t\t\tcell.row_id !== '0' && cell.column_id !== '0'\n\t\t\t\t)\n\n\t\t\t// Remove cell_id from cells.  They don't go back to the webservice\n\t\t\tvar transformedCells = filteredCells.map(({ table_id, column_id, row_id, attributes, classes, content }) =>\n\t\t\t\t({ table_id, column_id, row_id, attributes, classes, content }))\n\n\t\t\tconst tableStatus = (overrideTableStatus, table_status) => {\n\t\t\t\tif (overrideTableStatus) {\n\t\t\t\t\treturn overrideTableStatus\n\t\t\t\t}\n\t\t\t\treturn table_status\n\t\t\t}\n\n\t\t\tconst updatedTable = {\n\t\t\t\tid: tableId,\n\t\t\t\ttitle: table_name,\n\t\t\t\theader: {\n\t\t\t\t\tid: table_id,\n\t\t\t\t\tblock_table_ref: block_table_ref,\n\t\t\t\t\tstatus: tableStatus(overrideTableStatus, table_status),\n\t\t\t\t\tpost_id: post_id,\n\t\t\t\t\ttable_name: table_name,\n\t\t\t\t\tattributes: attributes,\n\t\t\t\t\tclasses: classes\n\t\t\t\t},\n\t\t\t\trows: [...filteredRows],\n\t\t\t\tcolumns: [...filteredColumns],\n\t\t\t\tcells: [...transformedCells]\n\t\t\t}\n\n\t\t\tconsole.log('UPDATING TABLE ENTITY')\n\t\t\tconsole.log(updatedTable)\n\n\n\t\t\t/**\n\t\t\t * Options: isCached: Bool\n\t\t\t *          undoIgnore: Bool\n\t\t\t */\n\t\t\ttry {\n\t\t\t\tregistry\n\t\t\t\t\t.dispatch(coreStore)\n\t\t\t\t\t.editEntityRecord(\n\t\t\t\t\t\t'dynamic-tables',\n\t\t\t\t\t\t'table',\n\t\t\t\t\t\ttable_id,\n\t\t\t\t\t\tupdatedTable\n\t\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('Error in updateTableEntity - Table ID - ' + tableId);\n\t\t\t\talert('            ...Update Table Entity - async error - ' + error);\n\t\t\t}\n\t\t};\n\nexport const deleteTableEntity =\n\t(tableId) =>\n\t\tasync ({ select, dispatch, registry }) => {\n\t\t\tconsole.log('In Action deleteTableEntity')\n\n\t\t\ttry {\n\t\t\t\tconst deletedTableEntity = await registry\n\t\t\t\t\t.dispatch(coreStore)\n\t\t\t\t\t.deleteEntityRecord(\n\t\t\t\t\t\t'dynamic-tables',\n\t\t\t\t\t\t'table',\n\t\t\t\t\t\ttableId\n\t\t\t\t\t);\n\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: DELETE_TABLE,\n\t\t\t\t\ttableId\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('Error in deleteTableEntity - Table ID - ' + tableId);\n\t\t\t\talert('            ...Resolver - async error - ' + error);\n\t\t\t}\n\t\t\tconsole.log('            Resolver - async completed');\n\t\t};\n\nexport const processDeletedTables =\n\t(deletedTables) =>\n\t\t({ dispatch, registry }) => {\n\t\t\tconsole.log('In Action processDeletedTables')\n\t\t\tObject.keys(deletedTables).forEach(key => {\n\t\t\t\tconst deletedTableId = deletedTables[key].table_id\n\t\t\t\tconsole.log(deletedTableId)\n\t\t\t\tdispatch.deleteTableEntity(deletedTables[key].table_id)\n\t\t\t})\n\t\t}\n\nexport const processUnmountedTables =\n\t(unmountedTables) =>\n\t\t({ dispatch, registry }) => {\n\t\t\tconsole.log('In Action processDeletedTables')\n\t\t\tObject.keys(unmountedTables).forEach(key => {\n\t\t\t\tconst unmountedTableBlockId = unmountedTables[key].unmounted_blockid\n\t\t\t\tconst tableBlock = registry.select(blockEditorStore).getBlock(unmountedTableBlockId)\n\t\t\t\tconsole.log(tableBlock)\n\t\t\t\tif (tableBlock) {\n\t\t\t\t\tdispatch.removeTableProp(unmountedTables[key].table_id, 'unmounted_blockid')\n\t\t\t\t\tdispatch.updateTableProp(unmountedTables[key].table_id, 'table_status');\n\t\t\t\t} else {\n\t\t\t\t\tdispatch.removeTableProp(unmountedTables[key].table_id, 'unmounted_blockid')\n\t\t\t\t\tdispatch.updateTableProp(unmountedTables[key].table_id, 'table_status', 'deleted');\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\nexport const addColumn = (tableId, columnId, newColumn, columnCells) => {\n\treturn {\n\t\ttype: INSERT_COLUMN,\n\t\ttableId,\n\t\tcolumnId,\n\t\tnewColumn,\n\t\tcolumnCells\n\t}\n}\n\nexport const addRow = (tableId, rowId, newRow, rowCells) => {\n\treturn {\n\t\ttype: INSERT_ROW,\n\t\ttableId,\n\t\trowId,\n\t\tnewRow,\n\t\trowCells\n\t}\n}\n\nexport const removeColumn = (tableId, columnId) => {\n\treturn {\n\t\ttype: DELETE_COLUMN,\n\t\ttableId,\n\t\tcolumnId\n\t}\n\n}\n\nexport const removeRow = (tableId, rowId) => {\n\treturn {\n\t\ttype: DELETE_ROW,\n\t\ttableId,\n\t\trowId\n\t}\n}\n\nexport const assignTableId = (tableId) => {\n\tconsole.log('In Action updateTableProp')\n\treturn {\n\t\ttype: CHANGE_TABLE_ID,\n\t\ttableId: '0',\n\t\tnewTableId: String(tableId),\n\t}\n}\n\nexport const updateTableProp = (tableId, attribute, value) => {\n\tconsole.log('In Action updateTableProp')\n\treturn {\n\t\ttype: UPDATE_TABLE_PROP,\n\t\ttableId: tableId,\n\t\tattribute,\n\t\tvalue\n\t}\n}\n\nexport const removeTableProp = (tableId, attribute) => {\n\tconsole.log('In Action removeTableProp')\n\treturn {\n\t\ttype: REMOVE_TABLE_PROP,\n\t\ttableId: tableId,\n\t\tattribute\n\t}\n}\n\nexport const updateRow = (tableId, rowId, attribute, value) => {\n\n\tconsole.log('In Action updateRow')\n\treturn {\n\t\ttype: UPDATE_ROW,\n\t\ttableId,\n\t\trowId,\n\t\tattribute,\n\t\tvalue\n\t}\n}\n\nexport const updateColumn = (tableId, columnId, attribute, value) => {\n\n\tconsole.log('In Action updateColumn')\n\treturn {\n\t\ttype: UPDATE_COLUMN,\n\t\ttableId,\n\t\tcolumnId,\n\t\tattribute,\n\t\tvalue\n\t}\n}\n\nexport const updateCell = (tableId, cellId, attribute, value) => {\n\tconsole.log('In Action updateCell')\n\treturn {\n\t\ttype: UPDATE_CELL,\n\t\ttableId,\n\t\tcellId,\n\t\tattribute,\n\t\tvalue\n\t}\n}\n\nexport const updateTableBorder =\n\t(\n\t\ttableId,\n\t\ttableRows,\n\t\ttableColumns,\n\t\ttableCells\n\t) =>\n\n\t\tasync ({ dispatch }) => {\n\t\t\tconsole.log('Updating Border')\n\n\t\t\tawait dispatch({\n\t\t\t\ttype: PROCESS_BORDERS,\n\t\t\t\ttableId: tableId,\n\t\t\t\trows: tableRows,\n\t\t\t\tcolumns: tableColumns,\n\t\t\t\tcells: tableCells\n\t\t\t})\n\t\t}\n\n\n// Hold in case needed\nexport function receiveTableTest(tableEntity) {\n\tconsole.log('            ...Action - In receiveTableTest')\n\t//console.log(table);\n\t// console.log('                - id: ' + table_id)\n\t//console.log('                - table: ' + JSON.stringify(table));\n\t//console.log('                - tableId ' + tableId);\n\n\treturn {\n\t\ttype: RECEIVE_HYDRATE_TEST,\n\t\ttableEntity\n\t\t// tableTest: {\n\t\t//     testTable\n\t\t// }\n\t}\n}\n","const STORE_NAME = \"dynamic-tables/table\";\r\nexport default STORE_NAME;","import { createReduxStore, register } from '@wordpress/data';\r\n\r\nimport reducer from \"./reducer\";\r\nimport * as selectors from \"./selectors\";\r\nimport * as actions from \"./actions\";\r\nimport * as resolvers from \"./resolvers\";\r\nimport STORE_NAME from \"./constants\";\r\n\r\n// const storeConfig = () => ({\r\n//     selectors,\r\n//     actions,\r\n//     reducer,\r\n//     resolvers\r\n// });\r\n\r\n// export const store = createReduxStore(STORE_NAME, storeConfig());\r\nexport const store = createReduxStore(STORE_NAME, {\r\n    reducer,\r\n    selectors,\r\n    actions,\r\n    resolvers\r\n});\r\n\r\nregister(store);\r\n\r\n// Register store after unlocking private selectors to allow resolvers to use them.\r\n","import TYPES from \"./action-types\";\nimport {\n\tnumberToLetter,\n\tupdateArray,\n\ttableSort\n} from '../utils';\n\nconst {\n\tCREATE_TABLE,\n\tINSERT_COLUMN,\n\tINSERT_ROW,\n\tDELETE_TABLE,\n\tDELETE_COLUMN,\n\tDELETE_ROW,\n\tCHANGE_TABLE_ID,\n\tUPDATE_TABLE_PROP,\n\tREMOVE_TABLE_PROP,\n\tUPDATE_ROW,\n\tUPDATE_COLUMN,\n\tUPDATE_CELL,\n\tRECEIVE_HYDRATE,\n\tRECEIVE_HYDRATE_TEST,\n\tPERSIST,\n\tPROCESS_BORDERS\n} = TYPES;\n\nconst table = (\n\tstate = {\n\t\ttable: {}\n\t},\n\n\taction) => {\n\n\tconsole.log('      Reducer. state: ' + JSON.stringify(state));\n\tconsole.log('      Reducer. type: ' + action.type);\n\n\tswitch (action.type) {\n\t\tcase CREATE_TABLE:\n\t\t\tconsole.log('In Reducer CREATE_TABLE')\n\t\t\tconsole.log(action.table)\n\n\t\t\treturn {\n\t\t\t\ttable: {\n\t\t\t\t\t...action.table\n\t\t\t\t}\n\t\t\t}\n\n\t\tcase CHANGE_TABLE_ID:\n\t\t\tconsole.log('In Reducer CHANGE_TABLE_ID')\n\t\t\tconst newTableIdState = { ...state }\n\t\t\tvar rowsWithNewId = []\n\t\t\tvar columnsWithNewId = []\n\t\t\tvar cellsWithNewId = []\n\n\t\t\tconsole.log(newTableIdState.rows)\n\t\t\tnewTableIdState.rows.forEach((row) => {\n\t\t\t\tconsole.log(row)\n\t\t\t\tlet newRow = {\n\t\t\t\t\t...row,\n\t\t\t\t\ttable_id: action.newTableId\n\t\t\t\t}\n\t\t\t\trowsWithNewId.push(newRow)\n\t\t\t})\n\n\t\t\tnewTableIdState.columns.forEach((column) => {\n\t\t\t\tlet newColumn = {\n\t\t\t\t\t...column,\n\t\t\t\t\ttable_id: action.newTableId\n\t\t\t\t}\n\t\t\t\tcolumnsWithNewId.push(newColumn)\n\t\t\t})\n\n\t\t\tnewTableIdState.cells.forEach((cell) => {\n\t\t\t\tlet newCell = {\n\t\t\t\t\t...cell,\n\t\t\t\t\ttable_id: action.newTableId\n\t\t\t\t}\n\t\t\t\tcellsWithNewId.push(newCell)\n\t\t\t})\n\n\t\t\tconst updatedTableId = {\n\t\t\t\t...state,\n\t\t\t\ttable_id: action.newTableId,\n\t\t\t\trows: [...rowsWithNewId],\n\t\t\t\tcolumns: [...columnsWithNewId],\n\t\t\t\tcells: [...cellsWithNewId]\n\t\t\t}\n\t\t\tconsole.log(updatedTableId)\n\n\t\t\treturn {\n\t\t\t\ttable: updatedTableId\n\t\t\t}\n\n\t\tcase UPDATE_TABLE_PROP:\n\t\t\tconsole.log('In Reducer UPDATE_TABLE_PROP')\n\n\t\t\tconst updatedTable = {\n\t\t\t\t...state,\n\t\t\t\t[action.attribute]: action.value\n\t\t\t}\n\t\t\tconsole.log(updatedTable)\n\n\t\t\treturn {\n\t\t\t\ttable: updatedTable\n\t\t\t}\n\n\t\tcase REMOVE_TABLE_PROP:\n\t\t\tconst tablePropRemoved = { ...state }\n\t\t\t// const removedAttribute = action.attribute\n\t\t\tdelete tablePropRemoved[action.attribute]\n\n\t\t\treturn {\n\t\t\t\ttable: tablePropRemoved\n\t\t\t}\n\n\t\tcase INSERT_COLUMN:\n\t\t\tconsole.log('In Reducer INSERT_COLUMN')\n\t\t\tlet insertColumnState = { ...state }\n\n\t\t\t/**\n\t\t\t * Insert new column and update existing column_id's\n\t\t\t */\n\t\t\tvar columnsWithNewId = []\n\t\t\tinsertColumnState.columns.forEach((column) => {\n\t\t\t\tif (Number(column.column_id) < Number(action.columnId)) {\n\t\t\t\t\tcolumnsWithNewId.push(column)\n\t\t\t\t} else {\n\t\t\t\t\tlet newColumn = {\n\t\t\t\t\t\ttable_id: column.table_id,\n\t\t\t\t\t\tcolumn_id: String(Number(column.column_id) + 1),\n\t\t\t\t\t\tcolumn_name: column.column_name,\n\t\t\t\t\t\tattributes: column.attributes,\n\t\t\t\t\t\tclasses: column.classes\n\t\t\t\t\t}\n\t\t\t\t\tcolumnsWithNewId.push(newColumn)\n\t\t\t\t}\n\t\t\t})\n\t\t\tcolumnsWithNewId.push(action.newColumn)\n\t\t\tvar sortedColumns = tableSort('columns', columnsWithNewId)\n\n\t\t\t/**\n\t\t\t * Insert new cells and update existing column_id's\n\t\t\t */\n\t\t\tvar cellsWithNewId = []\n\t\t\tinsertColumnState.cells.forEach((cell) => {\n\t\t\t\tif (cell.column_id < action.columnId) {\n\t\t\t\t\tcellsWithNewId.push(cell)\n\t\t\t\t} else {\n\n\t\t\t\t\tlet newColumnId = String(Number(cell.column_id) + 1)\n\t\t\t\t\tlet columnLetter = numberToLetter(newColumnId)\n\t\t\t\t\tlet cellContent = Number(cell.row_id) == 0 ? columnLetter : cell.content\n\t\t\t\t\tlet newCell = {\n\t\t\t\t\t\ttable_id: cell.table_id,\n\t\t\t\t\t\tcolumn_id: newColumnId,\n\t\t\t\t\t\trow_id: cell.row_id,\n\t\t\t\t\t\tcell_id: columnLetter + cell.row_id,\n\t\t\t\t\t\tattributes: cell.attributes,\n\t\t\t\t\t\tclasses: cell.classes,\n\t\t\t\t\t\tcontent: cellContent\n\t\t\t\t\t}\n\t\t\t\t\tcellsWithNewId.push(newCell)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tvar allNewColumnCells = [...cellsWithNewId, ...action.columnCells]\n\t\t\tvar sortedCells = tableSort('cells', allNewColumnCells)\n\n\t\t\tvar returnedTableNewColumn =\n\t\t\t{\n\t\t\t\t...insertColumnState,\n\t\t\t\trows: [...insertColumnState.rows],\n\t\t\t\tcolumns: [...sortedColumns],\n\t\t\t\tcells: [...sortedCells]\n\t\t\t}\n\n\t\t\tconsole.log(returnedTableNewColumn)\n\n\t\t\treturn {\n\t\t\t\ttable: returnedTableNewColumn\n\t\t\t}\n\n\t\tcase INSERT_ROW:\n\t\t\tconsole.log('In Reducer INSERT_ROW')\n\t\t\tlet insertRowState = { ...state }\n\n\t\t\t/**\n\t\t\t * Insert new row and update existing row_id's\n\t\t\t */\n\t\t\tvar rowsWithNewId = []\n\t\t\tinsertRowState.rows.forEach((row) => {\n\t\t\t\tif (Number(row.row_id) < Number(action.rowId)) {\n\t\t\t\t\trowsWithNewId.push(row)\n\t\t\t\t} else {\n\t\t\t\t\tlet newRow = {\n\t\t\t\t\t\ttable_id: row.table_id,\n\t\t\t\t\t\trow_id: String(Number(row.row_id) + 1),\n\t\t\t\t\t\tattributes: row.attributes,\n\t\t\t\t\t\tclasses: row.classes\n\t\t\t\t\t}\n\t\t\t\t\trowsWithNewId.push(newRow)\n\t\t\t\t}\n\t\t\t})\n\t\t\trowsWithNewId.push(action.newRow)\n\t\t\tconsole.log(rowsWithNewId)\n\n\t\t\tvar sortedRows = tableSort('rows', rowsWithNewId)\n\t\t\tconsole.log(sortedRows)\n\n\t\t\t/**\n\t\t\t * Insert new cells and update existing column_id's\n\t\t\t */\n\t\t\tvar cellsWithNewId = []\n\t\t\tinsertRowState.cells.forEach((cell) => {\n\t\t\t\tconsole.log(cell)\n\t\t\t\tif (Number(cell.row_id) < Number(action.rowId)) {\n\t\t\t\t\tcellsWithNewId.push(cell)\n\t\t\t\t} else {\n\n\t\t\t\t\tlet newRowId = String(Number(cell.row_id) + 1)\n\t\t\t\t\tlet columnLetter = cell.column_id == '0' ? '0' : numberToLetter(cell.column_id)\n\t\t\t\t\tlet cellContent = Number(cell.column_id) == 0 ? newRowId : cell.content\n\t\t\t\t\tlet newCell = {\n\t\t\t\t\t\ttable_id: cell.table_id,\n\t\t\t\t\t\tcolumn_id: cell.column_id,\n\t\t\t\t\t\trow_id: newRowId,\n\t\t\t\t\t\tcell_id: columnLetter + newRowId,\n\t\t\t\t\t\tattributes: cell.attributes,\n\t\t\t\t\t\tclasses: cell.classes,\n\t\t\t\t\t\tcontent: cellContent\n\t\t\t\t\t}\n\t\t\t\t\tcellsWithNewId.push(newCell)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tvar allNewRowCells = [...cellsWithNewId, ...action.rowCells]\n\t\t\tvar sortedCells = tableSort('cells', allNewRowCells)\n\n\t\t\tvar returnedTableNewRow =\n\t\t\t{\n\t\t\t\t...insertRowState,\n\t\t\t\trows: [...sortedRows],\n\t\t\t\tcolumns: [...insertRowState.columns],\n\t\t\t\tcells: [...sortedCells]\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttable: returnedTableNewRow\n\t\t\t}\n\n\t\tcase DELETE_COLUMN:\n\t\t\tconsole.log('In Reducer DELETE_COLUMN')\n\t\t\tlet deleteColumnState = { ...state }\n\n\t\t\t/**\n\t\t\t * Delete new column and update existing column_id's\n\t\t\t */\n\t\t\tvar columnsWithNewId = []\n\t\t\tdeleteColumnState.columns.forEach((column) => {\n\t\t\t\tif (Number(column.column_id) < Number(action.columnId)) {\n\t\t\t\t\tcolumnsWithNewId.push(column)\n\t\t\t\t} else if (Number(column.column_id) > Number(action.columnId)) {\n\t\t\t\t\tlet newColumn = {\n\t\t\t\t\t\ttable_id: column.table_id,\n\t\t\t\t\t\tcolumn_id: String(Number(column.column_id) - 1),\n\t\t\t\t\t\tcolumn_name: column.column_name,\n\t\t\t\t\t\tattributes: column.attributes,\n\t\t\t\t\t\tclasses: column.classes\n\t\t\t\t\t}\n\t\t\t\t\tcolumnsWithNewId.push(newColumn)\n\t\t\t\t}\n\t\t\t})\n\t\t\t// columnsWithNewId.push(action.newColumn)\n\t\t\t// var sortedColumns = tableSort('columns', columnsWithNewId)\n\n\t\t\t/**\n\t\t\t * Delete new cells and update existing column_id's\n\t\t\t */\n\t\t\tvar cellsWithNewId = []\n\t\t\tdeleteColumnState.cells.forEach((cell) => {\n\t\t\t\tif (Number(cell.column_id) < Number(action.columnId)) {\n\t\t\t\t\tcellsWithNewId.push(cell)\n\t\t\t\t} else if (Number(cell.column_id) > Number(action.columnId)) {\n\t\t\t\t\tlet newColumnId = String(Number(cell.column_id) - 1)\n\t\t\t\t\tlet columnLetter = numberToLetter(newColumnId)\n\t\t\t\t\tlet cellContent = Number(cell.row_id) == 0 ? columnLetter : cell.content\n\t\t\t\t\tlet newCell = {\n\t\t\t\t\t\ttable_id: cell.table_id,\n\t\t\t\t\t\tcolumn_id: newColumnId,\n\t\t\t\t\t\trow_id: cell.row_id,\n\t\t\t\t\t\tcell_id: columnLetter + cell.row_id,\n\t\t\t\t\t\tattributes: cell.attributes,\n\t\t\t\t\t\tclasses: cell.classes,\n\t\t\t\t\t\tcontent: cellContent\n\t\t\t\t\t}\n\t\t\t\t\tcellsWithNewId.push(newCell)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t// var allNewColumnCells = [...cellsWithNewId, ...action.columnCells]\n\t\t\t// var sortedCells = tableSort('cells', allNewColumnCells)\n\n\t\t\tvar returnedTableNewColumn =\n\t\t\t{\n\t\t\t\t...deleteColumnState,\n\t\t\t\trows: [...deleteColumnState.rows],\n\t\t\t\tcolumns: [...columnsWithNewId],\n\t\t\t\tcells: [...cellsWithNewId]\n\t\t\t}\n\n\t\t\tconsole.log(returnedTableNewColumn)\n\n\t\t\treturn {\n\t\t\t\ttable: returnedTableNewColumn\n\t\t\t}\n\n\t\tcase DELETE_ROW:\n\t\t\tconsole.log('In Reducer DELETE_ROW')\n\t\t\tlet deleteRowState = { ...state }\n\n\t\t\t/**\n\t\t\t * Delete new column and update existing column_id's\n\t\t\t */\n\t\t\tvar rowsWithNewId = []\n\t\t\tconsole.log(deleteRowState)\n\t\t\tdeleteRowState.rows.forEach((row) => {\n\t\t\t\tif (Number(row.row_id) < Number(action.rowId)) {\n\t\t\t\t\trowsWithNewId.push(row)\n\t\t\t\t} else if (Number(row.row_id) > Number(action.rowId)) {\n\t\t\t\t\tlet newRow = {\n\t\t\t\t\t\ttable_id: row.table_id,\n\t\t\t\t\t\trow_id: String(Number(row.row_id) - 1),\n\t\t\t\t\t\tattributes: row.attributes,\n\t\t\t\t\t\tclasses: row.classes\n\t\t\t\t\t}\n\t\t\t\t\trowsWithNewId.push(newRow)\n\t\t\t\t}\n\t\t\t})\n\t\t\t// rowsWithNewId.push(action.newColumn)\n\t\t\t// var sortedRows= tableSort('rows', rowsWithNewId)\n\n\t\t\t/**\n\t\t\t * Delete new cells and update existing row_id's\n\t\t\t */\n\t\t\tvar cellsWithNewId = []\n\t\t\tconsole.log(deleteRowState.cells)\n\t\t\tdeleteRowState.cells.forEach((cell) => {\n\t\t\t\tif (Number(cell.row_id) < Number(action.rowId)) {\n\t\t\t\t\tcellsWithNewId.push(cell)\n\t\t\t\t} else if (Number(cell.row_id) > Number(action.rowId)) {\n\t\t\t\t\tlet newRowId = String(Number(cell.row_id) - 1)\n\t\t\t\t\tlet columnLetter = cell.column_id == '0' ? '0' : numberToLetter(cell.column_id)\n\t\t\t\t\tlet cellContent = Number(cell.column_id) == 0 ? newRowId : cell.content\n\t\t\t\t\tlet newCell = {\n\t\t\t\t\t\ttable_id: cell.table_id,\n\t\t\t\t\t\tcolumn_id: cell.column_id,\n\t\t\t\t\t\trow_id: newRowId,\n\t\t\t\t\t\tcell_id: columnLetter + cell.row_id,\n\t\t\t\t\t\tattributes: cell.attributes,\n\t\t\t\t\t\tclasses: cell.classes,\n\t\t\t\t\t\tcontent: cellContent\n\t\t\t\t\t}\n\t\t\t\t\tcellsWithNewId.push(newCell)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t// var allNewColumnCells = [...cellsWithNewId, ...action.columnCells]\n\t\t\t// var sortedCells = tableSort('cells', allNewColumnCells)\n\n\t\t\tvar returnedTableNewRow =\n\t\t\t{\n\t\t\t\t...deleteRowState,\n\t\t\t\trows: [...rowsWithNewId],\n\t\t\t\tcolumns: [...deleteRowState.columns],\n\t\t\t\tcells: [...cellsWithNewId]\n\t\t\t}\n\n\t\t\tconsole.log(returnedTableNewRow)\n\n\t\t\treturn {\n\t\t\t\ttable: returnedTableNewRow\n\t\t\t}\n\n\t\tcase UPDATE_ROW:\n\t\t\tconsole.log('In Reducer UPDATE_ROW')\n\n\t\t\tvar transformedValue = ' \"' + action.value + '\"';\n\n\t\t\tif (action.attribute === 'attributes') {\n\t\t\t\ttransformedValue = JSON.stringify(action.value)\n\t\t\t}\n\t\t\tconsole.log()\n\n\t\t\tlet newRowsState = { ...state }\n\t\t\tlet updatedRowData = JSON.parse('{ \"' + action.attribute + '\" :' + transformedValue + '}')\n\t\t\tconsole.log(newRowsState);\n\t\t\tconsole.log(newRowsState.rows);\n\t\t\tlet updatedRows = updateArray(newRowsState.rows, 'row_id', action.rowId, updatedRowData)\n\n\t\t\tconsole.log(updatedRowData)\n\t\t\tconsole.log(updatedRows)\n\n\t\t\tvar returnedUpdatedTableRow =\n\t\t\t{\n\t\t\t\t...newRowsState,\n\t\t\t\trows: [...updatedRows],\n\t\t\t\tcolumns: [...newRowsState.columns],\n\t\t\t\tcells: [...newRowsState.cells]\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttable: returnedUpdatedTableRow\n\t\t\t}\n\n\t\tcase UPDATE_COLUMN:\n\t\t\tconsole.log('In Reducer UPDATE_COLUMN')\n\n\t\t\tvar transformedValue = ' \"' + action.value + '\"';\n\n\t\t\tif (action.attribute === 'attributes') {\n\t\t\t\ttransformedValue = JSON.stringify(action.value)\n\t\t\t}\n\n\t\t\tconsole.log(transformedValue)\n\t\t\tlet newColumnsState = { ...state }\n\t\t\tlet updatedColumnData = JSON.parse('{ \"' + action.attribute + '\" :' + transformedValue + '}')\n\t\t\tconsole.log(newColumnsState);\n\t\t\tconsole.log(newColumnsState.columns);\n\t\t\tlet updatedColumns = updateArray(newColumnsState.columns, 'column_id', action.columnId, updatedColumnData)\n\n\t\t\tconsole.log(updatedColumnData)\n\t\t\tconsole.log(updatedColumns)\n\n\t\t\tvar returnedUpdatedTableColumn =\n\t\t\t{\n\t\t\t\t...newColumnsState,\n\t\t\t\trows: [...newColumnsState.rows],\n\t\t\t\tcolumns: [...updatedColumns],\n\t\t\t\tcells: [...newColumnsState.cells]\n\t\t\t}\n\t\t\treturn {\n\n\t\t\t\ttable: returnedUpdatedTableColumn\n\t\t\t}\n\n\t\tcase UPDATE_CELL:\n\t\t\tconsole.log('In Reducer UPDATE_CELL')\n\t\t\tlet newCellsState = { ...state }\n\t\t\tconsole.log(state)\n\t\t\tconsole.log(newCellsState)\n\t\t\tlet updatedCellData = JSON.parse('{ \"' + action.attribute + '\" : \"' + action.value + '\"}')\n\t\t\tlet updatedCells = updateArray(newCellsState.cells, 'cell_id', action.cellId, updatedCellData)\n\n\t\t\tlet returnedCellState =\n\t\t\t{\n\t\t\t\t...state,\n\t\t\t\trows: [...newCellsState.rows],\n\t\t\t\tcolumns: [...newCellsState.columns],\n\t\t\t\tcells: [...updatedCells]\n\t\t\t}\n\t\t\tconsole.log(returnedCellState)\n\t\t\treturn {\n\t\t\t\ttable: returnedCellState\n\t\t\t}\n\n\t\tcase PROCESS_BORDERS:\n\t\t\tconsole.log('In Reducer PROCESS_BORDERS')\n\t\t\tconst newBaseTableState = { ...state }\n\n\t\t\tlet returnedBorderState =\n\t\t\t{\n\t\t\t\t...newBaseTableState,\n\t\t\t\trows: tableSort('rows', [...action.rows]),\n\t\t\t\tcolumns: tableSort('columns', [...action.columns]),\n\t\t\t\tcells: tableSort('cells', [...action.cells])\n\t\t\t}\n\n\t\t\tconsole.log(newBaseTableState)\n\t\t\tconsole.log(returnedBorderState)\n\n\t\t\treturn {\n\t\t\t\ttable: returnedBorderState\n\t\t\t}\n\n\t\tcase RECEIVE_HYDRATE:\n\t\t\tconsole.log('RECEIVE_HYDATE...')\n\t\t\tconsole.log(state);\n\t\t\tconsole.log(action.table);\n\n\t\t\treturn {\n\t\t\t\ttable: {\n\t\t\t\t\t...state.table,\n\t\t\t\t\t...action.table\n\t\t\t\t}\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst reducer = (\n\tstate = {\n\t\ttables: {}\n\t},\n\taction) => {\n\tconsole.log('MAIN REDUCER')\n\tconsole.log(state)\n\tconsole.log('  Action Table ID = ' + action.tableId)\n\tconsole.log(action)\n\n\tlet tableKey = action.tableId\n\tconsole.log(state.tables[tableKey])\n\tlet newTableState = table(state.tables[tableKey], action)\n\tlet returnedTable =\n\t{\n\t\t[action.tableId]:\n\t\t\tnewTableState.table\n\t}\n\n\tif (JSON.stringify(newTableState.table) === '{}') {\n\t\treturn state\n\t}\n\tconsole.log(returnedTable)\n\n\tconst newTablesState = { ...state.tables }\n\t// let newTablesStateKeys = Object.keys(state.tables)\n\n\tswitch (action.type) {\n\t\tcase CHANGE_TABLE_ID:\n\t\t\tconsole.log('In Reducer CHANGE_TABLE_ID for state')\n\n\t\t\tconst returnedTableNewId =\n\t\t\t{\n\t\t\t\t[action.newTableId]:\n\t\t\t\t\tnewTableState.table\n\t\t\t}\n\t\t\tconsole.log(returnedTableNewId)\n\n\t\t\tconst filteredTablesState = Object.keys(state.tables)\n\t\t\t\t.reduce((acc, key) => {\n\t\t\t\t\tconsole.log(state.tables[key])\n\t\t\t\t\tif (state.tables[key].table_id !== action.tableId) {\n\t\t\t\t\t\tacc[key] = { ...state.tables[key] }\n\t\t\t\t\t}\n\t\t\t\t\treturn acc\n\t\t\t\t}, {})\n\t\t\t// const filteredTablesState = Object.keys(state.tables)\n\t\t\t// .filter((key) =>\n\t\t\t//     state.tables[key] !== '0'\n\t\t\t// )\n\t\t\tconsole.log(filteredTablesState)\n\n\t\t\treturn {\n\t\t\t\ttables: {\n\t\t\t\t\t...filteredTablesState,\n\t\t\t\t\t...returnedTableNewId\n\t\t\t\t}\n\t\t\t}\n\n\t\tcase DELETE_TABLE:\n\t\t\tconsole.log('In Reducer DELETE_TABLE...')\n\n\t\t\tconst deleteTablesState = Object.keys(state.tables)\n\t\t\t\t.reduce((acc, key) => {\n\t\t\t\t\tconsole.log('Reducer key = ' + key)\n\t\t\t\t\tconsole.log('TableId to delete = ' + String(action.tableId))\n\t\t\t\t\tconsole.log(acc)\n\t\t\t\t\tif (key !== String(action.tableId)) {\n\t\t\t\t\t\tacc[key] = {\n\t\t\t\t\t\t\t...state.tables[key],\n\t\t\t\t\t\t\trows: [...state.tables[key].rows],\n\t\t\t\t\t\t\tcolumns: [...state.tables[key].columns],\n\t\t\t\t\t\t\tcells: [...state.tables[key].cells],\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn acc\n\t\t\t\t}, {})\n\n\t\t\tconsole.log(deleteTablesState)\n\t\t\treturn {\n\t\t\t\ttables: {\n\t\t\t\t\t...deleteTablesState\n\t\t\t\t}\n\t\t\t}\n\n\t\tdefault:\n\t\t\tconsole.log('In Reducer Default State Handling')\n\t\t\tconst returnedTableDefault =\n\t\t\t{\n\t\t\t\t[action.tableId]:\n\t\t\t\t\tnewTableState.table\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttables: {\n\t\t\t\t\t...newTablesState,\n\t\t\t\t\t...returnedTableDefault\n\t\t\t\t}\n\t\t\t}\n\t}\n\n\n\n\t// if (action.type === 'UPDATE_TABLE_PROP' && action.attribute === 'table_id') {\n\t//     newTablesState = Object.keys(state.tables)\n\t//         .filter((key) =>\n\t//             state.tables[key] !== '0'\n\t//         )\n\t// }\n\n\t// if (action.type === 'DELETE_TABLE') {\n\t//     console.log('DELETE_TABLE...')\n\n\t//     const deleteTablesState = Object.keys(state.tables)\n\t//         .reduce((acc, key) => {\n\t//             console.log('Reducer key = ' + key)\n\t//             console.log('TableId to delete = ' + String(action.tableId))\n\t//             console.log(acc)\n\t//             if (key !== String(action.tableId)) {\n\t//                 acc[key] = {\n\t//                     ...state.tables[key],\n\t//                     rows: [...state.tables[key].rows],\n\t//                     columns: [...state.tables[key].columns],\n\t//                     cells: [...state.tables[key].cells],\n\t//                 }\n\t//             }\n\t//             return acc\n\t//         }, {})\n\n\t//     console.log(deleteTablesState)\n\t//     return {\n\t//         tables: {\n\t//             ...deleteTablesState\n\t//         }\n\t//     }\n\t// }\n\n\t// if (action.type === 'PERSIST') {\n\t//     console.log('PERSIST...')\n\t// console.log('...Deleted table key = ' + JSON.stringify(newTablesState, null, 4))\n\n\t// }\n}\n\nexport default reducer;\n","/**\r\n * Get Wordpress Dependencies\r\n */\r\nimport { addQueryArgs } from \"@wordpress/url\";\r\nimport apiFetch from \"@wordpress/api-fetch\";\r\nimport { store as coreStore } from \"@wordpress/core-data\"\r\nimport { loadTableEntityConfig } from './table-entity';\r\nimport { numberToLetter } from '../utils';\r\n\r\n\r\n// import { hydrate } from \"./actions\";\r\n\r\nfunction computeCellId(fetchedCells) {\r\n    fetchedCells.forEach((cell) => {\r\n        cell.cell_id = numberToLetter(cell.column_id) + cell.row_id\r\n        console.log(cell)\r\n    });\r\n    return {\r\n        fetchedCells\r\n    }\r\n}\r\n\r\n// export function getTableIdByBlock(block_table_ref) {\r\n//     return\r\n// }\r\n\r\nexport const getTable =\r\n    (tableId, isTableStale) =>\r\n        async ({ dispatch, registry }) => {\r\n            console.log('            ...Resolver - Before fetch')\r\n            console.log('            ...Table ID = ' + tableId)\r\n            console.log('            ...Table Stale = ' + isTableStale)\r\n            // if (blockTableStatus === 'New' || blockTableStatus === 'Saved' || tableId == '0') {\r\n            if (!isTableStale || tableId == '0') {\r\n                console.log('Bypassing API Call')\r\n                return\r\n            }\r\n\r\n            // const entityConfig = await dispatch(loadTableEntityConfig());\r\n\r\n            try {\r\n                const tableEntity =\r\n                    await registry\r\n                        .resolveSelect(coreStore)\r\n                        .getEntityRecord(\r\n                            'dynamic-tables',\r\n                            'table',\r\n                            tableId\r\n                        )\r\n\r\n                const table = tableEntity;\r\n                const table_id = table.id;\r\n                const block_table_ref = table.header.block_table_ref;\r\n                const table_status = table.header.status;\r\n                const post_id = table.header.post_id;\r\n                const table_name = table.header.table_name;\r\n                const attributes = table.header.attributes;\r\n                const classes = table.header.classes;\r\n                const rows = table.rows;\r\n                const columns = table.columns;\r\n                computeCellId(table.cells);\r\n                const cells = table.cells;\r\n\r\n                dispatch.receiveTable(table_id, block_table_ref, table_status, post_id, table_name, attributes, classes, rows, columns, cells);\r\n            } catch (error) {\r\n                console.log('Error in getTable - Table ID = ' + tableId);\r\n                alert('            ...Resolver - async error - ' + JSON.stringify(error, null, 4));\r\n            }\r\n            console.log('            Resolver - async completed');\r\n\r\n        }\r\n","import { createRegistrySelector } from \"@wordpress/data\";\r\nimport { store as coreStore } from \"@wordpress/core-data\"\r\n\r\nexport function getTable(state, tableId, isTableStale) {\r\n\r\n    console.log('Selector...GetTable ' + tableId)\r\n    console.log('        ...Current Table Stale ' + isTableStale)\r\n    console.log(state)\r\n\r\n    if (!state.tables.hasOwnProperty(tableId)) {\r\n        console.log('State not defined')\r\n        return {\r\n            table_id: tableId,\r\n            block_table_ref: '',\r\n            post_id: '',\r\n            table_status: '',\r\n            table_name: '',\r\n            attributes: [],\r\n            classes: '',\r\n            rows: [],\r\n            columns: [],\r\n            cells: []\r\n        }\r\n    }\r\n\r\n    return state.tables[tableId]\r\n}\r\n\r\nexport function getTables(state) {\r\n    return state.tables\r\n\r\n}\r\n\r\nexport function getTableIdByBlock(state, block_table_ref) {\r\n    const newTable = Object.keys(state.tables)\r\n        .reduce((acc, key) => {\r\n            if (state.tables[key]?.block_table_ref === block_table_ref) {\r\n                console.log({ ...state.tables[key]?.block_table_ref })\r\n                acc[key] = { ...state.tables[key] }\r\n            }\r\n            return acc\r\n        }, {})\r\n\r\n    if (newTable.length === 0) {\r\n        return false\r\n    }\r\n    return Object.keys(newTable)\r\n}\r\n\r\n/**\r\n * Return all tables that are associated with unmounted blocks\r\n * \r\n * @param {*} state \r\n * @returns \r\n */\r\nexport function getUnmountedTables(state) {\r\n    console.log(state.tables)\r\n    const unmountedTables = Object.keys(state.tables)\r\n        .reduce((acc, key) => {\r\n            if (state.tables[key].unmounted_blockid) {\r\n                acc[key] = { ...state.tables[key] }\r\n            }\r\n            return acc\r\n        }, {})\r\n    return unmountedTables\r\n}\r\n\r\nexport function getDeletedTables(state) {\r\n    const deletedTables = Object.keys(state.tables)\r\n        .reduce((acc, key) => {\r\n            console.log(state.tables[key].table_status)\r\n            if (state.tables[key].table_status === 'deleted') {\r\n                acc[key] = { ...state.tables[key] }\r\n            }\r\n            return acc\r\n        }, {})\r\n    return deletedTables\r\n}\r\n\r\nexport function getUnsavedTables(state) {\r\n    const deletedTables = Object.keys(state.tables)\r\n        .reduce((acc, key) => {\r\n            console.log(state.tables[key].table_status)\r\n            if (state.tables[key].table_status === 'new') {\r\n                acc[key] = { ...state.tables[key] }\r\n            }\r\n            return acc\r\n        }, {})\r\n    return deletedTables\r\n}\r\n\r\nexport function getTableBlockId(state) {\r\n\r\n}\r\n\r\nexport const getTableTest = createRegistrySelector(\r\n    // (select) => (state, tableId) => {\r\n    (select) => () => {\r\n\r\n        return select(coreStore).getEntityRecord(\r\n            'dynamic-tables/v1',\r\n            'table',\r\n            '18'\r\n        )\r\n    });\r\n","import { store as coreStore } from \"@wordpress/core-data\"\r\n\r\nexport const loadTableEntityConfig = () => {\r\n    const tableConfig =\r\n    {\r\n        name: 'table',\r\n        kind: 'dynamic-tables/v1',\r\n        baseURL: '/dynamic-tables/v1/tables',\r\n        baseURLParams: { context: 'edit' },\r\n        plural: 'tables',\r\n        label: __('Table'),\r\n        getTitle: (record) => record?.title || __('Unnamed Table'),\r\n    }\r\n\r\n    dispatch(coreStore).addEntities(tableConfig);\r\n    console.log(tableConfig);\r\n    alert('processed Entity');\r\n\r\n    return tableConfig;\r\n}","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n */\nimport { useSelect, useDispatch, dispatch } from \"@wordpress/data\";\nimport { useState, useEffect, useRef } from \"@wordpress/element\"\nimport { store as editorStore } from \"@wordpress/editor\";\nimport { store as noticeStore } from '@wordpress/notices';\nimport { useEntityRecords } from \"@wordpress/core-data\"\nimport { usePrevious } from \"@wordpress/compose\";\nimport { __ } from '@wordpress/i18n';\nimport {\n\tForwardedRef\n} from 'react';\nimport {\n\tPanel,\n\tPanelBody,\n\tPanelRow,\n\tDisabled,\n\tTabbableContainer,\n\tButton,\n\tSpinner,\n\tPlaceholder,\n\tColorPicker,\n\tToggleControl,\n\tCheckboxControl,\n\t__experimentalInputControl as InputControl,\n\tBorderBoxControl,\n\t__experimentalNumberControl as NumberControl\n} from '@wordpress/components';\nimport {\n\tRichText,\n\tuseBlockProps,\n\tuseSettings,\n\tBlockIcon,\n\tAlignmentToolbar,\n\tAlignmentControl,\n\tInspectorControls,\n\tBlockControls,\n\tBlockAlignmentToolbar,\n\tPanelColorSettings\n} from '@wordpress/block-editor';\nimport {\n\tcolumn,\n\t// alignLeft,\n\t// alignRight,\n\t// alignCenter,\n\tsearch,\n\tblockTable as icon,\n\t// tableColumnAfter,\n\t// tableColumnBefore,\n\t// tableColumnDelete,\n\t// tableRowAfter,\n\t// tableRowBefore,\n\t// tableRowDelete,\n\t// table,\n\t// moreVertical,\n\t// more,\n\t// arrowLeft,\n\t// arrowRight,\n\t// arrowUp,\n\t// arrowDown,\n\t// trash\n} from '@wordpress/icons';\n\n\n/**\n *  * Internal Dependencies\n */\nimport { store as tableStore } from './data';\nimport { usePostChangesSaved } from './hooks';\nimport {\n\tnumberToLetter,\n\ttableSort,\n\tgenerateBlockTableRef,\n\tsetBorderContent,\n\topenCurrentColumnMenu,\n\topenCurrentRowMenu,\n\tremoveTags\n} from './utils';\nimport {\n\tinitTable,\n\tinitTableCells,\n\tgetDefaultRow,\n\tgetDefaultColumn,\n\tgetDefaultCell,\n\tgetDefaultTableClasses,\n\tgetDefaultTableAttributes\n} from './table-defaults';\nimport {\n\tprocessColumns,\n\tprocessHeaderRow,\n\tprocessBodyRows,\n\tgridBandedRowTextColorStyle,\n\tgridBandedRowBackgroundColorStyle,\n\tgridInnerBorderStyle,\n\tgridInnerBorderWidthStyle,\n\tstartGridRowNbr,\n\tendGridRowNbr,\n\tgetGridHeaderBackgroundColorStyle,\n\tgetHeaderTextAlignmentStyle,\n\tgetBorderStyleType,\n\tgetBorderStyle\n} from './style';\n\nimport { ColumnMenu, RowMenu } from './components';\n// import TABLE_ATTRIBUTE_TYPES from './constants'\nimport './editor.scss';\n\ndispatch('core').addEntities([\n\t{\n\t\tname: 'table',\n\t\tkind: 'dynamic-tables',\n\t\tbaseURL: '/dynamic-tables/v1/tables',\n\t\tbaseURLParams: { context: 'edit' },\n\t\tplural: 'tables',\n\t\tlabel: __('Table'),\n\t\tgetTitle: (record) => record?.title || __('Unnamed Table'),\n\t}\n]);\n\nexport default function Edit(props) {\n\n\tconst blockProps = useBlockProps({\n\t\tclassName: \"dynamic-table-edit-block\"\n\t})\n\n\tconsole.log(props)\n\tconsole.log(gls_test_data)\n\n\t/**\n\t * Esternal Store Action useDispatch declarations\n\t */\n\tconst { lockPostSaving } = useDispatch(editorStore);\n\tconst { lockPostAutosaving } = useDispatch(editorStore);\n\n\t/**\n\t * Table Store Action useDispatch declarations\n\t */\n\tconst { receiveNewTable } = useDispatch(tableStore);\n\tconst { createTableEntity } = useDispatch(tableStore);\n\tconst { saveTableEntity } = useDispatch(tableStore);\n\tconst { deleteTableEntity } = useDispatch(tableStore);\n\tconst { addColumn } = useDispatch(tableStore);\n\tconst { addRow } = useDispatch(tableStore);\n\tconst { removeColumn } = useDispatch(tableStore);\n\tconst { removeRow } = useDispatch(tableStore);\n\tconst { updateTableProp } = useDispatch(tableStore);\n\tconst { removeTableProp } = useDispatch(tableStore);\n\tconst { updateRow } = useDispatch(tableStore);\n\tconst { updateColumn } = useDispatch(tableStore);\n\tconst { updateCell } = useDispatch(tableStore);\n\tconst { updateTableEntity } = useDispatch(tableStore);\n\tconst { updateTableBorder } = useDispatch(tableStore);\n\tconst { processUnmountedTables } = useDispatch(tableStore);\n\tconst { processDeletedTables } = useDispatch(tableStore);\n\tconst { createNotice, removeNotice } = useDispatch(noticeStore)\n\n\n\t/**\n\t * Local State declarations\n\t */\n\tconst [isTableStale, setTableStale] = useState(true);\n\tconst [openColumnRow, setOpenColumnRow] = useState(0);\n\tconst [tablePropAttributes, setTablePropAttributes] = useState({});\n\tconst [columnAttributes, setColumnAttributes] = useState({});\n\tconst [columnMenuVisible, setColumnMenuVisible] = useState(false);\n\tconst [rowMenuVisible, setRowMenuVisible] = useState(false);\n\tconst [openRowColumn, setOpenRowColumn] = useState(0);\n\tconst [rowAttributes, setRowAttributes] = useState({});\n\tconst [render, setRender] = useState(0);\n\tconst [showBorders, setShowBorders] = useState(false);\n\tconst [tableName, setTableName] = useState('');\n\tconst [numColumns, setNumColumns] = useState(1);\n\tconst [numRows, setNumRows] = useState(1);\n\tconst [gridCells, setGridCells] = useState([]);\n\tconst [awaitingTableEntityCreation, setAwaitingTableEntityCreation] = useState(false);\n\t// Current future features: Zoom to details\n\tconst enableFutureFeatures = false;\n\tconst enableProFeatures = false;\n\n\tconst priorTableRef = useRef({});\n\tconst { table_id, block_table_ref, block_alignment } = props.attributes;\n\tconst themeColors = useSettings('color.palette')\n\tconst borderBoxColors = themeColors[0].map(({ color, name }) => {\n\t\treturn { color, name }\n\t})\n\n\tconsole.log('Block Table Ref - ' + block_table_ref)\n\n\t/**\n\t * Load entity framework for table entity type\n\t */\n\n\t// useEffect(() => {\n\t// \tdispatch('core').addEntities([\n\t// \t\t{\n\t// \t\t\tname: 'table',\n\t// \t\t\tkind: 'dynamic-tables/v1',\n\t// \t\t\tbaseURL: '/dynamic-tables/v1/tables',\n\t// \t\t\tbaseURLParams: { context: 'edit' },\n\t// \t\t\tplural: 'tables',\n\t// \t\t\tlabel: __('Table')\n\t// \t\t}\n\t// \t]);\n\t// }, []);\n\n\t/**\n\t * Determine if the State table id has changed\n\t */\n\n\tconst { currentTableId } = useSelect(\n\t\t(select) => {\n\t\t\tconst { getTableIdByBlock } = select(tableStore);\n\t\t\tlet currentTableId = getTableIdByBlock(block_table_ref);\n\t\t\tconsole.log('Current table id = ' + currentTableId);\n\n\t\t\treturn {\n\t\t\t\tcurrentTableId: currentTableId\n\t\t\t}\n\t\t}\n\t)\n\n\tconsole.log('NEW TABLE INFO');\n\tconsole.log('Awaiting entity creation = ' + awaitingTableEntityCreation + ', Props table id = ' + table_id + ', Current table id = ' + currentTableId);\n\n\tconst setTableIdChanged = () => {\n\t\tif (awaitingTableEntityCreation && Number(currentTableId) !== Number(table_id)) {\n\t\t\tconsole.log('  ... In table changed - TRUE');\n\t\t\treturn true;\n\t\t}\n\t\tconsole.log('  ... In table changed - FALSE');\n\t\treturn false;\n\t}\n\n\tconst isTableIdChanged = setTableIdChanged();\n\n\tconsole.log('Table id after select = ' + currentTableId);\n\tconsole.log('Table id update: ' + isTableIdChanged)\n\n\t/**\n\t * Table blocks is unmounted when entering the text editor AND when deleted.  However,\n\t * don't know whether the table was deleted when an unmount is detected.  Therefore,\n\t * we mark them as unmounted at that time, and can identify whether the block was\n\t * truly deleted on the subsequent render.\n\t *\n\t * We mark tables as deleted if they do not identify that the block has been remounted\n\t */\n\tconst { unmountedTables } = useSelect(\n\t\t(select) => {\n\t\t\tconst { getUnmountedTables } = select(tableStore);\n\t\t\treturn {\n\t\t\t\tunmountedTables: getUnmountedTables()\n\t\t\t}\n\t\t})\n\n\tif (Object.keys(unmountedTables).length > 0) {\n\t\tprocessUnmountedTables(unmountedTables)\n\t}\n\n\tconst { deletedTables } = useSelect(\n\t\t(select) => {\n\t\t\tconst { getDeletedTables } = select(tableStore);\n\t\t\treturn {\n\t\t\t\tdeletedTables: getDeletedTables()\n\t\t\t}\n\t\t})\n\n\tconst postChangesAreSaved = usePostChangesSaved()\n\t// console.log(postChangesAreSaved)\n\t// console.log(unmountedTables)\n\tuseEffect(() => {\n\t\tif (postChangesAreSaved) {\n\t\t\talert('Sync REST Now')\n\t\t\t/**\n\t\t\t * Remove deleted tables from persisted store\n\t\t\t */\n\t\t\tif (Object.keys(deletedTables).length > 0) {\n\t\t\t\tconsole.log(deletedTables)\n\t\t\t\tprocessDeletedTables(deletedTables)\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Tables are persisted when they are created, but should only remain\n\t\t\t * if the underlying post is saved.  Here we update the status of new\n\t\t\t * tables from \"new\" to \"saved\" once the post is saved.\n\t\t\t */\n\t\t\tif (table.table_status == 'new') {\n\t\t\t\tconsole.log('Saving new table - ' + table.table_id)\n\t\t\t\tsetTableAttributes(table.table_id, 'table_status', '', 'PROP', 'saved')\n\t\t\t\tsaveTableEntity(table.table_id)\n\t\t\t\tconsole.log(table)\n\t\t\t}\n\t\t}\n\n\t}, [postChangesAreSaved, unmountedTables]);\n\n\tconst setBlockTableStatus = () => {\n\t\tif (block_table_ref === '') {\n\t\t\treturn 'None'\n\t\t}\n\n\t\tif (table_id === '0') {\n\t\t\treturn 'New'\n\t\t}\n\n\t\tif (isTableStale) {\n\t\t\treturn 'Stale'\n\t\t}\n\n\t\treturn 'Saved'\n\t}\n\n\tconst setNewBlock = () => {\n\t\tif (block_table_ref === '') {\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tconst setSaveLock = () => {\n\t\tlockPostSaving('lockPostSaving');\n\t\tlockPostAutosaving('lockPostAutosaving');\n\t};\n\n\tconst setClearSaveLock = () => {\n\t\tlockPostSaving('unlockPostSaving');\n\t\tlockPostAutosaving('unlockPostAutosaving');\n\t};\n\n\tconst isNewBlock = setNewBlock()\n\tconst blockTableStatus = setBlockTableStatus();\n\n\t/**\n\t * Prepare for New Block\n\t */\n\tif (isNewBlock) {\n\t\tsetSaveLock()\n\t\t// setNumColumns(1);\n\t\t// setNumRows(1);\n\t}\n\n\t/**\n\t * Retrieve table entity from table webservice and load table store\n\t */\n\tconst {\n\t\ttable,\n\t\ttableStatus,\n\t\ttableHasStartedResolving,\n\t\ttableHasFinishedResolving,\n\t\ttableIsResolving\n\t} = useSelect(\n\t\t(select) => {\n\t\t\tconsole.log('Table ID = ' + table_id + ', Stale = ' + isTableStale + ', Block Table Ref = ' + block_table_ref);\n\t\t\tconst { getTable, getTableIdByBlock, hasStartedResolution, hasFinishedResolution, isResolving } = select(tableStore);\n\t\t\tconst selectorArgs = [table_id, isTableStale]\n\n\t\t\tif (block_table_ref === '') {\n\t\t\t\treturn {\n\t\t\t\t\ttable: {},\n\t\t\t\t\ttableStatus: '',\n\t\t\t\t\ttableHasStartedResolving: false,\n\t\t\t\t\ttableHasFinishedResolving: false,\n\t\t\t\t\ttableIsResolving: false\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst getBlockTable = (table_id, isTableStale, block_table_ref) => {\n\t\t\t\tlet selectedTable = getTable(table_id, isTableStale);\n\t\t\t\tconsole.log(selectedTable)\n\t\t\t\t// if (table_id === '0' && selectedTable.block_table_ref.length === 0 && awaitingTableEntityCreation) {\n\t\t\t\tif (table_id === '0' && selectedTable.block_table_ref === '' && awaitingTableEntityCreation) {\n\t\t\t\t\tconst newTableId = getTableIdByBlock(block_table_ref);\n\t\t\t\t\tselectedTable = getTable(newTableId, isTableStale);\n\n\t\t\t\t\t// Must sync post_id here for new table because \"resolving\" attributes are not available\n\t\t\t\t\tif (String(props.context.postId) !== selectedTable.post_id && String(props.context.postId) !== '0') {\n\t\t\t\t\t\tsetTableAttributes(selectedTable.table_id, 'post_id', '', 'PROP', String(props.context.postId))\n\t\t\t\t\t}\n\n\t\t\t\t\tsetAwaitingTableEntityCreation(false)\n\t\t\t\t\tsetClearSaveLock();\n\t\t\t\t\tprops.setAttributes({ table_id: Number(selectedTable.table_id) })\n\t\t\t\t}\n\t\t\t\treturn selectedTable;\n\t\t\t};\n\n\t\t\tconst blockTable = getBlockTable(table_id, isTableStale, block_table_ref)\n\t\t\tconst tableHasStartedResolving = hasStartedResolution('getTable', selectorArgs)\n\t\t\tconst tableHasFinishedResolving = hasFinishedResolution('getTable', selectorArgs)\n\t\t\tconst tableIsResolving = isResolving('getTable', selectorArgs)\n\n\t\t\tif (tableHasFinishedResolving) {\n\t\t\t\tsetTableStale(() => false)\n\t\t\t}\n\n\t\t\t// console.log('isTableStale = ' + isTableStale)\n\t\t\t// console.log('tableHasStartedResolving = ' + hasStartedResolution('getTable', selectorArgs))\n\t\t\t// console.log('tableHasFinishedResolving = ' + hasFinishedResolution('getTable', selectorArgs))\n\t\t\t// console.log('tableIsResolving = ' + isResolving('getTable', selectorArgs))\n\n\t\t\treturn {\n\t\t\t\ttable: blockTable,\n\t\t\t\ttableStatus: blockTable.table_status,\n\t\t\t\ttableHasStartedResolving: tableHasStartedResolving,\n\t\t\t\ttableHasFinishedResolving: tableHasFinishedResolving,\n\t\t\t\ttableIsResolving: tableIsResolving\n\t\t\t};\n\t\t},\n\t\t[\n\t\t\ttable_id,\n\t\t\tisTableIdChanged,\n\t\t\tisTableStale,\n\t\t\tblock_table_ref\n\t\t]\n\t);\n\n\tfunction getTablePropAttribute(tableAttributes, attributeName) {\n\t\tlet attributeValue = tableAttributes?.[attributeName]\n\t\t// if (!attributeValue) {\n\t\t// \tconst defaultTableAttributes = getDefaultTableAttributes('table')\n\t\t// \tattributeValue = defaultTableAttributes?.[attributeName]\n\t\t// }\n\t\treturn attributeValue\n\t}\n\n\t/**\n\t * Extract and unpack table attributes\n\t */\n\tconst showGridLines = getTablePropAttribute(table.attributes, 'showGridLines')\n\tconst allowHorizontalScroll = getTablePropAttribute(table.attributes, 'allowHorizontalScroll')\n\tconst enableHeaderRow = getTablePropAttribute(table.attributes, 'enableHeaderRow')\n\tconst headerAlignment = getTablePropAttribute(table.attributes, 'headerAlignment')\n\tconst gridHeaderBackgroundColor = getTablePropAttribute(table.attributes, 'tableHeaderBackgroundColor')\n\tconst headerRowSticky = getTablePropAttribute(table.attributes, 'headerRowSticky')\n\tconst headerBorder = getTablePropAttribute(table.attributes, 'headerBorder')\n\tconst bodyAlignment = getTablePropAttribute(table.attributes, 'bodyAlignment')\n\tconst bodyBorder = getTablePropAttribute(table.attributes, 'bodyBorder')\n\tconst bandedRows = getTablePropAttribute(table.attributes, 'bandedRows')\n\tconst bandedRowTextColor = getTablePropAttribute(table.attributes, 'bandedRowTextColor')\n\tconst bandedRowBackgroundColor = getTablePropAttribute(table.attributes, 'bandedRowBackgroundColor')\n\tconst gridLineWidth = getTablePropAttribute(table.attributes, 'gridLineWidth')\n\tconst gridAlignment = block_alignment;\n\tconst horizontalAlignment = getTablePropAttribute(table.attributes, 'horizontalAlignment')\n\tconst verticalAlignment = getTablePropAttribute(table.attributes, 'verticalAlignment')\n\tconst hideTitle = getTablePropAttribute(table.attributes, 'hideTitle')\n\tconsole.log(JSON.stringify(headerBorder, null, 4));\n\n\t/**\n\t * Extract and unpack table classes\n\t */\n\n\n\t/**\n\t * Synchronize PostId\n\t *\n\t * Post ID is assigned a value of '0' upon table creation and can change over the life of a post.\n\t * props.context is authoritative for Post ID so we ensure the table is sync'd to that.\n\t */\n\n\tconsole.log('Is Resolving? = ' + tableIsResolving);\n\tconsole.log('Started Resolving? = ' + tableHasStartedResolving);\n\tconsole.log('Finished Resolving? = ' + tableHasFinishedResolving);\n\tconsole.log('Old Post ID = ' + table.post_id);\n\tconsole.log('New Post ID = ' + props.context.postId);\n\n\tif (tableHasStartedResolving && tableHasFinishedResolving && !awaitingTableEntityCreation && String(props.context.postId) !== table.post_id) {\n\t\tsetTableAttributes(table.table_id, 'post_id', '', 'PROP', String(props.context.postId))\n\t\tsaveTableEntity(table.table_id)\n\t}\n\n\t/**\n\t * Perform clean-up for deleted table block at time of deletion\n\t */\n\tuseEffect(() => {\n\n\t\treturn () => {\n\t\t\tsetTableAttributes(table.table_id, 'unmounted_blockid', '', 'PROP', blockProps[\"data-block\"], false)\n\t\t\t// saveTableEntity(table.table_id)\n\t\t};\n\t}, [])\n\n\tconst tableColumnLength = (JSON.stringify(table.table) === '{}' || blockTableStatus == 'None') ? 0 : table.columns.length\n\tconst tableRowLength = (JSON.stringify(table.table) === '{}' || blockTableStatus == 'None') ? 0 : table.rows.length\n\n\t/**\n\t * Set state for number of columns and rows when the number of table rows has changes\n\t *\n\t * TODO: Verify this is still needed following update to table store to track all tables in editor\n\t */\n\tuseEffect(() => {\n\t\tif (!isNewBlock) {\n\t\t\tif (tableColumnLength != numColumns) {\n\t\t\t\tsetNumColumns(tableColumnLength);\n\t\t\t}\n\t\t\tif (tableRowLength != numRows) {\n\t\t\t\tsetNumRows(tableRowLength);\n\t\t\t}\n\t\t}\n\t},\n\t\t[tableColumnLength, tableRowLength]\n\t)\n\n\tconsole.log('Table ID from Block - ' + table_id);\n\tconsole.log('Block Table Ref from Block - ' + block_table_ref);\n\n\t/**\n\t * Called upon event to add a column\n\t *\n\t * @param {*} tableId\n\t * @param {*} columnId\n\t * @returns\n\t */\n\tfunction insertColumn(tableId, columnId) {\n\t\tconst newColumn = getDefaultColumn(tableId, columnId)\n\t\tvar tableCells = []\n\n\t\tfor (let i = 0; i < numRows; i++) {\n\t\t\tif (i === 0) {\n\t\t\t\tlet cell = getDefaultCell(tableId, columnId, i, 'Border')\n\t\t\t\ttableCells.push(cell)\n\t\t\t} else {\n\t\t\t\tlet cell = getDefaultCell(tableId, columnId, i)\n\t\t\t\ttableCells.push(cell)\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('ADDING COLUMN')\n\t\tconsole.log('ColumnId = ' + columnId)\n\t\tconsole.log(newColumn)\n\t\tconsole.log(tableCells)\n\n\t\taddColumn(tableId, columnId, newColumn, tableCells)\n\n\t\tconsole.log('Update coreStore');\n\t\tsetTableStale(false)\n\t\treturn (updateTableEntity(tableId));\n\t}\n\n\t/**\n\t * Called upon event to add a row\n\t *\n\t * @param {*} tableId\n\t * @param {*} rowId\n\t * @returns\n\t */\n\tfunction insertRow(tableId, rowId) {\n\t\tconst newRow = getDefaultRow(tableId, rowId)\n\t\tvar tableCells = []\n\n\t\tfor (let i = 0; i < numColumns; i++) {\n\t\t\tif (i === 0) {\n\t\t\t\tlet cell = getDefaultCell(tableId, i, rowId, 'Border')\n\t\t\t\t// cell.content =\n\t\t\t\ttableCells.push(cell)\n\t\t\t} else {\n\t\t\t\tlet cell = getDefaultCell(tableId, i, rowId)\n\t\t\t\ttableCells.push(cell)\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('ADDING ROW')\n\t\tconsole.log('RowId = ' + rowId)\n\t\tconsole.log(newRow)\n\t\tconsole.log(tableCells)\n\n\t\taddRow(tableId, rowId, newRow, tableCells)\n\n\t\tconsole.log('Update coreStore');\n\t\tsetTableStale(false)\n\t\treturn (updateTableEntity(tableId));\n\t}\n\n\t/**\n\t * Called upon event to delete a column\n\t *\n\t * @param {*} tableId\n\t * @param {*} columnId\n\t * @returns\n\t */\n\tfunction deleteColumn(tableId, columnId) {\n\t\tconsole.log('Deleting Column - ' + columnId)\n\t\tremoveColumn(tableId, columnId)\n\n\t\tconsole.log('Update coreStore');\n\t\tsetTableStale(false)\n\t\treturn (updateTableEntity(tableId));\n\t}\n\n\t/**\n\t * Called upon event to delete a row\n\t *\n\t * @param {*} tableId\n\t * @param {*} rowId\n\t * @returns\n\t */\n\tfunction deleteRow(tableId, rowId) {\n\t\tconsole.log('Deleting Row - ' + rowId)\n\t\tremoveRow(tableId, rowId)\n\n\t\tconsole.log('Update coreStore');\n\t\tsetTableStale(false)\n\t\treturn (updateTableEntity(tableId));\n\t}\n\n\n\t/**\n\t * Update table store to reflect changes made to EXISTING table attributes\n\t *\n\t *\n\t * @param {*} tableId - Id of table to update\n\t * @param {*} attribute - Table Object Attribute\n\t * @param {*} id - Array Index Id\n\t * @param {*} type - See Below\n\t * @param {*} value - New attribute value\n\t * @param {*} persist - Write update to entity record\n\t * @returns\n\t *\n\t * Valid Types:\n\t * - CONTENT - Cell Content\n\t * - ATTRIBUTES - Array of attributes\n\t * - CLASSES - Array of Classes\n\t * - PROP - Table Property\n\t */\n\n\tfunction setTableAttributes(tableId, attribute, id, type, value, persist = true) {\n\n\t\tconsole.log('Table Attribute Change: attribute - ' + attribute + ', id - ' + id + ', type - ' + type + ', value - ' + value)\n\t\tlet updatedTable;\n\n\t\tswitch (type) {\n\t\t\tcase 'CONTENT':\n\t\t\t\t{\n\t\t\t\t\tif (attribute === 'cell') {\n\t\t\t\t\t\tupdateCell(tableId, id, 'content', value)\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'ATTRIBUTES':\n\t\t\t\t{\n\t\t\t\t\tif (attribute === 'cell') {\n\t\t\t\t\t\tconsole.log('...Updating Cell')\n\t\t\t\t\t\tupdateCell(tableId, id, 'attributes', value)\n\t\t\t\t\t} else if (attribute === 'row') {\n\t\t\t\t\t\tconsole.log('...Updating Row')\n\t\t\t\t\t\tconsole.log(value)\n\t\t\t\t\t\tsetRowAttributes(value)\n\t\t\t\t\t\tupdateRow(tableId, id, 'attributes', value)\n\t\t\t\t\t} else if (attribute === 'column') {\n\t\t\t\t\t\tconsole.log('...Updating Column')\n\t\t\t\t\t\tconsole.log(value)\n\t\t\t\t\t\tsetColumnAttributes(value)\n\t\t\t\t\t\tupdateColumn(tableId, id, 'attributes', value)\n\t\t\t\t\t} else if (attribute === 'table') {\n\t\t\t\t\t\tconsole.log('...Updating Table Attributes')\n\t\t\t\t\t\tconsole.log(value)\n\t\t\t\t\t\tupdateTableProp(tableId, 'attributes', value)\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'CLASSES':\n\t\t\t\t{\n\t\t\t\t\tif (attribute === 'cell') {\n\t\t\t\t\t\tupdateCell(tableId, id, 'classes', value)\n\t\t\t\t\t} else if (attribute === 'column') {\n\t\t\t\t\t\tupdateColumn(tableId, id, 'classes', value)\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'PROP':\n\t\t\t\t{\n\t\t\t\t\tupdateTableProp(tableId, attribute, value)\n\n\t\t\t\t\t// Update Table Status only table change is for status and the\n\t\t\t\t\t// call must bypass the regular persist (persist === false)\n\t\t\t\t\tif (attribute === 'unmounted_blockid') {\n\t\t\t\t\t\tupdateTableEntity(tableId, 'unknown')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.log('Unrecognized Attibute Type')\n\t\t}\n\t\tconsole.log('Update coreStore');\n\t\tsetTableStale(false)\n\t\tif (persist) {\n\t\t\treturn (updateTableEntity(tableId));\n\t\t}\n\t}\n\n\t/**\n\t * Add/remove grid control column and row when table attribute of \"Show Grid\" is checked\n\t *\n\t * @param {*} table\n\t * @param {*} isChecked\n\t * @returns\n\t */\n\tfunction onToggleBorders(table, isChecked) {\n\n\t\tconsole.log('TOGGLING BORDER')\n\t\tconsole.log(table);\n\t\tconsole.log('Number Columns before update = ' + numColumns)\n\n\t\t/**\n\t\t * Remove borders if unchecked\n\t\t */\n\t\tif (isChecked === false) {\n\t\t\tsetNumColumns(numColumns - 1)\n\t\t\tsetNumRows(numRows - 1)\n\n\t\t\tvar updatedRows = table.rows\n\t\t\t\t.filter((row) =>\n\t\t\t\t\trow.row_id !== '0'\n\t\t\t\t)\n\t\t\tvar updatedColumns = table.columns\n\t\t\t\t.filter((column) =>\n\t\t\t\t\tcolumn.column_id !== '0'\n\t\t\t\t)\n\t\t\tvar updatedCells = table.cells\n\t\t\t\t.filter((cell) =>\n\t\t\t\t\tcell.row_id !== '0' && cell.column_id !== '0'\n\t\t\t\t)\n\t\t\tconsole.log(updatedCells)\n\t\t\tupdateTableBorder(table.table_id, updatedRows, updatedColumns, updatedCells)\n\n\t\t} else {\n\n\t\t\t/**\n\t\t\t* Create borders if checked\n\t\t\t*/\n\t\t\tsetNumColumns(numColumns + 1)\n\t\t\tsetNumRows(numRows + 1)\n\n\t\t\t// Create header row border at top of table\n\t\t\tvar rowBorder = []\n\t\t\trowBorder.push(getDefaultRow(table_id, 0, 'Border'))\n\n\t\t\tvar rowCells = []\n\t\t\tfor (let i = 0; i <= numColumns; i++) {\n\t\t\t\tlet cell = getDefaultCell(table_id, i, 0, 'Border')\n\t\t\t\tconsole.log(cell)\n\t\t\t\trowCells.push(cell);\n\t\t\t}\n\n\t\t\t// Create column border down left side of table\n\t\t\tvar columnBorder = []\n\t\t\tcolumnBorder.push(getDefaultColumn(table_id, 0, 'Border'))\n\n\t\t\tvar columnCells = []\n\t\t\tfor (let i = 1; i <= numRows; i++) {\n\t\t\t\tlet cell = getDefaultCell(table_id, 0, i, 'Border')\n\t\t\t\tcolumnCells.push(cell);\n\t\t\t}\n\n\t\t\t// Sort table parts\n\t\t\tupdatedRows = tableSort('rows', [...table.rows, ...rowBorder])\n\t\t\tupdatedColumns = tableSort('columns', [...table.columns, ...columnBorder])\n\t\t\tupdatedCells = tableSort('cells', [...table.cells, ...rowCells, ...columnCells])\n\n\t\t\t// console.log(table)\n\t\t\t// console.log('Row border - ' + JSON.stringify(rowBorder, null, 4));\n\t\t\t// console.log('Column border - ' + JSON.stringify(columnBorder, null, 4));\n\t\t\t// console.log('Updated columns - ' + JSON.stringify(updatedColumns, null, 4));\n\t\t\t// console.log('Updated cells - ' + JSON.stringify(updatedCells, null, 4));\n\n\t\t\tupdateTableBorder(table.table_id, updatedRows, updatedColumns, updatedCells)\n\t\t}\n\n\t\tsetShowBorders(isChecked);\n\t\tsetTableStale(false)\n\t\treturn;\n\t}\n\n\tfunction createTable(columnCount, rowCount, tableName) {\n\n\t\tconsole.log('FUNCTION - CREATE TABLE')\n\t\tconsole.log('InitialRows - ' + rowCount)\n\t\tconsole.log('InitialColumns - ' + columnCount)\n\n\t\tsetTableStale(false)\n\t\tvar newBlockTableRef = generateBlockTableRef()\n\t\tconst newTable = initTable(newBlockTableRef, columnCount, rowCount, tableName)\n\n\t\tconsole.log(JSON.stringify(newTable, null, 4));\n\t\tprops.setAttributes({ block_table_ref: newBlockTableRef })\n\t\treceiveNewTable(newTable)\n\t\tsetAwaitingTableEntityCreation(true)\n\t\tcreateTableEntity();\n\t\t//\t\tsetBlockTableStatus('New');\n\t}\n\n\tfunction onCreateTable(event) {\n\t\tevent.preventDefault();\n\t\tcreateTable(numColumns, numRows, tableName)\n\t}\n\n\tfunction onChangeInitialColumnCount(num_columns) {\n\t\tlet newNumColumns = num_columns\n\t\tif (num_columns < 1 || num_columns > 50) {\n\t\t\tconst errorText = 'Cannot have ' + num_columns + ' columns.  You must have at least 1 and no more than 50 columns.'\n\t\t\tcreateNotice(\n\t\t\t\t'error',\n\t\t\t\terrorText,\n\t\t\t\t{\n\t\t\t\t\tid: 'invalidNumColumns',\n\t\t\t\t\tisDismissible: true,\n\t\t\t\t\tpoliteness: 'assertive'\n\t\t\t\t});\n\n\t\t\tnewNumColumns = Number(numColumns)\n\t\t} else {\n\t\t\tremoveNotice('invalidNumColumns')\n\t\t}\n\t\tsetNumColumns(newNumColumns)\n\t}\n\n\tfunction onChangeInitialRowCount(num_rows) {\n\t\tlet newNumRows = num_rows\n\t\tif (num_rows < 1 || num_rows > 1000) {\n\t\t\tconst errorText = 'Cannot have ' + num_rows + ' rows.  You must have at least 1 and no more than 1,000 rows.'\n\t\t\tcreateNotice(\n\t\t\t\t'error',\n\t\t\t\terrorText,\n\t\t\t\t{\n\t\t\t\t\tid: 'invalidNumRows',\n\t\t\t\t\tisDismissible: true,\n\t\t\t\t\tpoliteness: 'assertive'\n\t\t\t\t});\n\n\t\t\tnewNumRows = Number(numRows)\n\t\t} else {\n\t\t\tremoveNotice('invalidNumRows')\n\t\t}\n\t\tsetNumRows(newNumRows)\n\t}\n\n\tfunction onUpdateColumn(event, updateType, tableId, columnId, updatedColumnAttributes) {\n\t\tconsole.log('    ...onUpdateColumn');\n\t\tconsole.log(event);\n\t\tconsole.log(updatedColumnAttributes);\n\n\t\tswitch (updateType) {\n\t\t\tcase 'attributes':\n\t\t\t\t{\n\t\t\t\t\tsetTableAttributes(tableId, 'column', columnId, 'ATTRIBUTES', updatedColumnAttributes);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'insert':\n\t\t\t\t{\n\t\t\t\t\tsetOpenColumnRow(0);\n\t\t\t\t\tsetColumnMenuVisible(false);\n\t\t\t\t\tinsertColumn(tableId, columnId);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'delete':\n\t\t\t\t{\n\t\t\t\t\tsetOpenColumnRow(0);\n\t\t\t\t\tsetColumnMenuVisible(false);\n\t\t\t\t\tdeleteColumn(tableId, columnId);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.log('Unrecognized Column Update Type')\n\t\t}\n\t\tconsole.log('Show Borders = ' + showBorders)\n\t}\n\n\tfunction onUpdateRow(event, updateType, tableId, rowId, updatedRowAttributes) {\n\t\tconsole.log('    ...onUpdateRow');\n\t\tconsole.log(event);\n\t\tconsole.log(updatedRowAttributes);\n\n\t\tswitch (updateType) {\n\t\t\tcase 'attributes':\n\t\t\t\t{\n\t\t\t\t\tsetTableAttributes(tableId, 'row', rowId, 'ATTRIBUTES', updatedRowAttributes);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'insert':\n\t\t\t\t{\n\t\t\t\t\tsetOpenColumnRow(0);\n\t\t\t\t\tsetRowMenuVisible(false);\n\t\t\t\t\tinsertRow(tableId, rowId);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'delete':\n\t\t\t\t{\n\t\t\t\t\tsetOpenColumnRow(0);\n\t\t\t\t\tsetRowMenuVisible(false);\n\t\t\t\t\tdeleteRow(tableId, rowId);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.log('Unrecognized Row Update Type')\n\t\t}\n\t\tconsole.log('Show Borders = ' + showBorders)\n\t}\n\n\tfunction onMouseBorderClick(column_id, row_id, table, event) {\n\n\t\tconsole.log('MOUSE CLICKED IN BORDER')\n\t\tconsole.log('Column = ' + column_id)\n\t\tconsole.log('Row = ' + row_id)\n\t\tconsole.log(table)\n\t\tconsole.log(event)\n\n\t\tif (row_id === '0' && column_id !== '0') {\n\t\t\tconsole.log('Opening Column ' + column_id)\n\t\t\tlet compareColumnId = column_id\n\t\t\tconst clickedColumn = table.columns.find(({ column_id }) => column_id === compareColumnId)\n\t\t\tconsole.log(clickedColumn)\n\t\t\tsetColumnAttributes(clickedColumn.attributes)\n\t\t\tsetColumnMenuVisible(true)\n\t\t\tsetOpenColumnRow(column_id)\n\t\t}\n\n\t\tif (row_id !== '0' && column_id === '0') {\n\t\t\tconsole.log('Opening Row ' + row_id)\n\t\t\tlet compareRowId = row_id\n\t\t\tconst clickedRow = table.rows.find(({ row_id }) => row_id === compareRowId)\n\t\t\tconsole.log(clickedRow)\n\t\t\tsetRowAttributes(clickedRow.attributes)\n\t\t\tsetRowMenuVisible(true)\n\t\t\tsetOpenColumnRow(row_id)\n\t\t}\n\t\t// alert('Mouse clicked on column')\n\t\t// return <ColumnMenu>Column Menu</ColumnMenu>\n\t\tsetTableStale(false)\n\n\t}\n\n\t/**\n\t* Hide the table title from displaying\n\t*\n\t* @param {*} table\n\t* @param {*} isChecked\n\t*/\n\tfunction onHideTitle(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\thideTitle: isChecked\n\t\t}\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t* Allow the table to scroll horizontally\n\t*\n\t* @param {*} table\n\t* @param {*} isChecked\n\t*/\n\tfunction onAllowHorizontalScroll(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\tallowHorizontalScroll: isChecked\n\t\t}\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t * Show colored bands on even numbered table rows\n\t *\n\t * @param {*} table\n\t * @param {*} isChecked\n\t */\n\tfunction onShowBandedRows(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\tbandedRows: isChecked\n\t\t}\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t* Show colored bands on even numbered table rows\n\t*\n\t* @param {*} table\n\t* @param {*} color\n\t*/\n\tfunction onBandedRowColor(table, type, color) {\n\t\tlet updatedTableAttributes = ''\n\t\tif (type == 'background') {\n\t\t\tupdatedTableAttributes = {\n\t\t\t\t...table.attributes,\n\t\t\t\tbandedRowBackgroundColor: color\n\t\t\t}\n\t\t\tconsole.log(updatedTableAttributes)\n\t\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t\t}\n\n\t\tif (type == 'text') {\n\t\t\tupdatedTableAttributes = {\n\t\t\t\t...table.attributes,\n\t\t\t\tbandedRowTextColor: color\n\t\t\t}\n\t\t\tconsole.log(updatedTableAttributes)\n\t\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t\t}\n\t}\n\n\t/**\n\t* Make first table row the Header\n\t*\n\t* @param {*} table\n\t* @param {*} isChecked\n\t*/\n\tfunction onEnableHeaderRow(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\tenableHeaderRow: isChecked,\n\t\t\theaderRowSticky: false\n\t\t}\n\t\tconsole.log(updatedTableAttributes);\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\n\t\tconst updatedRowAttributes = {\n\t\t\t...table.rows.find(x => x.row_id === '1').attributes,\n\t\t\tisHeader: isChecked ? true : false\n\t\t}\n\n\t\tconsole.log(updatedRowAttributes);\n\t\tsetTableAttributes(table.table_id, 'row', '1', 'ATTRIBUTES', updatedRowAttributes);\n\t}\n\n\t/**\n\t* Make first table row the Header\n\t*\n\t* @param {*} table\n\t* @param {*} alignmentValue\n\t*/\n\tfunction onAlignHeader(table, alignment) {\n\t\tconsole.log('ON HEADER ALIGNMENT')\n\t\tconsole.log(alignment)\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\theaderAlignment: alignment\n\t\t}\n\t\tconsole.log(updatedTableAttributes)\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t* Make first table row the Header\n\t*\n\t* @param {*} table\n\t* @param {*} isChecked\n\t*/\n\tfunction onHeaderBorder(table, border) {\n\t\tconsole.log('ON HEADER BORDER')\n\t\tconsole.log(border)\n\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\theaderBorder: border\n\t\t}\n\t\tconsole.log(updatedTableAttributes)\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t* Make first table row the Header\n\tallowHorizontalScroll\n\t*\n\t* @param {*} table\n\t* @param {*} isChecked\n\t*/\n\tfunction onHeaderRowSticky(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\theaderRowSticky: isChecked\n\t\t}\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t* Make first table row the Header\n\t*\n\t* @param {*} table\n\t* @param {*} alignmentValue\n\t*/\n\tfunction onAlignBody(table, alignment) {\n\t\tconsole.log('ON BODY  ALIGNMENT')\n\t\tconsole.log(alignment)\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\tbodyAlignment: alignment\n\t\t}\n\t\tconsole.log(updatedTableAttributes)\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t* Make first table row the Header\n\t*\n\t* @param {*} table\n\t* @param {*} isChecked\n\t*/\n\tfunction onBodyBorder(table, border) {\n\t\tconsole.log('ON BODY BORDER')\n\t\tconsole.log(border)\n\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\tbodyBorder: border\n\t\t}\n\t\tconsole.log(updatedTableAttributes)\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\n\n\t/**\n\t  * Show inner grid lines\n\t*\n\t* @param {*} table\n\t* @param {*} isChecked\n\t */\n\tfunction onShowGridLines(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\tshowGridLines: isChecked\n\t\t}\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t  * Inner grid line width\n\t*\n\t* @param {*} table\n\t* @param {*} gridLineWidth\n\t */\n\tfunction onGridLineWidth(table, gridLineWidth) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.attributes,\n\t\t\tgridLineWidth: Number(gridLineWidth)\n\t\t}\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\tconst gridColumnStyle = processColumns(isNewBlock, tableIsResolving, enableFutureFeatures, table.columns)\n\tconst gridHeaderRowStyle = processHeaderRow(isNewBlock, tableIsResolving, table.rows)\n\tconst gridBodyRowStyle = processBodyRows(isNewBlock, tableIsResolving, table.rows)\n\tconst startGridHeaderRowNbrStyle = showBorders ? 2 : 1\n\tconst endGridHeaderRowNbrStyle = endGridRowNbr(1, 'Header', numRows, enableHeaderRow, showBorders, false)\n\tconst startGridBodyRowNbrStyle = startGridRowNbr(enableHeaderRow, showBorders)\n\tconst endGridBodyRowNbrStyle = endGridRowNbr(startGridBodyRowNbrStyle, 'Body', numRows, enableHeaderRow, showBorders, false)\n\tconst horizontalScrollStyle = allowHorizontalScroll ? 'auto' : 'hidden';\n\n\tconst gridBandedRowTextColor = gridBandedRowTextColorStyle(isNewBlock, tableIsResolving, bandedRowTextColor)\n\tconst gridBandedRowBackgroundColor = gridBandedRowBackgroundColorStyle(isNewBlock, tableIsResolving, bandedRowBackgroundColor)\n\tconst gridShowInnerLines = gridInnerBorderStyle(isNewBlock, tableIsResolving, showGridLines)\n\tconst gridInnerLineWidth = gridInnerBorderWidthStyle(isNewBlock, tableIsResolving, showGridLines, gridLineWidth)\n\n\tconst headerRowStickyStyle = headerRowSticky ? 'auto' : 'hidden';\n\tconst headerRowStickyClass = headerRowSticky ? 'grid-control__header--sticky ' : '';\n\tconst gridHeaderBackgroundColorStyle = getGridHeaderBackgroundColorStyle(isNewBlock, tableIsResolving, gridHeaderBackgroundColor, blockProps.style.backgroundColor)\n\n\n\t/**\n\t * Header Styling\n\t */\n\tconst headerTextAlignmentStyle = getHeaderTextAlignmentStyle(isNewBlock, tableIsResolving, headerAlignment)\n\tconst headerBorderStyleType = getBorderStyleType(headerBorder)\n\t// Top header border\n\tconst headerBorderTopColor = getBorderStyle(headerBorder, 'top', 'color', headerBorderStyleType);\n\tconst headerBorderTopStyle = getBorderStyle(headerBorder, 'top', 'style', headerBorderStyleType);\n\tconst headerBorderTopWidth = getBorderStyle(headerBorder, 'top', 'width', headerBorderStyleType);\n\n\t// Right header border\n\tconst headerBorderRightColor = getBorderStyle(headerBorder, 'right', 'color', headerBorderStyleType);\n\tconst headerBorderRightStyle = getBorderStyle(headerBorder, 'right', 'style', headerBorderStyleType);\n\tconst headerBorderRightWidth = getBorderStyle(headerBorder, 'right', 'width', headerBorderStyleType);\n\n\t// Bottom header border\n\tconst headerBorderBottomColor = getBorderStyle(headerBorder, 'bottom', 'color', headerBorderStyleType);\n\tconst headerBorderBottomStyle = getBorderStyle(headerBorder, 'bottom', 'style', headerBorderStyleType);\n\tconst headerBorderBottomWidth = getBorderStyle(headerBorder, 'bottom', 'width', headerBorderStyleType);\n\n\t// Left header border\n\tconst headerBorderLeftColor = getBorderStyle(headerBorder, 'left', 'color', headerBorderStyleType);\n\tconst headerBorderLeftStyle = getBorderStyle(headerBorder, 'left', 'style', headerBorderStyleType);\n\tconst headerBorderLeftWidth = getBorderStyle(headerBorder, 'left', 'width', headerBorderStyleType);\n\n\t/**\n\t * Body Styling\n\t */\n\tconst bodyTextAlignmentStyle = getHeaderTextAlignmentStyle(isNewBlock, tableIsResolving, bodyAlignment)\n\tconst bodyBorderStyleType = getBorderStyleType(bodyBorder)\n\t// Top body border\n\tconst bodyBorderTopColor = getBorderStyle(bodyBorder, 'top', 'color', bodyBorderStyleType);\n\tconst bodyBorderTopStyle = getBorderStyle(bodyBorder, 'top', 'style', bodyBorderStyleType);\n\tconst bodyBorderTopWidth = getBorderStyle(bodyBorder, 'top', 'width', bodyBorderStyleType);\n\n\t// Right body border\n\tconst bodyBorderRightColor = getBorderStyle(bodyBorder, 'right', 'color', bodyBorderStyleType);\n\tconst bodyBorderRightStyle = getBorderStyle(bodyBorder, 'right', 'style', bodyBorderStyleType);\n\tconst bodyBorderRightWidth = getBorderStyle(bodyBorder, 'right', 'width', bodyBorderStyleType);\n\n\t// Bottom body border\n\tconst bodyBorderBottomColor = getBorderStyle(bodyBorder, 'bottom', 'color', bodyBorderStyleType);\n\tconst bodyBorderBottomStyle = getBorderStyle(bodyBorder, 'bottom', 'style', bodyBorderStyleType);\n\tconst bodyBorderBottomWidth = getBorderStyle(bodyBorder, 'bottom', 'width', bodyBorderStyleType);\n\n\t// Left body border\n\tconst bodyBorderLeftColor = getBorderStyle(bodyBorder, 'left', 'color', bodyBorderStyleType);\n\tconst bodyBorderLeftStyle = getBorderStyle(bodyBorder, 'left', 'style', bodyBorderStyleType);\n\tconst bodyBorderLeftWidth = getBorderStyle(bodyBorder, 'left', 'width', bodyBorderStyleType);\n\n\n\tconsole.log('Grid Column Style = ' + gridColumnStyle)\n\t// const gridStyle = setGridStyle(isNewBlock, tableIsResolving, table)\n\tconsole.log('Banded Grid Text Color = ' + gridBandedRowTextColor)\n\tconsole.log('Banded Grid Background Color = ' + gridBandedRowBackgroundColor)\n\n\tconsole.log('MATCH VALUE FOR TABLE:')\n\tconsole.log(table)\n\t// console.log(isRetrievingTable(table))\n\tconsole.log(JSON.stringify(table))\n\tconsole.log('Is Block New - ' + isNewBlock)\n\tconsole.log('Block Table Status - ' + blockTableStatus);\n\tconsole.log('Is Table Resolving - ' + tableIsResolving);\n\tconsole.log('gridColumnStyle = ' + gridColumnStyle);\n\tconsole.log('gridRowHeaderStyle = ' + gridHeaderRowStyle);\n\tconsole.log('gridRowBodyStyle = ' + gridBodyRowStyle);\n\tconsole.log(blockProps);\n\tconsole.log(blockProps.style.backgroundColor);\n\n\tif (!tableIsResolving) {\n\t\t// console.log(table.attributes?.bandedRows)\n\t}\n\n\treturn (\n\t\t<div {...blockProps} >\n\t\t\t{!isNewBlock && !tableIsResolving && (\n\t\t\t\t<>\n\t\t\t\t\t<BlockControls>\n\t\t\t\t\t\t<BlockAlignmentToolbar\n\t\t\t\t\t\t\tvalue={block_alignment}\n\t\t\t\t\t\t\tonChange={(e) => props.setAttributes({ block_alignment: e })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</BlockControls>\n\n\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t<Panel>\n\t\t\t\t\t\t\t<PanelBody title=\"Definition\" initialOpen={true}>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<div className=\"grid-control__inspector-controls--read-only\">\n\t\t\t\t\t\t\t\t\t\t<span className=\"grid-control__inspector-controls--read-only-label\">Table Name:</span>\n\t\t\t\t\t\t\t\t\t\t{removeTags(table.table_name)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<div className=\"grid-control__inspector-controls--read-only\">\n\t\t\t\t\t\t\t\t\t\t<span className=\"grid-control__inspector-controls--read-only-label\">Table Columns/Rows:</span>\n\t\t\t\t\t\t\t\t\t\t{numColumns}/{numRows}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<CheckboxControl label=\"Show table borders\"\n\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\tchecked={showBorders}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onToggleBorders(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<CheckboxControl label=\"Hide Table Title\"\n\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\tchecked={hideTitle}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onHideTitle(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t\t\t<PanelBody title=\"Table Header\" initialOpen={false}>\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<CheckboxControl label=\"First Row as Header?\"\n\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\tchecked={enableHeaderRow}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onEnableHeaderRow(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<CheckboxControl label=\"Freeze Header Row?\"\n\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\tdisabled={!enableHeaderRow}\n\t\t\t\t\t\t\t\t\t\tchecked={headerRowSticky}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onHeaderRowSticky(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<span className=\"inspector-controls-menu__header-alignment--middle\">\n\t\t\t\t\t\t\t\t\t\t<AlignmentControl\n\t\t\t\t\t\t\t\t\t\t\tid=\"header-alignment\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={headerAlignment}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => onAlignHeader(table, e)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label className=\"inspector-controls-nemu__label--left-margin\"\n\t\t\t\t\t\t\t\t\t\t\tfor=\"header-alignment\">\n\t\t\t\t\t\t\t\t\t\t\tText Alignment\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<BorderBoxControl\n\t\t\t\t\t\t\t\t\t\tclassName=\"border-box-workaround\"\n\t\t\t\t\t\t\t\t\t\t__next40pxDefaultSize\n\t\t\t\t\t\t\t\t\t\t__experimentalIsRenderedInSidebar\n\t\t\t\t\t\t\t\t\t\tlabel=\"Borders\"\n\t\t\t\t\t\t\t\t\t\t// hideLabelFromVision=\"false\"\n\t\t\t\t\t\t\t\t\t\tisCompact=\"true\"\n\t\t\t\t\t\t\t\t\t\tcolors={borderBoxColors}\n\t\t\t\t\t\t\t\t\t\tvalue={headerBorder}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onHeaderBorder(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t\t\t<PanelBody title=\"Table Body\" initialOpen={false}>\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<CheckboxControl label=\"Allow Horizontal Acroll?\"\n\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\t\tchecked={allowHorizontalScroll}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onAllowHorizontalScroll(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<span className=\"inspector-controls-menu__header-alignment--middle\">\n\t\t\t\t\t\t\t\t\t\t<AlignmentControl\n\t\t\t\t\t\t\t\t\t\t\tid=\"body-alignment\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={bodyAlignment}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => onAlignBody(table, e)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<label className=\"inspector-controls-menu__label--left-margin\"\n\t\t\t\t\t\t\t\t\t\t\tfor=\"body-alignment\">\n\t\t\t\t\t\t\t\t\t\t\tText Alignment\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<BorderBoxControl\n\t\t\t\t\t\t\t\t\t\tclassName=\"border-box-workaround\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Borders\"\n\t\t\t\t\t\t\t\t\t\thideLabelFromVision=\"false\"\n\t\t\t\t\t\t\t\t\t\tisCompact=\"true\"\n\t\t\t\t\t\t\t\t\t\tcolors={borderBoxColors}\n\t\t\t\t\t\t\t\t\t\tvalue={bodyBorder}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onBodyBorder(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t\t</Panel>\n\t\t\t\t\t</InspectorControls>\n\n\t\t\t\t\t<InspectorControls group=\"styles\">\n\t\t\t\t\t\t<PanelBody title=\"Banded Table Rows\" initialOpen={false}>\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<CheckboxControl label=\"Display Banded Rows\"\n\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\tchecked={bandedRows}\n\t\t\t\t\t\t\t\t\t// checked={true}\n\t\t\t\t\t\t\t\t\tonChange={(e) => onShowBandedRows(table, e)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t<PanelColorSettings\n\t\t\t\t\t\t\t\t__experimentalIsRenderedInSidebar\n\t\t\t\t\t\t\t\ttitle={'Banded Row Color'}\n\t\t\t\t\t\t\t\tcolors={themeColors}\n\t\t\t\t\t\t\t\tcolorSettings={[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvalue: bandedRowTextColor,\n\t\t\t\t\t\t\t\t\t\tonChange: (newColor) => onBandedRowColor(table, 'text', newColor),\n\t\t\t\t\t\t\t\t\t\tlabel: 'Text'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvalue: bandedRowBackgroundColor,\n\t\t\t\t\t\t\t\t\t\tonChange: (newColor) => onBandedRowColor(table, 'background', newColor),\n\t\t\t\t\t\t\t\t\t\tlabel: 'Background'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t\t<PanelBody title=\"Grid Lines\" initialOpen={false}>\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<CheckboxControl label=\"Display Inner Grid Lines\"\n\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\t\tchecked={showGridLines}\n\t\t\t\t\t\t\t\t\tonChange={(e) => onShowGridLines(table, e)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<NumberControl label=\"Inner Grid Line Width\"\n\t\t\t\t\t\t\t\t\tvalue={gridLineWidth}\n\t\t\t\t\t\t\t\t\tlabelPosition=\"side\"\n\t\t\t\t\t\t\t\t\tonChange={(e) => onGridLineWidth(table, e)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t<InspectorControls group=\"typography\">\n\t\t\t\t\t</InspectorControls>\n\n\t\t\t\t\t<div style={{ \"display\": \"block\" }}>\n\t\t\t\t\t\t{!hideTitle &&\n\t\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\t\tid=\"tableTitle\"\n\t\t\t\t\t\t\t\tstyle={{ \"--gridAlignment\": gridAlignment }}\n\t\t\t\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\t\t\t\tallowedFormats={['core/bold', 'core/italic']}\n\t\t\t\t\t\t\t\tonChange={e => setTableAttributes(table_id, 'table_name', '', 'PROP', e)}\n\t\t\t\t\t\t\t\tvalue={table.table_name}>\n\t\t\t\t\t\t\t</RichText>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t<TabbableContainer>\n\t\t\t\t\t\t\t< div className=\"grid-scroller\"\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\"--headerRowSticky\": headerRowStickyStyle,\n\t\t\t\t\t\t\t\t\t// \"--startGridBodyRowNbr\": startGridBodyRowNbrStyle,\n\t\t\t\t\t\t\t\t\t// \"--endGridBodyRowNbr\": endGridBodyRowNbrStyle\n\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t<div className={\"grid-control \" + headerRowStickyClass}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\"--gridTemplateColumns\": gridColumnStyle,\n\t\t\t\t\t\t\t\t\t\t\"--horizontalScroll\": horizontalScrollStyle,\n\t\t\t\t\t\t\t\t\t\t\"--headerRowSticky\": headerRowStickyStyle,\n\t\t\t\t\t\t\t\t\t\t\"--gridNumColumns\": numColumns,\n\t\t\t\t\t\t\t\t\t\t\"--gridNumRows\": numRows,\n\t\t\t\t\t\t\t\t\t\t\"--gridAlignment\": gridAlignment\n\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t{/* Render Table Border Row if present */}\n\t\t\t\t\t\t\t\t\t{showBorders &&\n\t\t\t\t\t\t\t\t\t\t(<div className={\"grid-control__border\"}>\n\t\t\t\t\t\t\t\t\t\t\t{table.cells\n\t\t\t\t\t\t\t\t\t\t\t\t.filter(cell => cell.attributes.border && cell.row_id === '0')\n\t\t\t\t\t\t\t\t\t\t\t\t.map(({ table_id, row_id, column_id, cell_id, content, attributes, classes }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Rendering Body Row Cell' + cell_id)\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst borderContent = setBorderContent(row_id, column_id, content)\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst isOpenCurrentColumnMenu = openCurrentColumnMenu(columnMenuVisible, openColumnRow, column_id)\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst isFirstColumn = column_id === '1' ? true : false;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Show zoom to details column */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isFirstColumn && enableFutureFeatures && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={\"grid-control__border-cells\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t< div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={cell_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={e => onMouseBorderClick(column_id, row_id, table, e)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isOpenCurrentColumnMenu && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ColumnMenu\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttableId={table_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnId={column_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnLabel={borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnAttributes={columnAttributes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenableProFeatures={enableProFeatures}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedColumn={onUpdateColumn}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ColumnMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</div>)\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t{/* Render Table Header Row if present */}\n\t\t\t\t\t\t\t\t\t{table.rows.filter(row => row.attributes.isHeader === true)\n\t\t\t\t\t\t\t\t\t\t.map(({ row_id, attributes }) => {\n\t\t\t\t\t\t\t\t\t\t\tconst renderedRow = row_id;\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"grid-control__header\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--gridTemplateHeaderRows\": gridHeaderRowStyle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--startGridHeaderRowNbr\": startGridHeaderRowNbrStyle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--endGridHeaderRowNbr\": endGridHeaderRowNbrStyle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--headerBorderTopColor\": headerBorderTopColor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--headerBorderTopStype\": headerBorderTopStyle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--headerBorderTopWidth\": headerBorderTopWidth,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--headerBorderRightColor\": headerBorderRightColor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--headerBorderRightStype\": headerBorderRightStyle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--headerBorderRightWidth\": headerBorderRightWidth,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--headerBorderBottomColor\": headerBorderBottomColor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--headerBorderBottomStype\": headerBorderBottomStyle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--headerBorderBottomWidth\": headerBorderBottomWidth,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--headerBorderLeftColor\": headerBorderLeftColor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--headerBorderLeftStype\": headerBorderLeftStyle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--headerBorderLeftWidth\": headerBorderLeftWidth,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--headerTextAlignment\": headerTextAlignmentStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{table.cells\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.filter(cell => cell.row_id === renderedRow)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.map(({ table_id, row_id, column_id, cell_id, content, attributes, classes }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isFirstColumn = column_id === '1' ? true : false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isBorder = attributes.border;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst borderContent = setBorderContent(row_id, column_id, content)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isOpenCurrentRowMenu = openCurrentRowMenu(rowMenuVisible, openColumnRow, row_id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet showGridLinesCSS = gridShowInnerLines\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet gridLineWidthCSS = gridInnerLineWidth\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Show zoom to details column */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isFirstColumn && isBorder && enableFutureFeatures && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={\"grid-control__border-cells\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isBorder && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={cell_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={e => onMouseBorderClick(column_id, row_id, table, e)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isOpenCurrentRowMenu && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RowMenu\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttableId={table_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowId={row_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowLabel={borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowAttributes={rowAttributes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRow={onUpdateRow}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</RowMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Show zoom to details column */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isFirstColumn && enableFutureFeatures && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t< div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"grid-control__header-cells\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--showGridLines\": showGridLinesCSS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--gridLineWidth\": gridLineWidthCSS\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></div >\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!isBorder && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={cell_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"grid-control__header-cells\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--showGridLines\": showGridLinesCSS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--gridLineWidth\": gridLineWidthCSS\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setTableAttributes(table_id, 'cell', cell_id, 'CONTENT', e)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={content}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</RichText>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</div >\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t\t\t\t{/* Render Table Body */}\n\t\t\t\t\t\t\t\t\t<div className={\"grid-control__body\"}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\"--gridTemplateBodyRows\": gridBodyRowStyle,\n\t\t\t\t\t\t\t\t\t\t\t\"--startGridBodyRowNbr\": startGridBodyRowNbrStyle,\n\t\t\t\t\t\t\t\t\t\t\t\"--endGridBodyRowNbr\": endGridBodyRowNbrStyle,\n\t\t\t\t\t\t\t\t\t\t\t\"--bodyBorderTopColor\": bodyBorderTopColor,\n\t\t\t\t\t\t\t\t\t\t\t\"--bodyBorderTopStype\": bodyBorderTopStyle,\n\t\t\t\t\t\t\t\t\t\t\t\"--bodyBorderTopWidth\": bodyBorderTopWidth,\n\t\t\t\t\t\t\t\t\t\t\t\"--bodyBorderRightColor\": bodyBorderRightColor,\n\t\t\t\t\t\t\t\t\t\t\t\"--bodyBorderRightStype\": bodyBorderRightStyle,\n\t\t\t\t\t\t\t\t\t\t\t\"--bodyBorderRightWidth\": bodyBorderRightWidth,\n\t\t\t\t\t\t\t\t\t\t\t\"--bodyBorderBottomColor\": bodyBorderBottomColor,\n\t\t\t\t\t\t\t\t\t\t\t\"--bodyBorderBottomStype\": bodyBorderBottomStyle,\n\t\t\t\t\t\t\t\t\t\t\t\"--bodyBorderBottomWidth\": bodyBorderBottomWidth,\n\t\t\t\t\t\t\t\t\t\t\t\"--bodyBorderLeftColor\": bodyBorderLeftColor,\n\t\t\t\t\t\t\t\t\t\t\t\"--bodyBorderLeftStype\": bodyBorderLeftStyle,\n\t\t\t\t\t\t\t\t\t\t\t\"--bodyBorderLeftWidth\": bodyBorderLeftWidth,\n\t\t\t\t\t\t\t\t\t\t\t\"--bodyTextAlignment\": bodyTextAlignmentStyle\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t{/* Render Table Body Row Wrapper*/}\n\t\t\t\t\t\t\t\t\t\t{table.rows.filter(row => row.attributes.isHeader !== true && row.row_id !== '0')\n\t\t\t\t\t\t\t\t\t\t\t.map(({ row_id, attributes }) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst renderedRow = row_id;\n\t\t\t\t\t\t\t\t\t\t\t\t// console.log('Rendering Body Row ' + renderedRow)\n\n\t\t\t\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t\t\t\t * Set calculated class names\n\t\t\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\t\t\tlet calculatedClasses = ''\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst bandedRowOffset = enableHeaderRow ? 1 : 0\n\t\t\t\t\t\t\t\t\t\t\t\tif (bandedRows && bandedRowOffset == 0 && Number(row_id) % 2 === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcalculatedClasses = calculatedClasses + 'grid-control__body-rows--banded-row '\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (bandedRows && bandedRowOffset == 1 && Number(row_id) > 1 && (Number(row_id) + bandedRowOffset) % 2 === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcalculatedClasses = calculatedClasses + 'grid-control__body-rows--banded-row '\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={\"grid-control__body-row \" + calculatedClasses}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--bandedRowTextColor\": gridBandedRowTextColor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--bandedRowBackgroundColor\": gridBandedRowBackgroundColor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Render Table Body Row Cells*/}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{table.cells\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.filter(cell => cell.row_id === renderedRow)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.map(({ table_id, row_id, column_id, cell_id, content, attributes, classes }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// console.log('Rendering Body Row Cell' + cell_id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t * Set general processing variables\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isFirstColumn = column_id === '1' ? true : false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isBorder = attributes.border;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst borderContent = setBorderContent(row_id, column_id, content)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isOpenCurrentRowMenu = openCurrentRowMenu(rowMenuVisible, openColumnRow, row_id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet showGridLinesCSS = gridShowInnerLines\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet gridLineWidthCSS = gridInnerLineWidth\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Show zoom to details column */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isFirstColumn && isBorder && enableFutureFeatures && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={\"grid-control__border-cells\"} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isBorder && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={cell_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={e => onMouseBorderClick(column_id, row_id, table, e)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isOpenCurrentRowMenu && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RowMenu\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttableId={table_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowId={row_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowLabel={borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowAttributes={rowAttributes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRow={onUpdateRow}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</RowMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* Show zoom to details column */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{isFirstColumn && !isBorder && enableFutureFeatures && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"grid-control__body-cells grid-control__body-cells--zoom\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--showGridLines\": showGridLinesCSS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--gridLineWidth\": gridLineWidthCSS\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={search}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!isBorder && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={cell_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={'grid-control__body-cells ' + classes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--showGridLines\": showGridLinesCSS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--gridLineWidth\": gridLineWidthCSS\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setTableAttributes(table_id, 'cell', cell_id, 'CONTENT', e)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={content}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</RichText>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div >\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</TabbableContainer>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)\n\t\t\t}\n\n\t\t\t{\n\t\t\t\t!isNewBlock && tableIsResolving && (\n\t\t\t\t\t<Spinner>Retrieving Table Data</Spinner>\n\t\t\t\t)\n\t\t\t}\n\n\n\t\t\t{\n\t\t\t\tisNewBlock && (\n\t\t\t\t\t<Placeholder\n\t\t\t\t\t\tlabel={__('Dynamic Table')}\n\t\t\t\t\t\ticon={<BlockIcon icon={icon} showColors />}\n\t\t\t\t\t\tinstructions={__('Create a new dynamic table.')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-form\"\n\t\t\t\t\t\t\tonSubmit={onCreateTable}\n\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t<InputControl\n\t\t\t\t\t\t\t\tlabel={__('Table Name')}\n\t\t\t\t\t\t\t\tplaceholder=\"New Table\"\n\t\t\t\t\t\t\t\trequired=\"true\"\n\t\t\t\t\t\t\t\tonChange={e => setTableName(e)}\n\t\t\t\t\t\t\t\tvalue={tableName}\n\t\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-input\"\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\tlabel={__('Table Columns')}\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\trequired=\"true\"\n\t\t\t\t\t\t\t\tvalue={numColumns}\n\t\t\t\t\t\t\t\tonChange={e => onChangeInitialColumnCount(e)}\n\t\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-input\"\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\tlabel={__('Table Rows')}\n\t\t\t\t\t\t\t\trequired=\"true\"\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\tvalue={numRows}\n\t\t\t\t\t\t\t\tonChange={e => onChangeInitialRowCount(e)}\n\t\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-input\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-button\"\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{__('Create Table')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Placeholder>\n\t\t\t\t)\n\t\t\t}\n\t\t</div >\n\t)\n}\n","import { useState, useEffect } from '@wordpress/element';\r\nimport { usePrevious } from \"@wordpress/compose\";\r\nimport { useSelect } from '@wordpress/data';\r\n\r\n/**\r\n * Returns `true` if post changes are saved, otherwise `false`.\r\n * \r\n * @returns {boolean}\r\n */\r\nexport const usePostChangesSaved = () => {\r\n    console.log('In After Save Hook')\r\n\r\n    const [areChangesSaved, setAreChangesSaved] = useState(false);\r\n    const { hasUnsavedChanges } = useSelect((select) => {\r\n        // console.log('Getting Save Post Status')\r\n        return {\r\n            hasUnsavedChanges: select('core/editor').isEditedPostDirty(),\r\n        }\r\n    })\r\n    const hadUnsavedChanges = usePrevious(hasUnsavedChanges)\r\n\r\n    useEffect(() => {\r\n        if (!hasUnsavedChanges && hadUnsavedChanges) {\r\n            setAreChangesSaved(true);\r\n        }\r\n        if (hasUnsavedChanges) {\r\n            setAreChangesSaved(false);\r\n        }\r\n\r\n    }, [hasUnsavedChanges, hadUnsavedChanges]);\r\n\r\n    // console.log('Post Saved = ' + areChangesSaved)\r\n    return areChangesSaved;\r\n};","import { registerBlockType } from '@wordpress/blocks';\nimport './style.scss';\nimport Edit from './edit';\nimport metadata from './block.json';\n\n// dynamic-tables/dynamic-tables\nconsole.log(metadata.name)\n\nregisterBlockType(metadata.name, {\n\t// registerBlockType('dynamic-tables/dynamic-tables', {\n\t// From  edit.js\n\tapiVersion: 3,\n\tedit: Edit,\n\tsave: function (props) {\n\t\treturn null\n\t},\n});\n","/**\r\n * Establish grid css grid-template-columns based upon attributes associated with columns\r\n * \r\n * @param {*} isNewBlock \r\n * @param {*} tableIsResolving \r\n * @param {*} columns \r\n * @returns \r\n */\r\nexport function processColumns(isNewBlock, tableIsResolving, enableFutureFeatures, columns) {\r\n    if (isNewBlock || tableIsResolving) {\r\n        return undefined\r\n    }\r\n\r\n    let newGridColumnStyle = ''\r\n    {\r\n        columns.map(({ column_id, column_name, attributes, classes }) => {\r\n            console.log('Column ID - ' + newGridColumnStyle)\r\n            console.log(attributes)\r\n            const { columnWidthType,\r\n                minWidth,\r\n                minWidthUnits,\r\n                maxWidth,\r\n                maxWidthUnits,\r\n                fixedWidth,\r\n                fixedWidthUnits,\r\n                disableForTablet,\r\n                disableForPhone\r\n            } = attributes;\r\n\r\n            let sizing = '';\r\n\r\n            if (column_id === '1' && enableFutureFeatures) {\r\n                newGridColumnStyle = newGridColumnStyle + '40px '\r\n            }\r\n            switch (columnWidthType) {\r\n                case 'Proportional':\r\n                    {\r\n                        if (minWidth > 0) {\r\n                            sizing = 'minmax(' + minWidth + minWidthUnits + ', ' + maxWidth + 'fr) '\r\n                        } else (\r\n                            // sizing = '1fr '\r\n                            sizing = maxWidth + 'fr '\r\n                        )\r\n                        newGridColumnStyle = newGridColumnStyle + sizing;\r\n                        break;\r\n                    }\r\n                case 'Auto':\r\n                    {\r\n                        newGridColumnStyle = newGridColumnStyle + 'auto ';\r\n                        break;\r\n                    }\r\n                case 'Fixed':\r\n                    {\r\n                        newGridColumnStyle = newGridColumnStyle + fixedWidth + fixedWidthUnits + ' ';\r\n                        break;\r\n                    }\r\n                case 'Custom':\r\n                    {\r\n                        sizing = 'minmax(' + minWidth + minWidthUnits + ', ' + maxWidth + maxWidthUnits + ') '\r\n                        newGridColumnStyle = newGridColumnStyle + sizing;\r\n                        break;\r\n                    }\r\n                default:\r\n                    console.log('Unrecognized Attibute Type')\r\n            }\r\n\r\n            // if (column_id === '0') {\r\n            // \tnewGridColumnStyle = newGridColumnStyle + '20px ';\r\n            // } else {\r\n            // \tnewGridColumnStyle = newGridColumnStyle + 'auto ';\r\n            // }\r\n        })\r\n    }\r\n    console.log('grid-template-columns = ' + newGridColumnStyle)\r\n    // setTableStale(false)\r\n    return newGridColumnStyle\r\n}\r\n\r\n/**\r\n * Establish grid css grid-template-rowss based upon attributes associated with rows\r\n * \r\n * @param {*} isNewBlock \r\n * @param {*} tableIsResolving \r\n * @param {*} rows \r\n * @returns \r\n */\r\nexport function processHeaderRow(isNewBlock, tableIsResolving, rows) {\r\n    if (isNewBlock || tableIsResolving) {\r\n        return undefined\r\n    }\r\n\r\n    let newGridRowStyle = ''\r\n    {\r\n        rows.map(({ row_id, attributes, classes }) => {\r\n            console.log('Row ID - ' + newGridRowStyle)\r\n            console.log(attributes)\r\n            const { rowHeightType,\r\n                minHeight,\r\n                minHeightUnits,\r\n                maxHeight,\r\n                maxHeightUnits,\r\n                fixedHeight,\r\n                fixedHeightUnits,\r\n                isHeader\r\n            } = attributes;\r\n\r\n            let sizing = '';\r\n\r\n            if (isHeader) {\r\n                switch (rowHeightType) {\r\n                    case 'Auto':\r\n                        {\r\n                            newGridRowStyle = newGridRowStyle + 'auto ';\r\n                            break;\r\n                        }\r\n                    case 'Fixed':\r\n                        {\r\n                            newGridRowStyle = newGridRowStyle + fixedHeight + fixedHeightUnits + ' ';\r\n                            break;\r\n                        }\r\n                    case 'Custom':\r\n                        {\r\n                            sizing = 'minmax(' + minHeight + minHeightUnits + ', ' + maxHeight + maxHeightUnits + ') '\r\n                            newGridRowStyle = newGridRowStyle + sizing;\r\n                            break;\r\n                        }\r\n                    default:\r\n                        console.log('Unrecognized Attibute Type')\r\n                }\r\n            }\r\n\r\n            // if (row_id === '0') {\r\n            //     newGridRowStyle = newGridRowStyle + '25px ';\r\n            // }  else {\r\n            //     newGridRowStyle = newGridRowStyle + 'auto ';\r\n            // }\r\n        })\r\n    }\r\n    // setTableStale(false)\r\n    return newGridRowStyle\r\n}\r\n\r\n/**\r\n * Establish grid css grid-template-rowss based upon attributes associated with rows\r\n * \r\n * @param {*} isNewBlock \r\n * @param {*} tableIsResolving \r\n * @param {*} rows \r\n * @returns \r\n */\r\nexport function processBodyRows(isNewBlock, tableIsResolving, rows) {\r\n    if (isNewBlock || tableIsResolving) {\r\n        return undefined\r\n    }\r\n\r\n    let newGridRowStyle = ''\r\n    {\r\n        rows.map(({ row_id, attributes, classes }) => {\r\n            console.log('Row ID - ' + newGridRowStyle)\r\n            console.log(attributes)\r\n            const { rowHeightType,\r\n                minHeight,\r\n                minHeightUnits,\r\n                maxHeight,\r\n                maxHeightUnits,\r\n                fixedHeight,\r\n                fixedHeightUnits,\r\n                isHeader\r\n            } = attributes;\r\n\r\n            let sizing = '';\r\n\r\n            if (!isHeader) {\r\n                switch (rowHeightType) {\r\n                    case 'Auto':\r\n                        {\r\n                            newGridRowStyle = newGridRowStyle + 'auto ';\r\n                            break;\r\n                        }\r\n                    case 'Fixed':\r\n                        {\r\n                            newGridRowStyle = newGridRowStyle + fixedHeight + fixedHeightUnits + ' ';\r\n                            break;\r\n                        }\r\n                    case 'Custom':\r\n                        {\r\n                            sizing = 'minmax(' + minHeight + minHeightUnits + ', ' + maxHeight + maxHeightUnits + ') '\r\n                            newGridRowStyle = newGridRowStyle + sizing;\r\n                            break;\r\n                        }\r\n                    default:\r\n                        console.log('Unrecognized Attibute Type')\r\n                }\r\n            }\r\n        })\r\n    }\r\n    // {\r\n    //     rows.filter(row => !row.attributes.isHeader && row.row_id !== '0')\r\n    //         .map(({ row_id, attributes, classes }) => {\r\n    //             console.log('Row ID - ' + newGridRowStyle)\r\n    //             newGridRowStyle = newGridRowStyle + 'auto ';\r\n    //         })\r\n    // }\r\n    // setTableStale(false)\r\n    return newGridRowStyle\r\n}\r\n\r\n/**\r\n * Create Styling Variable for showing inner grid borders/lines\r\n  * \r\n  * @param {*} isNewBlock \r\n  * @param {*} tableIsResolving \r\n  * @param {*} showGridLines \r\n  * @returns \r\n  */\r\nexport function gridBandedRowTextColorStyle(isNewBlock, tableIsResolving, color) {\r\n    if (isNewBlock || tableIsResolving) {\r\n        return undefined;\r\n    };\r\n    return color;\r\n}\r\n\r\nexport function gridBandedRowBackgroundColorStyle(isNewBlock, tableIsResolving, color) {\r\n    if (isNewBlock || tableIsResolving) {\r\n        return undefined;\r\n    };\r\n    return color;\r\n}\r\n\r\n/**\r\n* Create Styling Variable for showing inner grid borders/lines\r\n* \r\n* @param {*} isNewBlock \r\n* @param {*} tableIsResolving \r\n* @param {*} showGridLines \r\n* @returns \r\n*/\r\nexport function getGridHeaderBackgroundColorStyle(isNewBlock, tableIsResolving, tableColor, blockColor) {\r\n    if (isNewBlock || tableIsResolving) {\r\n        return undefined;\r\n    };\r\n\r\n    if (tableColor) {\r\n        return tableColor;\r\n    };\r\n\r\n    return blockColor;\r\n}\r\n\r\n\r\n/**\r\n * Create Styling Variable for showing inner grid borders/lines\r\n  * \r\n  * @param {*} isNewBlock \r\n  * @param {*} tableIsResolving \r\n  * @param {*} showGridLines \r\n  * @returns \r\n  */\r\nexport function gridInnerBorderStyle(isNewBlock, tableIsResolving, showGridLines) {\r\n    if (isNewBlock || tableIsResolving) {\r\n        return undefined;\r\n    };\r\n    console.log('show grid lines = ' + showGridLines)\r\n    if (showGridLines) {\r\n        return 'solid';\r\n    };\r\n\r\n    return 'hidden';\r\n}\r\n\r\n/**\r\n* Create Styling Variable for inner grid borders/lines width\r\n* \r\n* @param {*} isNewBlock \r\n* @param {*} tableIsResolving \r\n* @param {*} showGridLines \r\n* @returns \r\n*/\r\nexport function gridInnerBorderWidthStyle(isNewBlock, tableIsResolving, showGridLines, gridLineWidth) {\r\n    if (isNewBlock || tableIsResolving) {\r\n        return undefined;\r\n    };\r\n\r\n    if (!showGridLines) {\r\n        return '0px';\r\n    };\r\n\r\n    return String(gridLineWidth) + 'px';\r\n}\r\n\r\nexport function startGridRowNbr(enableHeader, showBorders) {\r\n    let startGridLine = 1\r\n    startGridLine = enableHeader ? startGridLine + 1 : startGridLine\r\n    startGridLine = showBorders ? startGridLine + 1 : startGridLine\r\n\r\n    return startGridLine;\r\n}\r\n// endGridRowNbr(1, 'Header', numRows, enableHeaderRow, false)\r\n\r\nexport function endGridRowNbr(startGridLine, rowGroup, numRows, enableHeader, showBorders, enableFooter) {\r\n    let endGridLine\r\n\r\n    switch (rowGroup) {\r\n        case 'Header':\r\n            {\r\n                endGridLine = 2\r\n                endGridLine = showBorders ? endGridLine++ : endGridLine\r\n                break;\r\n            }\r\n        case 'Body':\r\n            {\r\n                endGridLine = startGridLine + numRows\r\n                endGridLine = showBorders ? endGridLine++ : endGridLine\r\n                endGridLine = enableHeader ? endGridLine - 1 : endGridLine\r\n                endGridLine = enableFooter ? endGridLine - 1 : endGridLine\r\n                break;\r\n            }\r\n        default:\r\n            console.log('Unknown row type')\r\n    }\r\n\r\n    return endGridLine;\r\n}\r\n\r\nexport function getHeaderTextAlignmentStyle(isNewBlock, tableIsResolving, textAlignment) {\r\n    if (isNewBlock || tableIsResolving) {\r\n        return undefined;\r\n    };\r\n\r\n    return textAlignment;\r\n}\r\n\r\n\r\n\r\n/**\r\n * The BorderBoxControl stores the syle values as a flat object (simple) or as nested objects\r\n * (complex).  We evaluate the object value to determine which type it is.\r\n * \r\n * @param {*} border \r\n * @returns \r\n */\r\nexport function getBorderStyleType(border) {\r\n    if (border) {\r\n        const borderWrapper = Object.entries(border);\r\n        for (var i = 0; i < borderWrapper.length; i++) {\r\n            if (borderWrapper[i].some(value => { return typeof value == \"object\" })) {\r\n                console.log(borderWrapper[i]);\r\n                return 'split'\r\n            }\r\n        }\r\n        return 'flat';\r\n    };\r\n    return 'unknown';\r\n}\r\n\r\n/**\r\n * Get Style value for the specified border segment and attribute\r\n * \r\n * @param {*} border \r\n * @param {*} borderLocation \r\n * @param {*} borderAttribute \r\n * @param {*} borderType \r\n * @returns \r\n */\r\nexport function getBorderStyle(border, borderLocation, borderAttribute, borderType) {\r\n    switch (borderType) {\r\n        case 'split':\r\n            {\r\n                return border[borderLocation][borderAttribute];\r\n            }\r\n\r\n        case 'flat':\r\n            {\r\n                return border[borderAttribute];\r\n            }\r\n\r\n        default:\r\n            {\r\n                switch (borderAttribute) {\r\n                    case 'color':\r\n                        {\r\n                            return 'black';\r\n                        }\r\n\r\n                    case 'style':\r\n                        {\r\n                            return 'solid';\r\n                        }\r\n\r\n                    case 'width':\r\n                        {\r\n                            return '1px';\r\n                        }\r\n\r\n                }\r\n            }\r\n    }\r\n    // if (borderType === 'split') {\r\n    //     return border[borderLocation][borderAttribute]\r\n    // }\r\n\r\n    // if (borderType === 'flat') {\r\n    //     return border[borderAttribute]\r\n    // }\r\n\r\n    // return 'unknown'\r\n}\r\n","import {\n\tnumberToLetter,\n} from './utils';\n\nexport function initTable(newBlockTableRef, columnCount, rowCount, tableName) {\n\n\tconsole.log('FUNCTION - CREATE TABLE')\n\tconsole.log('InitialRows - ' + rowCount)\n\tconsole.log('InitialColumns - ' + columnCount)\n\n\tvar tableCells = initTableCells(Number(columnCount), Number(rowCount))\n\tvar rowArray = [];\n\n\tfor (let i = 1; i <= rowCount; i++) {\n\t\tconsole.log('Row loop - ' + i)\n\t\tlet row = getDefaultRow('0', i)\n\t\t// console.log('...looped row - ' + JSON.stringify(row, null, 4))\n\t\trowArray.push(row)\n\t\t// console.log('...row array - ' + JSON.stringify(rowArray, null, 4))\n\t}\n\n\tvar columnArray = [];\n\n\tfor (let i = 1; i <= columnCount; i++) {\n\t\tconsole.log('Column loop - ' + i)\n\t\tlet column = getDefaultColumn('0', i)\n\t\t// console.log('...looped column - ' + JSON.stringify(column, null, 4))\n\t\tcolumnArray.push(column)\n\t\t// console.log('...column array - ' + JSON.stringify(columnArray, null, 4))\n\t}\n\n\tconst newTable = {\n\t\ttable: {\n\t\t\ttable_id: '0',\n\t\t\tblock_table_ref: newBlockTableRef,\n\t\t\tpost_id: '0',\n\t\t\ttable_status: 'new',\n\t\t\ttable_name: tableName,\n\t\t\tattributes: getDefaultTableAttributes('table'),\n\t\t\tclasses: getDefaultTableClasses('table'),\n\t\t\trows: rowArray,\n\t\t\tcolumns: columnArray,\n\t\t\tcells: tableCells\n\t\t}\n\t}\n\n\treturn newTable\n}\n\nexport function initTableCells(init_num_columns, init_num_rows) {\n\tconsole.log(init_num_rows)\n\tvar tableCells = []\n\n\tvar x = 1\n\tvar y = 1\n\n\twhile (y <= init_num_rows) {\n\t\twhile (x <= init_num_columns) {\n\t\t\tlet columnLetter = numberToLetter(x)\n\t\t\tif (y == 1) {\n\t\t\t\tlet cell = getDefaultCell('0', String(x), String(y))\n\t\t\t\ttableCells.push(cell)\n\t\t\t} else {\n\t\t\t\tlet cell = getDefaultCell('0', String(x), String(y))\n\t\t\t\ttableCells.push(cell)\n\t\t\t}\n\t\t\tx++\n\t\t}\n\t\tvar x = 1\n\t\ty++\n\t}\n\n\treturn tableCells;\n}\n\nexport function getDefaultRow(tableId, rowId, rowLocation = 'Body') {\n\tconsole.log('In GetDefaultRow')\n\tconsole.log('...tableId = ' + tableId)\n\tconsole.log('...rowId = ' + rowId)\n\tconsole.log('...rowLocation = ' + rowLocation)\n\n\tlet row\n\tif (rowLocation === 'Border') {\n\t\trow = {\n\t\t\ttable_id: String(tableId),\n\t\t\trow_id: String(rowId),\n\t\t\tattributes: getDefaultTableAttributes('rows', rowLocation),\n\t\t\tclasses: getDefaultTableClasses('rows')\n\t\t}\n\t} else {\n\t\trow = {\n\t\t\ttable_id: String(tableId),\n\t\t\trow_id: String(rowId),\n\t\t\tattributes: getDefaultTableAttributes('rows', rowLocation),\n\t\t\tclasses: getDefaultTableClasses('rows')\n\t\t}\n\t}\n\n\tconsole.log(row)\n\treturn row;\n}\n\n\nexport function getDefaultColumn(tableId, columnId, columnLocation = 'Body') {\n\n\tlet column\n\tif (columnLocation === 'Border') {\n\t\tcolumn = {\n\t\t\ttable_id: String(tableId),\n\t\t\tcolumn_id: String(columnId),\n\t\t\tcolumn_name: 'Border',\n\t\t\tattributes: getDefaultTableAttributes('columns', columnLocation),\n\t\t\tclasses: ''\n\t\t}\n\t} else {\n\t\tcolumn = {\n\t\t\ttable_id: String(tableId),\n\t\t\tcolumn_id: String(columnId),\n\t\t\tcolumn_name: 'Comments',\n\t\t\tattributes: getDefaultTableAttributes('columns', columnLocation),\n\t\t\tclasses: getDefaultTableClasses('columns')\n\t\t}\n\t}\n\n\treturn column;\n}\n\nexport function getDefaultCell(tableId, columnId, rowId, cellLocation = 'Body') {\n\n\tlet cell\n\tlet columnLetter = numberToLetter(columnId)\n\tlet borderContent = rowId == 0 ? columnLetter : String(rowId)\n\n\tif (cellLocation === 'Border') {\n\t\tcell = {\n\t\t\ttable_id: String(tableId),\n\t\t\tcolumn_id: String(columnId),\n\t\t\trow_id: String(rowId),\n\t\t\tcell_id: rowId === 0 ? columnLetter + '0' : '0' + String(columnId),\n\t\t\tattributes: getDefaultTableAttributes('cells', cellLocation),\n\t\t\tclasses: 'grid-control__border-cells hover',\n\t\t\tcontent: borderContent\n\t\t}\n\t} else {\n\t\tcell = {\n\t\t\ttable_id: String(tableId),\n\t\t\tcolumn_id: String(columnId),\n\t\t\trow_id: String(rowId),\n\t\t\tcell_id: columnLetter + rowId,\n\t\t\tattributes: getDefaultTableAttributes('cells', cellLocation),\n\t\t\tclasses: getDefaultTableClasses('cells'),\n\t\t\tcontent: ''\n\t\t}\n\t}\n\treturn cell;\n}\n\n\nexport function getDefaultTableAttributes(tableComponent, componentLocation = 'Body') {\n\n\tconst tableBaseAttributes = {\n\t\tshowGridLines: false,\n\t\tbandedRows: false,\n\t\tbandedRowBackgroundColor: '#d8dbda',\n\t\tbandedTextColor: '#d8dbda',\n\t\tgridLineWidth: 1,\n\t\tallowHorizontalScroll: true,\n\t\tenableHeaderRow: false,\n\t\theaderAlignment: 'center',\n\t\theaderRowSticky: false,\n\t\theaderBorder: { color: 'black', style: 'solid', width: '1px' },\n\t\thorizontalAlignment: 'none',\n\t\tbodyAlignment: undefined,\n\t\tbodyBorder: { color: 'black', style: 'solid', width: '1px' },\n\t\tverticalAlignment: 'none',\n\t\thideTitle: true\n\t}\n\n\t//{color: white, style: hidden, width 0px}\n\n\tconst columnAttributes = {\n\t\tcolumnWidthType: 'Proportional',\n\t\tminWidth: 2,\n\t\tminWidthUnits: 'ch',\n\t\tmaxWidth: 1,\n\t\tmaxWidthUnits: 'fr',\n\t\tfixedWidth: 1,\n\t\tfixedWidthUnits: 'fr',\n\t\tdisableForTablet: false,\n\t\tdisableForPhone: false,\n\t\tisFixedLeftColumnGroup: false,\n\t\thorizontalAlignment: 'none'\n\t}\n\n\tconst columnBorderAttributes = {\n\t\tcolumnWidthType: 'Fixed',\n\t\tminWidth: 0,\n\t\tminWidthUnits: '',\n\t\tmaxWidth: 0,\n\t\tmaxWidthUnits: '',\n\t\tfixedWidth: 20,\n\t\tfixedWidthUnits: 'px',\n\t\tdisableForTablet: false,\n\t\tdisableForPhone: false,\n\t\tisFixedLeftColumnGroup: false,\n\t\thorizontalAlignment: 'center'\n\t}\n\n\tconst rowAttributes = {\n\t\trowHeightType: 'Auto',\n\t\tminHeight: 0,\n\t\tminHeightUnits: 'em',\n\t\tmaxHeight: 0,\n\t\tmaxHeightUnits: 'em',\n\t\tfixedHeight: 0,\n\t\tfixedHeightUnits: 'em',\n\t\tisHeader: false,\n\t\tverticalAlignment: 'none'\n\t}\n\n\tconst rowBorderAttributes = {\n\t\trowHeightType: 'Auto',\n\t\tminHeight: 0,\n\t\tminHeightUnits: 'em',\n\t\tmaxHeight: 0,\n\t\tmaxHeightUnits: 'em',\n\t\tfixedHeight: 0,\n\t\tfixedHeightUnits: 'em',\n\t\tisHeader: false,\n\t\tverticalAlignment: 'none'\n\t}\n\n\tconst cellAttributes = {\n\t\tborder: false\n\t}\n\n\tconst cellBorderAttributes = {\n\t\tborder: true\n\t}\n\n\tswitch (tableComponent) {\n\t\tcase 'table':\n\t\t\treturn tableBaseAttributes;\n\t\t\tbreak;\n\n\t\tcase 'columns':\n\t\t\tif (componentLocation === 'Border') {\n\t\t\t\treturn columnBorderAttributes;\n\t\t\t}\n\t\t\treturn columnAttributes;\n\t\t\tbreak;\n\n\t\tcase 'rows':\n\t\t\tif (componentLocation === 'Border') {\n\t\t\t\treturn rowBorderAttributes;\n\t\t\t}\n\t\t\treturn rowAttributes;\n\t\t\tbreak;\n\n\t\tcase 'cells':\n\t\t\tif (componentLocation === 'Border') {\n\t\t\t\treturn cellBorderAttributes;\n\t\t\t}\n\t\t\treturn cellAttributes;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\treturn\n\t}\n}\n\nexport function getDefaultTableClasses(tableComponent) {\n\n\n\tconst tableBaseClasses = ''\n\n\tconst columnClasses = ''\n\n\n\tconst rowClasses = ''\n\n\tconst cellClasses = ''\n\n\tswitch (tableComponent) {\n\t\tcase 'table':\n\t\t\treturn tableBaseClasses;\n\t\t\tbreak;\n\n\t\tcase 'columns':\n\t\t\treturn columnClasses;\n\t\t\tbreak;\n\n\t\tcase 'rows':\n\t\t\treturn rowClasses;\n\t\t\tbreak;\n\n\t\tcase 'cells':\n\t\t\treturn cellClasses;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\treturn\n\t}\n}\n","export function numberToLetter(letterNumber) {\r\n\r\n    const letterMap = [\r\n        { nbr: '1', letter: 'A' },\r\n        { nbr: '2', letter: 'B' },\r\n        { nbr: '3', letter: 'C' },\r\n        { nbr: '4', letter: 'D' },\r\n        { nbr: '5', letter: 'E' },\r\n        { nbr: '6', letter: 'F' },\r\n        { nbr: '7', letter: 'G' },\r\n        { nbr: '8', letter: 'H' },\r\n        { nbr: '9', letter: 'I' },\r\n        { nbr: 'a', letter: 'J' },\r\n        { nbr: 'b', letter: 'k' },\r\n        { nbr: 'c', letter: 'L' },\r\n        { nbr: 'd', letter: 'M' },\r\n        { nbr: 'e', letter: 'N' },\r\n        { nbr: 'f', letter: 'O' },\r\n        { nbr: 'g', letter: 'P' },\r\n        { nbr: 'h', letter: 'Q' },\r\n        { nbr: 'i', letter: 'R' },\r\n        { nbr: 'j', letter: 'S' },\r\n        { nbr: 'k', letter: 'T' },\r\n        { nbr: 'l', letter: 'U' },\r\n        { nbr: 'm', letter: 'V' },\r\n        { nbr: 'n', letter: 'W' },\r\n        { nbr: 'o', letter: 'X' },\r\n        { nbr: 'p', letter: 'Y' },\r\n        { nbr: 'q', letter: 'Z' }\r\n    ]\r\n\r\n    if (letterNumber === 0) {\r\n        console.log('...In Letter = 0')\r\n\r\n        return '0'\r\n    }\r\n\r\n    var letterLookup = letterNumber.toString(26).split('')\r\n    let letterDigit = ''\r\n\r\n    letterLookup.map((value) => {\r\n        letterDigit = letterDigit + letterMap.find(x => x.nbr === value).letter\r\n    })\r\n\r\n    return (letterDigit)\r\n}\r\n\r\nexport function updateArray(arrayIn, key, id, updatedData) {\r\n    console.log('Update Array')\r\n    console.log(arrayIn)\r\n    console.log(key)\r\n    console.log(id)\r\n    console.log(updatedData)\r\n    return arrayIn.map((item) =>\r\n        item[key] === id ? { ...item, ...updatedData } : item\r\n    )\r\n}\r\n\r\n\r\nexport function tableSort(tablePart, tableArray) {\r\n\r\n    console.log('SORTING TABLE')\r\n    console.log('Table Part = ' + tablePart)\r\n    console.log(tableArray)\r\n\r\n    if (tablePart === 'rows') {\r\n        console.log('...in Rows sort')\r\n        var sortedRows = [...tableArray];\r\n        sortedRows.sort((a, b) => {\r\n            // console.log(number(a.row_id))\r\n            // console.log(number([a.row_id]))\r\n            if (Number([a.row_id]) < Number([b.row_id])) {\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n        })\r\n        return sortedRows;\r\n    }\r\n\r\n    if (tablePart === 'columns') {\r\n        console.log('...in Columns sort')\r\n        var sortedColumns = [...tableArray];\r\n        sortedColumns.sort((a, b) => {\r\n            console.log(Number(a.column_id))\r\n            if (Number([a.column_id]) < Number([b.column_id])) {\r\n                return -1\r\n            } else {\r\n                return 1\r\n            }\r\n        })\r\n        console.log(sortedColumns)\r\n        return sortedColumns;\r\n    }\r\n\r\n    if (tablePart === 'cells') {\r\n        console.log('...in Cells sort')\r\n        var sortedCells = [...tableArray];\r\n        sortedCells.sort((a, b) => {\r\n            console.log([Number([a.row_id]), Number([a.column_id])])\r\n            console.log([Number([b.row_id]), Number([b.column_id])])\r\n            if (Number([a.row_id]) === Number([b.row_id])) {\r\n                if (Number([a.column_id]) < Number([b.column_id])) {\r\n                    return -1\r\n                } else {\r\n                    return 1\r\n                }\r\n            }\r\n\r\n            if (Number([a.row_id]) < Number([b.row_id])) {\r\n                return -1\r\n            } else {\r\n                return 1\r\n            }\r\n\r\n            // if ([Number([a.row_id]), Number([a.column_id])] < [Number([b.row_id]), Number([b.column_id])]) {\r\n            //     return -1\r\n            // } else {\r\n            //     return 1\r\n            // }\r\n        })\r\n        console.log(sortedCells)\r\n        return sortedCells;\r\n    }\r\n    console.log('...NO SORT RETURNED')\r\n}\r\n\r\nexport function generateBlockTableRef() {\r\n    const timestamp = Date.now();\r\n    return timestamp.toString(16);\r\n}\r\n\r\nexport function setBorderContent(row, column, content) {\r\n    if (row === '0' && column === '0') {\r\n        return ''\r\n    } else {\r\n        return content\r\n    }\r\n}\r\n\r\nexport function openCurrentColumnMenu(columnMenuVisible, openColumnRow, column_id) {\r\n    if (columnMenuVisible && openColumnRow === column_id) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function openCurrentRowMenu(rowMenuVisible, openColumnRow, row_id) {\r\n    if (rowMenuVisible && openColumnRow === row_id) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nexport function removeTags(str) {\r\n    if ((str === null) || (str === ''))\r\n        return false;\r\n    else\r\n        str = str.toString();\r\n\r\n    // Regular expression to identify HTML tags in\r\n    // the input string. Replacing the identified\r\n    // HTML tag with a null string.\r\n    return str.replace(/(<([^>]+)>)/ig, '');\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"dataControls\"];","module.exports = window[\"wp\"][\"editor\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"notices\"];","module.exports = window[\"wp\"][\"primitives\"];","module.exports = window[\"wp\"][\"url\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkdynamic_tables\"] = globalThis[\"webpackChunkdynamic_tables\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["useEffect","useState","DropdownMenu","MenuGroup","MenuItem","AlignmentToolbar","blockTable","icon","moreVertical","more","settings","arrowLeft","arrowRight","arrowUp","arrowDown","tableColumnBefore","tableColumnAfter","tableColumnDelete","trash","store","tableStore","ConfigureColumnWidth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ColumnMenu","props","openModalColumnWidth","setOpenModalColumnWidth","columnAttributes","setColumnAttributes","tableId","columnId","columnLabel","enableProFeatures","updatedColumn","console","log","onInsertColumn","event","onDeleteColumn","onUpdateColumnWidth","updatedColumnAttributes","preventDefault","children","defaultOpen","label","onClose","onClick","e","openColumnWidth","Modal","SelectControl","CheckboxControl","Button","__experimentalInputControl","InputControl","__experimentalNumberControl","NumberControl","columnWidthType","setHideProportional","setHideCustom","setHideFixed","setColumnWidthType","setMinWidth","minWidth","setMinWidthUnits","minWidthUnits","setMaxWidth","maxWidth","setMaxWidthUnits","maxWidthUnits","setFixedWidth","fixedWidth","setFixedWidthUnits","setDisableForPhone","disableForPhone","setDisableForTablet","disableForTablet","stopProp","stopPropagation","handleCancel","hideProportional","hideCustom","hideFixed","fixedWidthUnits","onWidthType","onMinimumWidth","target","value","onMinimumWidthUnits","onMaximumWidth","onMaximumWidthUnits","onFixedWidth","Number","onFixedWidthUnits","onTablet","checked","onPhone","onUpdate","isFixedLeftColumnGroup","horizontalAlignment","title","onRequestClose","focusOnMount","isDismissible","shouldCloseOnClickOutside","size","className","onSubmit","onMouseDown","onChange","options","__nextHasNoMarginBottom","labelPosition","onBlur","variant","type","TabbableContainer","ConfigureRowHeight","openRowHeight","rowId","rowLabel","rowAttributes","rowHeightType","setRowHeightType","setMinHeight","minHeight","setMinHeightUnits","minHeightUnits","setMaxHeight","maxHeight","setMaxHeightUnits","maxHeightUnits","setFixedHeight","fixedHeight","setFixedHeightUnits","fixedHeightUnits","onHeightType","onMinimumHeight","onMinimumHeightUnits","onMaximumHeight","onMaximumHeightUnits","onFixedHeight","onFixedHeightUnits","updatedRowAttributes","isFixedLeftRowGroup","RowMenu","tableRowBefore","tableRowAfter","tableRowDelete","openModalRowHeight","setOpenModalRowHeight","setRowAttributes","updatedRow","onInsertRow","onDeleteRow","onUpdateRowHeight","TYPES","CREATE_TABLE","INSERT_COLUMN","INSERT_ROW","DELETE_TABLE","DELETE_COLUMN","DELETE_ROW","CHANGE_TABLE_ID","UPDATE_TABLE_PROP","REMOVE_TABLE_PROP","UPDATE_ROW","UPDATE_COLUMN","UPDATE_CELL","RECEIVE_HYDRATE","RECEIVE_HYDRATE_TEST","PERSIST","PROCESS_BORDERS","addEntities","addQueryArgs","apiFetch","coreStore","blockEditorStore","loadTableEntityConfig","receiveNewTable","table","table_id","receiveTable","block_table_ref","table_status","post_id","table_name","attributes","classes","rows","columns","cells","createTableEntity","select","dispatch","registry","getTable","testTable","newTable","header","id","status","tableEntity","saveEntityRecord","assignTableId","error","alert","saveTableEntity","saveEditedEntityRecord","updateTableEntity","overrideTableStatus","filteredRows","filter","row","row_id","filteredColumns","column","column_id","filteredCells","cell","transformedCells","map","content","tableStatus","updatedTable","editEntityRecord","deleteTableEntity","deletedTableEntity","deleteEntityRecord","processDeletedTables","deletedTables","Object","keys","forEach","key","deletedTableId","processUnmountedTables","unmountedTables","unmountedTableBlockId","unmounted_blockid","tableBlock","getBlock","removeTableProp","updateTableProp","addColumn","newColumn","columnCells","addRow","newRow","rowCells","removeColumn","removeRow","newTableId","String","attribute","updateRow","updateColumn","updateCell","cellId","updateTableBorder","tableRows","tableColumns","tableCells","receiveTableTest","STORE_NAME","createReduxStore","register","reducer","selectors","actions","resolvers","numberToLetter","updateArray","tableSort","state","action","JSON","stringify","newTableIdState","rowsWithNewId","columnsWithNewId","cellsWithNewId","push","newCell","updatedTableId","tablePropRemoved","insertColumnState","column_name","sortedColumns","newColumnId","columnLetter","cellContent","cell_id","allNewColumnCells","sortedCells","returnedTableNewColumn","insertRowState","sortedRows","newRowId","allNewRowCells","returnedTableNewRow","deleteColumnState","deleteRowState","transformedValue","newRowsState","updatedRowData","parse","updatedRows","returnedUpdatedTableRow","newColumnsState","updatedColumnData","updatedColumns","returnedUpdatedTableColumn","newCellsState","updatedCellData","updatedCells","returnedCellState","newBaseTableState","returnedBorderState","tables","tableKey","newTableState","returnedTable","newTablesState","returnedTableNewId","filteredTablesState","reduce","acc","deleteTablesState","returnedTableDefault","computeCellId","fetchedCells","isTableStale","resolveSelect","getEntityRecord","createRegistrySelector","hasOwnProperty","getTables","getTableIdByBlock","length","getUnmountedTables","getDeletedTables","getUnsavedTables","getTableBlockId","getTableTest","tableConfig","name","kind","baseURL","baseURLParams","context","plural","__","getTitle","record","useSelect","useDispatch","useRef","editorStore","noticeStore","useEntityRecords","usePrevious","ForwardedRef","Panel","PanelBody","PanelRow","Disabled","Spinner","Placeholder","ColorPicker","ToggleControl","BorderBoxControl","RichText","useBlockProps","useSettings","BlockIcon","AlignmentControl","InspectorControls","BlockControls","BlockAlignmentToolbar","PanelColorSettings","search","usePostChangesSaved","generateBlockTableRef","setBorderContent","openCurrentColumnMenu","openCurrentRowMenu","removeTags","initTable","initTableCells","getDefaultRow","getDefaultColumn","getDefaultCell","getDefaultTableClasses","getDefaultTableAttributes","processColumns","processHeaderRow","processBodyRows","gridBandedRowTextColorStyle","gridBandedRowBackgroundColorStyle","gridInnerBorderStyle","gridInnerBorderWidthStyle","startGridRowNbr","endGridRowNbr","getGridHeaderBackgroundColorStyle","getHeaderTextAlignmentStyle","getBorderStyleType","getBorderStyle","Edit","blockProps","gls_test_data","lockPostSaving","lockPostAutosaving","createNotice","removeNotice","setTableStale","openColumnRow","setOpenColumnRow","tablePropAttributes","setTablePropAttributes","columnMenuVisible","setColumnMenuVisible","rowMenuVisible","setRowMenuVisible","openRowColumn","setOpenRowColumn","render","setRender","showBorders","setShowBorders","tableName","setTableName","numColumns","setNumColumns","numRows","setNumRows","gridCells","setGridCells","awaitingTableEntityCreation","setAwaitingTableEntityCreation","enableFutureFeatures","priorTableRef","block_alignment","themeColors","borderBoxColors","color","currentTableId","setTableIdChanged","isTableIdChanged","postChangesAreSaved","setTableAttributes","setBlockTableStatus","setNewBlock","setSaveLock","setClearSaveLock","isNewBlock","blockTableStatus","tableHasStartedResolving","tableHasFinishedResolving","tableIsResolving","hasStartedResolution","hasFinishedResolution","isResolving","selectorArgs","getBlockTable","selectedTable","postId","setAttributes","getTablePropAttribute","tableAttributes","attributeName","attributeValue","showGridLines","allowHorizontalScroll","enableHeaderRow","headerAlignment","gridHeaderBackgroundColor","headerRowSticky","headerBorder","bodyAlignment","bodyBorder","bandedRows","bandedRowTextColor","bandedRowBackgroundColor","gridLineWidth","gridAlignment","verticalAlignment","hideTitle","tableColumnLength","tableRowLength","insertColumn","i","insertRow","deleteColumn","deleteRow","persist","onToggleBorders","isChecked","rowBorder","columnBorder","createTable","columnCount","rowCount","newBlockTableRef","onCreateTable","onChangeInitialColumnCount","num_columns","newNumColumns","errorText","politeness","onChangeInitialRowCount","num_rows","newNumRows","onUpdateColumn","updateType","onUpdateRow","onMouseBorderClick","compareColumnId","clickedColumn","find","compareRowId","clickedRow","onHideTitle","updatedTableAttributes","onAllowHorizontalScroll","onShowBandedRows","onBandedRowColor","onEnableHeaderRow","x","isHeader","onAlignHeader","alignment","onHeaderBorder","border","onHeaderRowSticky","onAlignBody","onBodyBorder","onShowGridLines","onGridLineWidth","gridColumnStyle","gridHeaderRowStyle","gridBodyRowStyle","startGridHeaderRowNbrStyle","endGridHeaderRowNbrStyle","startGridBodyRowNbrStyle","endGridBodyRowNbrStyle","horizontalScrollStyle","gridBandedRowTextColor","gridBandedRowBackgroundColor","gridShowInnerLines","gridInnerLineWidth","headerRowStickyStyle","headerRowStickyClass","gridHeaderBackgroundColorStyle","style","backgroundColor","headerTextAlignmentStyle","headerBorderStyleType","headerBorderTopColor","headerBorderTopStyle","headerBorderTopWidth","headerBorderRightColor","headerBorderRightStyle","headerBorderRightWidth","headerBorderBottomColor","headerBorderBottomStyle","headerBorderBottomWidth","headerBorderLeftColor","headerBorderLeftStyle","headerBorderLeftWidth","bodyTextAlignmentStyle","bodyBorderStyleType","bodyBorderTopColor","bodyBorderTopStyle","bodyBorderTopWidth","bodyBorderRightColor","bodyBorderRightStyle","bodyBorderRightWidth","bodyBorderBottomColor","bodyBorderBottomStyle","bodyBorderBottomWidth","bodyBorderLeftColor","bodyBorderLeftStyle","bodyBorderLeftWidth","initialOpen","disabled","for","__next40pxDefaultSize","__experimentalIsRenderedInSidebar","isCompact","colors","hideLabelFromVision","group","colorSettings","newColor","tagName","allowedFormats","borderContent","isOpenCurrentColumnMenu","isFirstColumn","renderedRow","isBorder","isOpenCurrentRowMenu","showGridLinesCSS","gridLineWidthCSS","tabIndex","calculatedClasses","bandedRowOffset","href","showColors","instructions","placeholder","required","min","areChangesSaved","setAreChangesSaved","hasUnsavedChanges","isEditedPostDirty","hadUnsavedChanges","registerBlockType","metadata","apiVersion","edit","save","undefined","newGridColumnStyle","sizing","newGridRowStyle","tableColor","blockColor","enableHeader","startGridLine","rowGroup","enableFooter","endGridLine","textAlignment","borderWrapper","entries","some","borderLocation","borderAttribute","borderType","rowArray","columnArray","init_num_columns","init_num_rows","y","rowLocation","columnLocation","cellLocation","tableComponent","componentLocation","tableBaseAttributes","bandedTextColor","width","columnBorderAttributes","rowBorderAttributes","cellAttributes","cellBorderAttributes","tableBaseClasses","columnClasses","rowClasses","cellClasses","letterNumber","letterMap","nbr","letter","letterLookup","toString","split","letterDigit","arrayIn","updatedData","item","tablePart","tableArray","sort","a","b","timestamp","Date","now","str","replace"],"sourceRoot":""}