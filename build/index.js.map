{"version":3,"file":"index.js","mappings":"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","sources":["webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/arrow-down.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/arrow-up.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/block-table.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/more-vertical.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/search.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/trash.js","webpack://dynamic-tables/./src/components/column-dropdown-menu/index.js","webpack://dynamic-tables/./src/components/configure-column-width/index.js","webpack://dynamic-tables/./src/components/configure-row-height/index.js","webpack://dynamic-tables/./src/components/index.js","webpack://dynamic-tables/./src/components/row-dropdown-menu/index.js","webpack://dynamic-tables/./src/data/action-types.js","webpack://dynamic-tables/./src/data/actions.js","webpack://dynamic-tables/./src/data/constants.js","webpack://dynamic-tables/./src/data/index.js","webpack://dynamic-tables/./src/data/reducer.js","webpack://dynamic-tables/./src/data/resolvers.js","webpack://dynamic-tables/./src/data/selectors.js","webpack://dynamic-tables/./src/edit.js","webpack://dynamic-tables/./src/hooks.js","webpack://dynamic-tables/./src/index.js","webpack://dynamic-tables/./src/utils.js","webpack://dynamic-tables/./src/components/configure-column-width/style.scss","webpack://dynamic-tables/./src/components/configure-row-height/style.scss","webpack://dynamic-tables/./src/editor.scss","webpack://dynamic-tables/./src/style.scss","webpack://dynamic-tables/external window \"React\"","webpack://dynamic-tables/external window [\"wp\",\"apiFetch\"]","webpack://dynamic-tables/external window [\"wp\",\"blockEditor\"]","webpack://dynamic-tables/external window [\"wp\",\"blocks\"]","webpack://dynamic-tables/external window [\"wp\",\"components\"]","webpack://dynamic-tables/external window [\"wp\",\"compose\"]","webpack://dynamic-tables/external window [\"wp\",\"coreData\"]","webpack://dynamic-tables/external window [\"wp\",\"data\"]","webpack://dynamic-tables/external window [\"wp\",\"dataControls\"]","webpack://dynamic-tables/external window [\"wp\",\"element\"]","webpack://dynamic-tables/external window [\"wp\",\"i18n\"]","webpack://dynamic-tables/external window [\"wp\",\"primitives\"]","webpack://dynamic-tables/external window [\"wp\",\"url\"]","webpack://dynamic-tables/webpack/bootstrap","webpack://dynamic-tables/webpack/runtime/chunk loaded","webpack://dynamic-tables/webpack/runtime/compat get default export","webpack://dynamic-tables/webpack/runtime/define property getters","webpack://dynamic-tables/webpack/runtime/hasOwnProperty shorthand","webpack://dynamic-tables/webpack/runtime/make namespace object","webpack://dynamic-tables/webpack/runtime/jsonp chunk loading","webpack://dynamic-tables/webpack/before-startup","webpack://dynamic-tables/webpack/startup","webpack://dynamic-tables/webpack/after-startup"],"sourcesContent":["import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst arrowDown = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"m16.5 13.5-3.7 3.7V4h-1.5v13.2l-3.8-3.7-1 1 5.5 5.6 5.5-5.6z\"\n}));\nexport default arrowDown;\n//# sourceMappingURL=arrow-down.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst arrowUp = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M12 3.9 6.5 9.5l1 1 3.8-3.7V20h1.5V6.8l3.7 3.7 1-1z\"\n}));\nexport default arrowUp;\n//# sourceMappingURL=arrow-up.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\nconst blockTable = createElement(SVG, {\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, createElement(Path, {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM5 4.5h14c.3 0 .5.2.5.5v3.5h-15V5c0-.3.2-.5.5-.5zm8 5.5h6.5v3.5H13V10zm-1.5 3.5h-7V10h7v3.5zm-7 5.5v-4h7v4.5H5c-.3 0-.5-.2-.5-.5zm14.5.5h-6V15h6.5v4c0 .3-.2.5-.5.5z\"\n}));\nexport default blockTable;\n//# sourceMappingURL=block-table.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst moreVertical = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M13 19h-2v-2h2v2zm0-6h-2v-2h2v2zm0-6h-2V5h2v2z\"\n}));\nexport default moreVertical;\n//# sourceMappingURL=more-vertical.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst search = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M13 5c-3.3 0-6 2.7-6 6 0 1.4.5 2.7 1.3 3.7l-3.8 3.8 1.1 1.1 3.8-3.8c1 .8 2.3 1.3 3.7 1.3 3.3 0 6-2.7 6-6S16.3 5 13 5zm0 10.5c-2.5 0-4.5-2-4.5-4.5s2-4.5 4.5-4.5 4.5 2 4.5 4.5-2 4.5-4.5 4.5z\"\n}));\nexport default search;\n//# sourceMappingURL=search.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst trash = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M12 5.5A2.25 2.25 0 0 0 9.878 7h4.244A2.251 2.251 0 0 0 12 5.5ZM12 4a3.751 3.751 0 0 0-3.675 3H5v1.5h1.27l.818 8.997a2.75 2.75 0 0 0 2.739 2.501h4.347a2.75 2.75 0 0 0 2.738-2.5L17.73 8.5H19V7h-3.325A3.751 3.751 0 0 0 12 4Zm4.224 4.5H7.776l.806 8.861a1.25 1.25 0 0 0 1.245 1.137h4.347a1.25 1.25 0 0 0 1.245-1.137l.805-8.861Z\"\n}));\nexport default trash;\n//# sourceMappingURL=trash.js.map","import { useEffect, useState } from \"@wordpress/element\"\r\nimport {\r\n    DropdownMenu,\r\n    MenuGroup,\r\n    MenuItem\r\n} from '@wordpress/components';\r\nimport {\r\n    AlignmentToolbar\r\n\r\n} from '@wordpress/block-editor';\r\nimport {\r\n    blockTable as icon,\r\n    moreVertical,\r\n    more,\r\n    arrowLeft,\r\n    arrowRight,\r\n    arrowUp,\r\n    arrowDown,\r\n    trash\r\n} from '@wordpress/icons';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as tableStore } from \"../../data\"\r\nimport { ConfigureColumnWidth } from '../configure-column-width';\r\nimport '../../editor.scss';\r\n\r\n\r\nfunction ColumnMenu(props) {\r\n\r\n    const [openModalColumnWidth, setOpenModalColumnWidth] = useState(false);\r\n    const [columnAttributes, setColumnAttributes] = useState({})\r\n\r\n    const {\r\n        tableId,\r\n        columnId,\r\n        columnLabel,\r\n        updatedColumn\r\n    } = props\r\n\r\n    useEffect(() => {\r\n        setColumnAttributes(props.columnAttributes)\r\n    }, [props.columnAttributes])\r\n\r\n    console.log('In Component ColumnMenu')\r\n    console.log(props)\r\n\r\n    function onInsertColumn(event, columnId) {\r\n        console.log('    ...onInsertColumn');\r\n        console.log(event);\r\n        console.log('columnId = ' + columnId)\r\n        updatedColumn(event, 'insert', tableId, columnId, '')\r\n    }\r\n\r\n    function onDeleteColumn(event, columnId) {\r\n        console.log('    ...onInsertColumn');\r\n        console.log(event);\r\n        console.log('columnId = ' + columnId)\r\n        updatedColumn(event, 'delete', tableId, columnId, '')\r\n    }\r\n\r\n    function onUpdateColumnWidth(event, updatedColumnAttributes) {\r\n        console.log('    ...onUpdateColumn Width');\r\n        console.log(event);\r\n        console.log(updatedColumnAttributes);\r\n        if (openModalColumnWidth) {\r\n            setOpenModalColumnWidth(false)\r\n            updatedColumn(event, 'attributes', tableId, columnId, updatedColumnAttributes)\r\n        } else {\r\n            event.preventDefault()\r\n            setOpenModalColumnWidth(true)\r\n        }\r\n    }\r\n\r\n    console.log('Open column width page = ' + openModalColumnWidth)\r\n\r\n    return (\r\n        <>\r\n            <DropdownMenu\r\n                // style={{ display: \"none\" }}\r\n                icon={moreVertical}\r\n                defaultOpen=\"true\"\r\n                label={columnLabel}>\r\n                {({ onClose }) => (\r\n                    <>\r\n                        <MenuGroup>\r\n                            <MenuItem icon={arrowUp} onClick={onUpdateColumnWidth}>\r\n                                Update Column Width\r\n                            </MenuItem>\r\n                        </MenuGroup>\r\n                        <MenuGroup>\r\n                            <MenuItem icon={arrowDown} onClick={e => onInsertColumn(e, columnId)}>\r\n                                Insert Column\r\n                            </MenuItem>\r\n                            <MenuItem icon={trash} onClick={e => onDeleteColumn(e, columnId)}>\r\n                                Delete Column\r\n                            </MenuItem>\r\n                        </MenuGroup>\r\n                    </>\r\n                )}\r\n            </DropdownMenu>\r\n\r\n            {openModalColumnWidth && (\r\n                <ConfigureColumnWidth\r\n                    columnId={columnId}\r\n                    columnLabel={columnLabel}\r\n                    columnAttributes={columnAttributes}\r\n                    openColumnWidth={onUpdateColumnWidth}>\r\n                </ConfigureColumnWidth>\r\n            )}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport { ColumnMenu };","import { useEffect, useState } from \"@wordpress/element\"\r\n/**\r\n * WordPress dependencies\r\n */\r\n\r\nimport {\r\n    Modal,\r\n    SelectControl,\r\n    CheckboxControl,\r\n    TabbableContainer,\r\n    Button,\r\n    __experimentalInputControl as InputControl,\r\n    __experimentalNumberControl as NumberControl\r\n} from '@wordpress/components';\r\n\r\nimport {\r\n    AlignmentToolbar\r\n\r\n} from '@wordpress/block-editor';\r\n\r\nimport {\r\n    blockTable as icon,\r\n    moreVertical,\r\n    more,\r\n    arrowLeft,\r\n    arrowRight,\r\n    arrowUp,\r\n    arrowDown,\r\n    trash\r\n} from '@wordpress/icons';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as tableStore } from \"../../data\"\r\nimport './style.scss';\r\n\r\nfunction ConfigureColumnWidth(props) {\r\n\r\n    const { openColumnWidth,\r\n        columnId,\r\n        columnLabel,\r\n        columnAttributes\r\n    } = props;\r\n    //    const [closePage, setClosePage] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        switch (columnAttributes.columnWidthType) {\r\n            case 'Proportional':\r\n                {\r\n                    setHideProportional(false)\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Auto':\r\n                {\r\n                    setHideProportional(true)\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Fixed':\r\n                {\r\n                    setHideProportional(true)\r\n                    setHideCustom(true)\r\n                    setHideFixed(false)\r\n                    break;\r\n                }\r\n\r\n            case 'Custom':\r\n                {\r\n                    setHideProportional(true)\r\n                    setHideCustom(false)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n        }\r\n\r\n        setColumnWidthType(columnAttributes.columnWidthType)\r\n        setMinWidth(columnAttributes.minWidth)\r\n        setMinWidthUnits(columnAttributes.minWidthUnits)\r\n        setMaxWidth(columnAttributes.maxWidth)\r\n        setMaxWidthUnits(columnAttributes.maxWidthUnits)\r\n        setFixedWidth(columnAttributes.fixedWidth)\r\n        setFixedWidthUnits(columnAttributes.fixedWidth)\r\n        setDisableForPhone(columnAttributes.disableForPhone)\r\n        setDisableForTablet(columnAttributes.disableForTablet)\r\n    }, [columnAttributes])\r\n\r\n    function stopProp(event) {\r\n        event.stopPropagation()\r\n    }\r\n\r\n    function handleCancel(event) {\r\n        openColumnWidth(false)\r\n    }\r\n\r\n    const [columnWidthType, setColumnWidthType] = useState();\r\n    const [hideProportional, setHideProportional] = useState(true);\r\n    const [hideCustom, setHideCustom] = useState(true);\r\n    const [hideFixed, setHideFixed] = useState(true);\r\n    const [minWidth, setMinWidth] = useState(0);\r\n    const [minWidthUnits, setMinWidthUnits] = useState();\r\n    const [maxWidth, setMaxWidth] = useState(1);\r\n    const [maxWidthUnits, setMaxWidthUnits] = useState();\r\n    const [fixedWidth, setFixedWidth] = useState(0);\r\n    const [fixedWidthUnits, setFixedWidthUnits] = useState();\r\n    const [disableForTablet, setDisableForTablet] = useState(false);\r\n    const [disableForPhone, setDisableForPhone] = useState(false);\r\n\r\n    console.log('In Component ConfigureColumnWidth')\r\n    console.log(props)\r\n\r\n    function onWidthType(event) {\r\n        console.log('...In Width Type Update');\r\n        console.log(event);\r\n\r\n        switch (event) {\r\n            case 'Proportional':\r\n                {\r\n                    setMaxWidth(1)\r\n                    setMaxWidthUnits('fr')\r\n                    setMinWidth(20)\r\n                    setMinWidthUnits('ch')\r\n                    setFixedWidth(0)\r\n                    setFixedWidthUnits('px')\r\n                    setHideProportional(false)\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Auto':\r\n                {\r\n                    setMaxWidth(0)\r\n                    setMaxWidthUnits('fr')\r\n                    setMinWidth(0)\r\n                    setMinWidthUnits('ch')\r\n                    setFixedWidth(0)\r\n                    setFixedWidthUnits('px')\r\n                    setHideProportional(true)\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Fixed':\r\n                {\r\n                    setMaxWidth(0)\r\n                    setMaxWidthUnits('fr')\r\n                    setMinWidth(0)\r\n                    setMinWidthUnits('ch')\r\n                    setFixedWidth(40)\r\n                    setFixedWidthUnits('px')\r\n                    setHideProportional(true)\r\n                    setHideCustom(true)\r\n                    setHideFixed(false)\r\n                    break;\r\n                }\r\n\r\n            case 'Custom':\r\n                {\r\n                    setMaxWidth(40)\r\n                    setMaxWidthUnits('ch')\r\n                    setMinWidth(20)\r\n                    setMinWidthUnits('ch')\r\n                    setFixedWidth(0)\r\n                    setFixedWidthUnits('px')\r\n                    setHideProportional(true)\r\n                    setHideCustom(false)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n        }\r\n\r\n        setColumnWidthType(event)\r\n    }\r\n\r\n    function onMinimumWidth(event) {\r\n        console.log('...In MixWidth Update');\r\n        console.log(event);\r\n        setMinWidth(event.target.value)\r\n    }\r\n\r\n    function onMinimumWidthUnits(event) {\r\n        console.log('...In MixWidth Units Update');\r\n        console.log(event);\r\n        setMinWidthUnits(event)\r\n    }\r\n\r\n    function onMaximumWidth(event) {\r\n        console.log('...In Max Width Update');\r\n        console.log(event);\r\n        setMaxWidth(event.target.value)\r\n    }\r\n\r\n    function onMaximumWidthUnits(event) {\r\n        console.log('...In Max Width  Update');\r\n        console.log(event);\r\n        setMaxWidthUnits(event)\r\n    }\r\n\r\n    function onFixedWidth(event) {\r\n        console.log('...In Max Width Update');\r\n        console.log(event);\r\n        setFixedWidth(Number(event.target.value))\r\n    }\r\n\r\n    function onFixedWidthUnits(event) {\r\n        console.log('...In Max Width Units Update');\r\n        console.log(event);\r\n        setFixedWidthUnits(event)\r\n    }\r\n\r\n    function onTablet(checked) {\r\n        console.log('...In Tablet Update');\r\n        console.log(checked);\r\n\r\n        setDisableForTablet(checked)\r\n    }\r\n\r\n    function onPhone(checked) {\r\n        console.log('...In Phone Update');\r\n        console.log(checked);\r\n\r\n        setDisableForPhone(checked)\r\n    }\r\n\r\n    function onUpdate(event) {\r\n        // event.preventDefault()\r\n        console.log('COLUMN WIDTH UPDATED...')\r\n        console.log(event)\r\n        console.log('...Max Width = ' + maxWidth)\r\n\r\n        var updatedColumnAttributes =\r\n        {\r\n            columnWidthType: columnWidthType,\r\n            minWidth: minWidth,\r\n            minWidthUnits: minWidthUnits,\r\n            maxWidth: Number(maxWidth),\r\n            maxWidthUnits: maxWidthUnits,\r\n            fixedWidth: fixedWidth,\r\n            fixedWidthUnits: fixedWidthUnits,\r\n            disableForTablet: disableForTablet,\r\n            disableForPhone: disableForPhone,\r\n            isFixedLeftColumnGroup: false,\r\n            horizontalAlignment: \"none\"\r\n        }\r\n\r\n        console.log(updatedColumnAttributes)\r\n\r\n        openColumnWidth(false, updatedColumnAttributes)\r\n    }\r\n\r\n    console.log('RENDER PROPS');\r\n    console.log('...Disable Proportional Input = ' + hideProportional);\r\n    console.log('...Disable Fixed Input = ' + hideFixed);\r\n    console.log('...Disable Custom Input = ' + hideCustom);\r\n\r\n    return (\r\n        <>\r\n            {(openColumnWidth) && (\r\n                <Modal\r\n                    title=\"Configure Column Width\"\r\n                    onRequestClose={handleCancel}\r\n                    focusOnMount=\"firstContentElement\"\r\n                    isDismissible=\"false\"\r\n                    shouldCloseOnClickOutside=\"false\"\r\n                    size=\"large\">\r\n                    <p className=\"column-label\">\r\n                        For column {columnLabel}\r\n                    </p>\r\n\r\n                    <form\r\n                        // className=\"blocks-table__placeholder-form\"\r\n                        onSubmit={onUpdate}\r\n                        onMouseDown={stopProp}\r\n\r\n                    >\r\n                        <SelectControl\r\n                            label=\"Width Type\"\r\n                            value={columnWidthType}\r\n                            onChange={e => onWidthType(e)}\r\n                            options={[\r\n                                { value: \"Proportional\", label: \"Proportional\" },\r\n                                { value: \"Auto\", label: \"Automatic\" },\r\n                                { value: \"Fixed\", label: \"Fixed width\" },\r\n                                { value: \"Custom\", label: \"Custom\" }\r\n                            ]}\r\n                            __nextHasNoMarginBottom\r\n                        />\r\n\r\n                        <fieldset\r\n                            className={(hideProportional === true ? \" column-width--not-visible\" : \"\")}>\r\n                            <legend>Set Proportional Width</legend>\r\n                            <NumberControl\r\n                                className=\"column-width-value-input\"\r\n                                label=\"Number of portions\"\r\n                                labelPosition=\"side\"\r\n                                onBlur={e => onMaximumWidth(e)}\r\n                                value={maxWidth}\r\n                            />\r\n\r\n                            <span\r\n                                className=\"column-width-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"column-width-value-input\"\r\n                                    label=\"Minimum width\"\r\n                                    labelPosition=\"left\"\r\n                                    value={minWidth}\r\n                                    onBlur={e => onMinimumWidth(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"column-width-unit-input\"\r\n                                    labelPosition=\"left\"\r\n                                    label=\"Units\"\r\n                                    value={minWidthUnits}\r\n                                    onChange={e => onMinimumWidthUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"characters\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n                        </fieldset>\r\n\r\n                        <fieldset\r\n                            className={(hideFixed === true ? \"column-width--not-visible\" : \"\")}>\r\n                            <legend>Set Fixed Width</legend>\r\n\r\n                            <span\r\n                                className=\"column-width-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"column-width-input\"\r\n                                    label=\"Fixed width\"\r\n                                    labelPosition=\"left\"\r\n                                    value={fixedWidth}\r\n                                    onBlur={e => onFixedWidth(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"column-width-unit-input\"\r\n                                    label=\"Units\"\r\n                                    labelPosition=\"left\"\r\n                                    value={fixedWidthUnits}\r\n                                    onChange={e => onFixedWidthUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"font\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n                        </fieldset>\r\n\r\n                        <fieldset\r\n                            className={(hideCustom === true ? \"column-width--not-visible\" : \"\")}>\r\n                            <legend>Set Custom Width</legend>\r\n                            <span\r\n                                className=\"column-width-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"column-width-input\"\r\n                                    label=\"Minimum width\"\r\n                                    labelPosition=\"left\"\r\n                                    value={minWidth}\r\n                                    onBlur={e => onMinimumWidth(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"column-width-unit-input\"\r\n                                    labelPosition=\"left\"\r\n                                    label=\"Units\"\r\n                                    value={minWidthUnits}\r\n                                    onChange={e => onMinimumWidthUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"characters\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n\r\n                            <span\r\n                                className=\"column-width-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"column-width-input\"\r\n                                    label=\"Maximum width\"\r\n                                    labelPosition=\"left\"\r\n                                    value={maxWidth}\r\n                                    onBlur={e => onMaximumWidth(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"column-width-unit-input\"\r\n                                    labelPosition=\"left\"\r\n                                    label=\"Units\"\r\n                                    value={maxWidthUnits}\r\n                                    onChange={e => onMaximumWidthUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"characters\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n                        </fieldset>\r\n\r\n                        <CheckboxControl\r\n                            label=\"Hide for tablet\"\r\n                            checked={disableForTablet}\r\n                            onChange={onTablet}\r\n                        />\r\n                        <CheckboxControl\r\n                            label=\"Hide for phone\"\r\n                            checked={disableForPhone}\r\n                            onChange={onPhone}\r\n                        />\r\n\r\n                        <span>\r\n                            <Button variant=\"secondary\" onClick={handleCancel}>\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </span>\r\n                    </form>\r\n                </Modal >\r\n            )\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport { ConfigureColumnWidth };","import { useEffect, useState } from \"@wordpress/element\"\r\n/**\r\n * WordPress dependencies\r\n */\r\n\r\nimport {\r\n    Modal,\r\n    SelectControl,\r\n    CheckboxControl,\r\n    TabbableContainer,\r\n    Button,\r\n    __experimentalInputControl as InputControl,\r\n    __experimentalNumberControl as NumberControl\r\n} from '@wordpress/components';\r\n\r\nimport {\r\n    AlignmentToolbar\r\n\r\n} from '@wordpress/block-editor';\r\n\r\nimport {\r\n    blockTable as icon,\r\n    moreVertical,\r\n    more,\r\n    arrowLeft,\r\n    arrowRight,\r\n    arrowUp,\r\n    arrowDown,\r\n    trash\r\n} from '@wordpress/icons';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as tableStore } from \"../../data\"\r\nimport './style.scss';\r\n\r\nfunction ConfigureRowHeight(props) {\r\n\r\n    const { openColumnWidth,\r\n        columnId,\r\n        columnLabel,\r\n        columnAttributes\r\n    } = props;\r\n    //    const [closePage, setClosePage] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        switch (columnAttributes.columnWidthType) {\r\n            case 'Proportional':\r\n                {\r\n                    setHideProportional(false)\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Auto':\r\n                {\r\n                    setHideProportional(true)\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Fixed':\r\n                {\r\n                    setHideProportional(true)\r\n                    setHideCustom(true)\r\n                    setHideFixed(false)\r\n                    break;\r\n                }\r\n\r\n            case 'Custom':\r\n                {\r\n                    setHideProportional(true)\r\n                    setHideCustom(false)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n        }\r\n\r\n        setColumnWidthType(columnAttributes.columnWidthType)\r\n        setMinWidth(columnAttributes.minWidth)\r\n        setMinWidthUnits(columnAttributes.minWidthUnits)\r\n        setMaxWidth(columnAttributes.maxWidth)\r\n        setMaxWidthUnits(columnAttributes.maxWidthUnits)\r\n        setFixedWidth(columnAttributes.fixedWidth)\r\n        setFixedWidthUnits(columnAttributes.fixedWidth)\r\n        setDisableForPhone(columnAttributes.disableForPhone)\r\n        setDisableForTablet(columnAttributes.disableForTablet)\r\n    }, [columnAttributes])\r\n\r\n    function stopProp(event) {\r\n        event.stopPropagation()\r\n    }\r\n\r\n    function handleCancel(event) {\r\n        openColumnWidth(false)\r\n    }\r\n\r\n    const [columnWidthType, setColumnWidthType] = useState();\r\n    const [hideProportional, setHideProportional] = useState(true);\r\n    const [hideCustom, setHideCustom] = useState(true);\r\n    const [hideFixed, setHideFixed] = useState(true);\r\n    const [minWidth, setMinWidth] = useState(0);\r\n    const [minWidthUnits, setMinWidthUnits] = useState();\r\n    const [maxWidth, setMaxWidth] = useState(1);\r\n    const [maxWidthUnits, setMaxWidthUnits] = useState();\r\n    const [fixedWidth, setFixedWidth] = useState(0);\r\n    const [fixedWidthUnits, setFixedWidthUnits] = useState();\r\n    const [disableForTablet, setDisableForTablet] = useState(false);\r\n    const [disableForPhone, setDisableForPhone] = useState(false);\r\n\r\n    console.log('In Component ConfigureColumnWidth')\r\n    console.log(props)\r\n\r\n    function onHeightType(event) {\r\n        console.log('...In Height Type Update');\r\n        console.log(event);\r\n\r\n        switch (event) {\r\n            case 'Proportional':\r\n                {\r\n                    setMaxWidth(1)\r\n                    setMaxWidthUnits('fr')\r\n                    setMinWidth(20)\r\n                    setMinWidthUnits('ch')\r\n                    setFixedWidth(0)\r\n                    setFixedWidthUnits('px')\r\n                    setHideProportional(false)\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Auto':\r\n                {\r\n                    setMaxWidth(0)\r\n                    setMaxWidthUnits('fr')\r\n                    setMinWidth(0)\r\n                    setMinWidthUnits('ch')\r\n                    setFixedWidth(0)\r\n                    setFixedWidthUnits('px')\r\n                    setHideProportional(true)\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Fixed':\r\n                {\r\n                    setMaxWidth(0)\r\n                    setMaxWidthUnits('fr')\r\n                    setMinWidth(0)\r\n                    setMinWidthUnits('ch')\r\n                    setFixedWidth(40)\r\n                    setFixedWidthUnits('px')\r\n                    setHideProportional(true)\r\n                    setHideCustom(true)\r\n                    setHideFixed(false)\r\n                    break;\r\n                }\r\n\r\n            case 'Custom':\r\n                {\r\n                    setMaxWidth(40)\r\n                    setMaxWidthUnits('ch')\r\n                    setMinWidth(20)\r\n                    setMinWidthUnits('ch')\r\n                    setFixedWidth(0)\r\n                    setFixedWidthUnits('px')\r\n                    setHideProportional(true)\r\n                    setHideCustom(false)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n        }\r\n\r\n        setRowHeightType(event)\r\n    }\r\n\r\n    function onMinimumWidth(event) {\r\n        console.log('...In MixWidth Update');\r\n        console.log(event);\r\n        setMinWidth(event.target.value)\r\n    }\r\n\r\n    function onMinimumWidthUnits(event) {\r\n        console.log('...In MixWidth Units Update');\r\n        console.log(event);\r\n        setMinWidthUnits(event)\r\n    }\r\n\r\n    function onMaximumWidth(event) {\r\n        console.log('...In Max Width Update');\r\n        console.log(event);\r\n        setMaxWidth(event.target.value)\r\n    }\r\n\r\n    function onMaximumWidthUnits(event) {\r\n        console.log('...In Max Width  Update');\r\n        console.log(event);\r\n        setMaxWidthUnits(event)\r\n    }\r\n\r\n    function onFixedWidth(event) {\r\n        console.log('...In Max Width Update');\r\n        console.log(event);\r\n        setFixedWidth(Number(event.target.value))\r\n    }\r\n\r\n    function onFixedWidthUnits(event) {\r\n        console.log('...In Max Width Units Update');\r\n        console.log(event);\r\n        setFixedWidthUnits(event)\r\n    }\r\n\r\n    function onTablet(checked) {\r\n        console.log('...In Tablet Update');\r\n        console.log(checked);\r\n\r\n        setDisableForTablet(checked)\r\n    }\r\n\r\n    function onPhone(checked) {\r\n        console.log('...In Phone Update');\r\n        console.log(checked);\r\n\r\n        setDisableForPhone(checked)\r\n    }\r\n\r\n    function onUpdate(event) {\r\n        // event.preventDefault()\r\n        console.log('ROW HEIGHT  UPDATED...')\r\n        console.log(event)\r\n        console.log('...Max Height = ' + maxWidth)\r\n\r\n        var updatedColumnAttributes =\r\n        {\r\n            columnWidthType: columnWidthType,\r\n            minWidth: minWidth,\r\n            minWidthUnits: minWidthUnits,\r\n            maxWidth: Number(maxWidth),\r\n            maxWidthUnits: maxWidthUnits,\r\n            fixedWidth: fixedWidth,\r\n            fixedWidthUnits: fixedWidthUnits,\r\n            disableForTablet: disableForTablet,\r\n            disableForPhone: disableForPhone,\r\n            isFixedLeftColumnGroup: false,\r\n            horizontalAlignment: \"none\"\r\n        }\r\n\r\n        console.log(updatedColumnAttributes)\r\n\r\n        openRowHeight(false, updatedColumnAttributes)\r\n    }\r\n\r\n    console.log('RENDER PROPS');\r\n    console.log('...Disable Proportional Input = ' + hideProportional);\r\n    console.log('...Disable Fixed Input = ' + hideFixed);\r\n    console.log('...Disable Custom Input = ' + hideCustom);\r\n\r\n    return (\r\n        <>\r\n            {(openRowHeight) && (\r\n                <Modal\r\n                    title=\"Configure Column Width\"\r\n                    onRequestClose={handleCancel}\r\n                    focusOnMount=\"firstContentElement\"\r\n                    isDismissible=\"false\"\r\n                    shouldCloseOnClickOutside=\"false\"\r\n                    size=\"large\">\r\n                    <p className=\"column-label\">\r\n                        For column {columnLabel}\r\n                    </p>\r\n\r\n                    <form\r\n                        // className=\"blocks-table__placeholder-form\"\r\n                        onSubmit={onUpdate}\r\n                        onMouseDown={stopProp}\r\n\r\n                    >\r\n                        <SelectControl\r\n                            label=\"Height Type\"\r\n                            value={rowHeightType}\r\n                            onChange={e => onHeightType(e)}\r\n                            options={[\r\n                                { value: \"Proportional\", label: \"Proportional\" },\r\n                                { value: \"Auto\", label: \"Automatic\" },\r\n                                { value: \"Fixed\", label: \"Fixed width\" },\r\n                                { value: \"Custom\", label: \"Custom\" }\r\n                            ]}\r\n                            __nextHasNoMarginBottom\r\n                        />\r\n\r\n                        <fieldset\r\n                            className={(hideProportional === true ? \" column-width--not-visible\" : \"\")}>\r\n                            <legend>Set Proportional Width</legend>\r\n                            <NumberControl\r\n                                className=\"column-width-value-input\"\r\n                                label=\"Number of portions\"\r\n                                labelPosition=\"side\"\r\n                                onBlur={e => onMaximumWidth(e)}\r\n                                value={maxWidth}\r\n                            />\r\n\r\n                            <span\r\n                                className=\"column-width-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"column-width-value-input\"\r\n                                    label=\"Minimum width\"\r\n                                    labelPosition=\"left\"\r\n                                    value={minWidth}\r\n                                    onBlur={e => onMinimumWidth(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"column-width-unit-input\"\r\n                                    labelPosition=\"left\"\r\n                                    label=\"Units\"\r\n                                    value={minWidthUnits}\r\n                                    onChange={e => onMinimumWidthUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"characters\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n                        </fieldset>\r\n\r\n                        <fieldset\r\n                            className={(hideFixed === true ? \"column-width--not-visible\" : \"\")}>\r\n                            <legend>Set Fixed Width</legend>\r\n\r\n                            <span\r\n                                className=\"column-width-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"column-width-input\"\r\n                                    label=\"Fixed width\"\r\n                                    labelPosition=\"left\"\r\n                                    value={fixedWidth}\r\n                                    onBlur={e => onFixedWidth(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"column-width-unit-input\"\r\n                                    label=\"Units\"\r\n                                    labelPosition=\"left\"\r\n                                    value={fixedWidthUnits}\r\n                                    onChange={e => onFixedWidthUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"font\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n                        </fieldset>\r\n\r\n                        <fieldset\r\n                            className={(hideCustom === true ? \"column-width--not-visible\" : \"\")}>\r\n                            <legend>Set Custom Width</legend>\r\n                            <span\r\n                                className=\"column-width-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"column-width-input\"\r\n                                    label=\"Minimum width\"\r\n                                    labelPosition=\"left\"\r\n                                    value={minWidth}\r\n                                    onBlur={e => onMinimumWidth(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"column-width-unit-input\"\r\n                                    labelPosition=\"left\"\r\n                                    label=\"Units\"\r\n                                    value={minWidthUnits}\r\n                                    onChange={e => onMinimumWidthUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"characters\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n\r\n                            <span\r\n                                className=\"column-width-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"column-width-input\"\r\n                                    label=\"Maximum width\"\r\n                                    labelPosition=\"left\"\r\n                                    value={maxWidth}\r\n                                    onBlur={e => onMaximumWidth(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"column-width-unit-input\"\r\n                                    labelPosition=\"left\"\r\n                                    label=\"Units\"\r\n                                    value={maxWidthUnits}\r\n                                    onChange={e => onMaximumWidthUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"characters\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n                        </fieldset>\r\n\r\n                        <CheckboxControl\r\n                            label=\"Hide for tablet\"\r\n                            checked={disableForTablet}\r\n                            onChange={onTablet}\r\n                        />\r\n                        <CheckboxControl\r\n                            label=\"Hide for phone\"\r\n                            checked={disableForPhone}\r\n                            onChange={onPhone}\r\n                        />\r\n\r\n                        <span>\r\n                            <Button variant=\"secondary\" onClick={handleCancel}>\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </span>\r\n                    </form>\r\n                </Modal >\r\n            )\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport { ConfigureRowHeight };","export { ColumnMenu } from './column-dropdown-menu';\r\nexport { ConfigureColumnWidth } from './configure-column-width';\r\n\r\nexport { RowMenu } from './row-dropdown-menu';\r\nexport { ConfigureRowHeight } from './configure-row-height';\r\n","import { useEffect, useState } from \"@wordpress/element\"\r\nimport {\r\n    DropdownMenu,\r\n    MenuGroup,\r\n    MenuItem\r\n} from '@wordpress/components';\r\nimport {\r\n    AlignmentToolbar\r\n\r\n} from '@wordpress/block-editor';\r\nimport {\r\n    blockTable as icon,\r\n    moreVertical,\r\n    more,\r\n    arrowLeft,\r\n    arrowRight,\r\n    arrowUp,\r\n    arrowDown,\r\n    trash\r\n} from '@wordpress/icons';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as tableStore } from \"../../data\"\r\nimport { ConfigureRowHeight } from '../configure-row-height';\r\nimport '../../editor.scss';\r\n\r\n\r\nfunction RowMenu(props) {\r\n\r\n    const [openModalRowHeight, setOpenModalRowHeight] = useState(false);\r\n    const [rowAttributes, setRowAttributes] = useState({})\r\n\r\n    const {\r\n        tableId,\r\n        rowId,\r\n        rowLabel,\r\n        updatedRow\r\n    } = props\r\n\r\n    useEffect(() => {\r\n        setRowAttributes(props.rowAttributes)\r\n    }, [props.rowAttributes])\r\n\r\n    console.log('In Component RowMenu')\r\n    console.log(props)\r\n\r\n    function onInsertRow(event, rowId) {\r\n        console.log('    ...onInsertRow');\r\n        console.log(event);\r\n        console.log('rowId = ' + rowId)\r\n        updatedRow(event, 'insert', tableId, rowId, '')\r\n    }\r\n\r\n    function onDeleteRow(event, rowId) {\r\n        console.log('    ...onDeleteRow');\r\n        console.log(event);\r\n        console.log('rowId = ' + rowId)\r\n        updatedRow(event, 'delete', tableId, rowId, '')\r\n    }\r\n\r\n    function onUpdateRowHeight(event, updatedRowAttributes) {\r\n        console.log('    ...onUpdateRowHeight');\r\n        console.log(event);\r\n        console.log(updatedRowAttributes);\r\n        if (openModalRowHeight) {\r\n            setOpenModalRowHeight(false)\r\n            updatedRow(event, 'attributes', tableId, rowId, updatedRowAttributes)\r\n        } else {\r\n            event.preventDefault()\r\n            setOpenModalRowHeight(true)\r\n        }\r\n    }\r\n\r\n    console.log('Open row height page = ' + openModalRowHeight)\r\n\r\n    return (\r\n        <>\r\n            <DropdownMenu\r\n                // style={{ display: \"none\" }}\r\n                icon={moreVertical}\r\n                defaultOpen=\"true\"\r\n                label={rowLabel}>\r\n                {({ onClose }) => (\r\n                    <>\r\n                        <MenuGroup>\r\n                            <MenuItem icon={arrowUp} onClick={onUpdateRowHeight}>\r\n                                Update Row Height\r\n                            </MenuItem>\r\n                        </MenuGroup>\r\n                        <MenuGroup>\r\n                            <MenuItem icon={arrowDown} onClick={e => onInsertRow(e, rowId)}>\r\n                                Insert Row\r\n                            </MenuItem>\r\n                            <MenuItem icon={trash} onClick={e => onDeleteRow(e, rowId)}>\r\n                                Delete Row\r\n                            </MenuItem>\r\n                        </MenuGroup>\r\n                    </>\r\n                )}\r\n            </DropdownMenu>\r\n\r\n            {openModalRowHeight && (\r\n                <ConfigureRowHeight\r\n                    rowId={rowId}\r\n                    rowLabel={rowLabel}\r\n                    rowAttributes={rowAttributes}\r\n                    openRowHeight={onUpdateRowHeight}>\r\n                </ConfigureRowHeight>\r\n            )}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport { RowMenu };","const TYPES = {\r\n    CREATE_TABLE: \"CREATE_TABLE\",\r\n    INSERT_COLUMN: \"INSERT_COLUMN\",\r\n    INSERT_ROW: \"INSERT_ROW\",\r\n    DELETE_TABLE: \"DELETE_TABLE\",\r\n    DELETE_COLUMN: \"DELETE_COLUMN\",\r\n    DELETE_ROW: \"DELETE_ROW\",\r\n    CHANGE_TABLE_ID: \"CHANGE_TABLE_ID\",\r\n    UPDATE_TABLE_PROP: \"UPDATE_TABLE_PROP\",\r\n    REMOVE_TABLE_PROP: \"REMOVE_TABLE_PROP\",\r\n    UPDATE_ROW: \"UPDATE_ROW\",\r\n    UPDATE_COLUMN: \"UPDATE_COLUMN\",\r\n    UPDATE_CELL: \"UPDATE_CELL\",\r\n    RECEIVE_HYDRATE: \"RECEIVE_HYDRATE\",\r\n    RECEIVE_HYDRATE_TEST: \"RECEIVE_HYDRATE_TEST\",\r\n    PERSIST: \"PERSIST\",\r\n    PROCESS_BORDERS: \"PROCESS_BORDERS\"\r\n};\r\n\r\nexport default TYPES;","import { addEntities } from '@wordpress/core-data';\r\nimport { addQueryArgs } from \"@wordpress/url\";\r\nimport { apiFetch } from \"@wordpress/data-controls\";\r\nimport { store as coreStore } from \"@wordpress/core-data\"\r\nimport { store as blockEditorStore } from \"@wordpress/block-editor\"\r\nimport TYPES from \"./action-types.js\";\r\n\r\nconst {\r\n    CREATE_TABLE,\r\n    INSERT_COLUMN,\r\n    INSERT_ROW,\r\n    DELETE_TABLE,\r\n    DELETE_COLUMN,\r\n    DELETE_ROW,\r\n    CHANGE_TABLE_ID,\r\n    UPDATE_TABLE_PROP,\r\n    REMOVE_TABLE_PROP,\r\n    UPDATE_ROW,\r\n    UPDATE_COLUMN,\r\n    UPDATE_CELL,\r\n    RECEIVE_HYDRATE,\r\n    RECEIVE_HYDRATE_TEST,\r\n    PERSIST,\r\n    PROCESS_BORDERS\r\n} = TYPES;\r\n\r\nexport function addTableEntity() {\r\n    ({ registry }) => {\r\n        // let configs = select.getEntitiesConfig(kind);\r\n        // if (configs && configs.length !== 0) {\r\n        //     return configs;\r\n        // }\r\n        registry.dispatch(coreStore).addEntities(tableEntityConfig);\r\n\r\n        return configs;\r\n    };\r\n}\r\n\r\n/**\r\n * @example wp.data.dispatch( 'mfw/table').refreshPost\r\n * @example wp.data.dispatch( 'mfw/table' ).table\r\n * \r\n * \r\n * \r\n */\r\n\r\nexport function receiveNewTable(table) {\r\n    console.log('Receiving New Table')\r\n    console.log(table)\r\n    console.log(table.table.table_id)\r\n\r\n    return {\r\n        type: CREATE_TABLE,\r\n        tableId: table.table.table_id,\r\n        ...table\r\n    }\r\n}\r\n\r\nexport function receiveTable(table_id, block_table_ref, post_id, table_name, table_attributes, table_classes, rows, columns, cells) {\r\n    console.log('            ...Action - In receiveTable')\r\n    //console.log(table);\r\n    console.log('                - id: ' + table_id)\r\n    //console.log('                - table: ' + JSON.stringify(table));\r\n    //console.log('                - tableId ' + tableId);\r\n\r\n    return {\r\n        type: RECEIVE_HYDRATE,\r\n        tableId: table_id,\r\n        table: {\r\n            table_id,\r\n            block_table_ref,\r\n            post_id,\r\n            table_status: 'saved',\r\n            table_name,\r\n            table_attributes,\r\n            table_classes,\r\n            rows,\r\n            columns,\r\n            cells\r\n        }\r\n    }\r\n}\r\n\r\nexport const createTableEntity =\r\n    () =>\r\n        async ({ select, dispatch, registry }) => {\r\n\r\n            const { table_id, block_table_ref, post_id, table_name, table_attributes, table_classes, rows, columns, cells } = select.getTable('0', 'Saved');\r\n            const testTable = select.getTable('0', false);\r\n            console.log(testTable);\r\n            const newTable = {\r\n                header: {\r\n                    id: table_id,\r\n                    block_table_ref: block_table_ref,\r\n                    post_id: post_id,\r\n                    table_name: table_name,\r\n                    table_attributes: table_attributes,\r\n                    table_classes: table_classes\r\n                },\r\n                rows: [...rows],\r\n                columns: [...columns],\r\n                cells: [...cells]\r\n            }\r\n\r\n            console.log('CREATING TABLE ENTITY')\r\n            console.log(newTable)\r\n\r\n            try {\r\n                const tableEntity = await registry\r\n                    .dispatch(coreStore)\r\n                    .saveEntityRecord(\r\n                        'dynamic-tables/v1',\r\n                        'table',\r\n                        newTable\r\n                    );\r\n\r\n                dispatch.assignTableId(tableEntity.id);\r\n\r\n                return tableEntity.id\r\n\r\n            } catch (error) {\r\n                console.log('            ...Resolver - async error - ' + error);\r\n            }\r\n            console.log('            Resolver - async completed');\r\n        };\r\n\r\n\r\nexport const updateTableEntity =\r\n    (tableId) =>\r\n        ({ select, registry }) => {\r\n\r\n            const testTable = select.getTable(tableId, false)\r\n            console.log(testTable)\r\n            const {\r\n                table_id,\r\n                block_table_ref,\r\n                post_id,\r\n                table_name,\r\n                table_attributes,\r\n                table_classes,\r\n                rows,\r\n                columns,\r\n                cells\r\n            } = select.getTable(tableId, false)\r\n\r\n            // Remove border row if it exists\r\n            var filteredRows = rows\r\n                .filter((row) =>\r\n                    row.row_id !== '0'\r\n                )\r\n\r\n            // Remove border column if it exists\r\n            var filteredColumns = columns\r\n                .filter((column) =>\r\n                    column.column_id !== '0'\r\n                )\r\n\r\n            // Remove border cells if they exists\r\n            var filteredCells = cells\r\n                .filter((cell) =>\r\n                    cell.row_id !== '0' && cell.column_id !== '0'\r\n                )\r\n\r\n            const updatedTable = {\r\n                id: tableId,\r\n                header: {\r\n                    id: table_id,\r\n                    block_table_ref: block_table_ref,\r\n                    post_id: post_id,\r\n                    table_name: table_name,\r\n                    table_attributes: table_attributes,\r\n                    table_classes: table_classes\r\n                },\r\n                rows: [...filteredRows],\r\n                columns: [...filteredColumns],\r\n                cells: [...filteredCells]\r\n            }\r\n\r\n            console.log('UPDATING TABLE ENTITY')\r\n            console.log(updatedTable)\r\n\r\n\r\n            /**\r\n             * Options: isCached: Bool\r\n             *          undoIgnore: Bool\r\n             */\r\n            registry\r\n                .dispatch(coreStore)\r\n                .editEntityRecord(\r\n                    'dynamic-tables/v1',\r\n                    'table',\r\n                    table_id,\r\n                    updatedTable\r\n                );\r\n        };\r\n\r\nexport const deleteTableEntity =\r\n    (tableId) =>\r\n        async ({ select, dispatch, registry }) => {\r\n            console.log('In Action deleteTableEntity')\r\n\r\n            try {\r\n                const deletedTableEntity = await registry\r\n                    .dispatch(coreStore)\r\n                    .deleteEntityRecord(\r\n                        'dynamic-tables/v1',\r\n                        'table',\r\n                        tableId\r\n                    );\r\n\r\n                dispatch({\r\n                    type: DELETE_TABLE,\r\n                    tableId\r\n                })\r\n            } catch (error) {\r\n                console.log('            ...Resolver - async error - ' + error);\r\n            }\r\n            console.log('            Resolver - async completed');\r\n        };\r\n\r\nexport const processDeletedTables =\r\n    (deletedTables) =>\r\n        ({ dispatch, registry }) => {\r\n            Object.keys(deletedTables).forEach(key => {\r\n                const deletedTableId = deletedTables[key].table_id\r\n                console.log(deletedTableId)\r\n                dispatch.deleteTableEntity(deletedTables[key].table_id)\r\n            })\r\n        }\r\n\r\nexport const processUnmountedTables =\r\n    (unmountedTables) =>\r\n        ({ dispatch, registry }) => {\r\n            Object.keys(unmountedTables).forEach(key => {\r\n                const unmountedTableBlockId = unmountedTables[key].unmounted_blockid\r\n                const tableBlock = registry.select(blockEditorStore).getBlock(unmountedTableBlockId)\r\n                console.log(tableBlock)\r\n                if (tableBlock) {\r\n                    dispatch.removeTableProp(unmountedTables[key].table_id, 'unmounted_blockid')\r\n                } else {\r\n                    dispatch.removeTableProp(unmountedTables[key].table_id, 'unmounted_blockid')\r\n                    dispatch.updateTableProp(unmountedTables[key].table_id, 'table_status', 'deleted');\r\n                }\r\n            })\r\n        }\r\n\r\nexport const addColumn = (tableId, columnId, newColumn, columnCells) => {\r\n    return {\r\n        type: INSERT_COLUMN,\r\n        tableId,\r\n        columnId,\r\n        newColumn,\r\n        columnCells\r\n    }\r\n}\r\n\r\nexport const addRow = (tableId, rowId, newRow, rowCells) => {\r\n    return {\r\n        type: INSERT_ROW,\r\n        tableId,\r\n        rowId,\r\n        newRow,\r\n        rowCells\r\n    }\r\n}\r\n\r\nexport const removeColumn = (tableId, columnId) => {\r\n    return {\r\n        type: DELETE_COLUMN,\r\n        tableId,\r\n        columnId\r\n    }\r\n\r\n}\r\n\r\nexport const removeRow = (tableId, rowId) => {\r\n    return {\r\n        type: DELETE_ROW,\r\n        tableId,\r\n        rowId\r\n    }\r\n}\r\n\r\nexport const assignTableId = (tableId) => {\r\n    console.log('In Action updateTableProp')\r\n    return {\r\n        type: CHANGE_TABLE_ID,\r\n        tableId: '0',\r\n        newTableId: String(tableId),\r\n    }\r\n}\r\n\r\nexport const updateTableProp = (tableId, attribute, value) => {\r\n    console.log('In Action updateTableProp')\r\n    return {\r\n        type: UPDATE_TABLE_PROP,\r\n        tableId: tableId,\r\n        attribute,\r\n        value\r\n    }\r\n}\r\n\r\nexport const removeTableProp = (tableId, attribute) => {\r\n    console.log('In Action updateTableProp')\r\n    return {\r\n        type: REMOVE_TABLE_PROP,\r\n        tableId: tableId,\r\n        attribute\r\n    }\r\n}\r\n\r\nexport const updateRow = (tableId, rowId, attribute, value) => {\r\n\r\n    console.log('In Action updateRow')\r\n    return {\r\n        type: UPDATE_ROW,\r\n        tableId,\r\n        rowId,\r\n        attribute,\r\n        value\r\n    }\r\n}\r\n\r\nexport const updateColumn = (tableId, columnId, attribute, value) => {\r\n\r\n    console.log('In Action updateColumn')\r\n    return {\r\n        type: UPDATE_COLUMN,\r\n        tableId,\r\n        columnId,\r\n        attribute,\r\n        value\r\n    }\r\n}\r\n\r\nexport const updateCell = (tableId, cellId, attribute, value) => {\r\n    console.log('In Action updateCell')\r\n    return {\r\n        type: UPDATE_CELL,\r\n        tableId,\r\n        cellId,\r\n        attribute,\r\n        value\r\n    }\r\n}\r\n\r\n// async ({ dispatch }) => {\r\n//     console.log('In Action updateCell')\r\n\r\n//     await dispatch({\r\n//         type: UPDATE_CELL,\r\n//         cellId,\r\n//         attribute,\r\n//         value\r\n//     })\r\n// }\r\n\r\nexport const updateTableBorder =\r\n    (\r\n        tableId,\r\n        tableRows,\r\n        tableColumns,\r\n        tableCells\r\n    ) =>\r\n\r\n        async ({ dispatch }) => {\r\n            console.log('Updating Border')\r\n\r\n            await dispatch({\r\n                type: PROCESS_BORDERS,\r\n                tableId: tableId,\r\n                rows: tableRows,\r\n                columns: tableColumns,\r\n                cells: tableCells\r\n            })\r\n        }\r\n\r\n\r\n// Hold in case needed\r\nexport function receiveTableTest(tableEntity) {\r\n    console.log('            ...Action - In receiveTableTest')\r\n    //console.log(table);\r\n    // console.log('                - id: ' + table_id)\r\n    //console.log('                - table: ' + JSON.stringify(table));\r\n    //console.log('                - tableId ' + tableId);\r\n\r\n    return {\r\n        type: RECEIVE_HYDRATE_TEST,\r\n        tableEntity\r\n        // tableTest: {\r\n        //     testTable\r\n        // }\r\n    }\r\n}\r\n\r\nconst tableEntityConfig = [\r\n    {\r\n        name: 'dynamicTable',\r\n        kind: 'dynamic-tables/v1',\r\n        baseURL: '/dynamic-tables/v1/table',\r\n        // baseURLParams: { tableId: '18' },\r\n\r\n        // plural: 'taxonomies',\r\n        // label: __('Taxonomy'),\r\n        // syncConfig: {\r\n        //     fetch: async () => {\r\n        //         return apiFetch({ path: '/' });\r\n        //     },\r\n        //     applyChangesToDoc: (doc, changes) => {\r\n        //         const document = doc.getMap('document');\r\n        //         Object.entries(changes).forEach(([key, value]) => {\r\n        //             if (document.get(key) !== value) {\r\n        //                 document.set(key, value);\r\n        //             }\r\n        //         });\r\n        //     },\r\n        //     fromCRDTDoc: (doc) => {\r\n        //         return doc.getMap('document').toJSON();\r\n        //     },\r\n        // },\r\n        // syncObjectType: 'root/base',\r\n        // getSyncObjectId: () => 'index',\r\n    },\r\n\r\n];","const STORE_NAME = \"dynamic-tables/table\";\r\nexport default STORE_NAME;","import { createReduxStore, register } from '@wordpress/data';\r\n\r\nimport reducer from \"./reducer\";\r\nimport * as selectors from \"./selectors\";\r\nimport * as actions from \"./actions\";\r\nimport * as resolvers from \"./resolvers\";\r\nimport STORE_NAME from \"./constants\";\r\n\r\n// const storeConfig = () => ({\r\n//     selectors,\r\n//     actions,\r\n//     reducer,\r\n//     resolvers\r\n// });\r\n\r\n// export const store = createReduxStore(STORE_NAME, storeConfig());\r\nexport const store = createReduxStore(STORE_NAME, {\r\n    reducer,\r\n    selectors,\r\n    actions,\r\n    resolvers\r\n});\r\n\r\nregister(store);\r\n\r\n// Register store after unlocking private selectors to allow resolvers to use them.\r\n","import TYPES from \"./action-types\";\r\nimport {\r\n    numberToLetter,\r\n    updateArray,\r\n    tableSort\r\n} from '../utils';\r\n\r\nconst {\r\n    CREATE_TABLE,\r\n    INSERT_COLUMN,\r\n    INSERT_ROW,\r\n    DELETE_TABLE,\r\n    DELETE_COLUMN,\r\n    DELETE_ROW,\r\n    CHANGE_TABLE_ID,\r\n    UPDATE_TABLE_PROP,\r\n    REMOVE_TABLE_PROP,\r\n    UPDATE_ROW,\r\n    UPDATE_COLUMN,\r\n    UPDATE_CELL,\r\n    RECEIVE_HYDRATE,\r\n    RECEIVE_HYDRATE_TEST,\r\n    PERSIST,\r\n    PROCESS_BORDERS\r\n} = TYPES;\r\n\r\nconst table = (\r\n    state = {\r\n        table: {}\r\n    },\r\n\r\n    action) => {\r\n\r\n    console.log('      Reducer. state: ' + JSON.stringify(state));\r\n    console.log('      Reducer. type: ' + action.type);\r\n\r\n    switch (action.type) {\r\n        case CREATE_TABLE:\r\n            console.log('In Reducer CREATE_TABLE')\r\n            console.log(action.table)\r\n\r\n            return {\r\n                table: {\r\n                    ...action.table\r\n                }\r\n            }\r\n\r\n        case CHANGE_TABLE_ID:\r\n            console.log('In Reducer UPDATE_TABLE_PROP')\r\n            const newTableIdState = { ...state }\r\n            var rowsWithNewId = []\r\n            var columnsWithNewId = []\r\n            var cellsWithNewId = []\r\n\r\n            newTableIdState.rows.foreach((row) => {\r\n                let newRow = {\r\n                    ...row,\r\n                    table_id: action.newTableId,\r\n                }\r\n                rowsWithNewId.push(newRow)\r\n            })\r\n\r\n            newTableIdState.columns.foreach((column) => {\r\n                let newColumn = {\r\n                    ...column,\r\n                    table_id: action.newTableId,\r\n                }\r\n                columnsWithNewId.push(newColumn)\r\n            })\r\n\r\n            newTableIdState.cells.foreach((cell) => {\r\n                let newCell = {\r\n                    ...cell,\r\n                    table_id: action.newTableId,\r\n                }\r\n                cellsWithNewId.push(newCellRow)\r\n            })\r\n\r\n            const updatedTableId = {\r\n                ...state,\r\n                table_id: action.newTableId,\r\n                rows: [...rowsWithNewId],\r\n                columns: [...columnsWithNewId],\r\n                cells: [...cellsWithNewId]\r\n            }\r\n            console.log(updatedTableId)\r\n\r\n            return {\r\n                table: updatedTableId\r\n            }\r\n\r\n        case UPDATE_TABLE_PROP:\r\n            console.log('In Reducer UPDATE_TABLE_PROP')\r\n            const updatedTable = {\r\n                ...state,\r\n                [action.attribute]: action.value\r\n            }\r\n            console.log(updatedTable)\r\n\r\n            return {\r\n                table: updatedTable\r\n            }\r\n\r\n        case REMOVE_TABLE_PROP:\r\n            const tablePropRemoved = { ...state }\r\n            // const removedAttribute = action.attribute\r\n            delete tablePropRemoved[action.attribute]\r\n\r\n            return {\r\n                table: tablePropRemoved\r\n            }\r\n\r\n        case INSERT_COLUMN:\r\n            console.log('In Reducer INSERT_COLUMN')\r\n            let insertColumnState = { ...state }\r\n\r\n            /**\r\n             * Insert new column and update existing column_id's\r\n             */\r\n            var columnsWithNewId = []\r\n            insertColumnState.columns.forEach((column) => {\r\n                if (Number(column.column_id) < Number(action.columnId)) {\r\n                    columnsWithNewId.push(column)\r\n                } else {\r\n                    let newColumn = {\r\n                        table_id: column.table_id,\r\n                        column_id: String(Number(column.column_id) + 1),\r\n                        column_name: column.column_name,\r\n                        attributes: column.attributes,\r\n                        classes: column.classes\r\n                    }\r\n                    columnsWithNewId.push(newColumn)\r\n                }\r\n            })\r\n            columnsWithNewId.push(action.newColumn)\r\n            var sortedColumns = tableSort('columns', columnsWithNewId)\r\n\r\n            /**\r\n             * Insert new cells and update existing column_id's\r\n             */\r\n            var cellsWithNewId = []\r\n            insertColumnState.cells.forEach((cell) => {\r\n                if (cell.column_id < action.columnId) {\r\n                    cellsWithNewId.push(cell)\r\n                } else {\r\n\r\n                    let newColumnId = String(Number(cell.column_id) + 1)\r\n                    let columnLetter = numberToLetter(newColumnId)\r\n                    let cellContent = Number(cell.row_id) == 0 ? columnLetter : cell.content\r\n                    let newCell = {\r\n                        table_id: cell.table_id,\r\n                        column_id: newColumnId,\r\n                        row_id: cell.row_id,\r\n                        cell_id: columnLetter + cell.row_id,\r\n                        attributes: cell.attributes,\r\n                        classes: cell.classes,\r\n                        content: cellContent\r\n                    }\r\n                    cellsWithNewId.push(newCell)\r\n                }\r\n            })\r\n\r\n            var allNewColumnCells = [...cellsWithNewId, ...action.columnCells]\r\n            var sortedCells = tableSort('cells', allNewColumnCells)\r\n\r\n            var returnedTableNewColumn =\r\n            {\r\n                ...insertColumnState,\r\n                rows: [...insertColumnState.rows],\r\n                columns: [...sortedColumns],\r\n                cells: [...sortedCells]\r\n            }\r\n\r\n            console.log(returnedTableNewColumn)\r\n\r\n            return {\r\n                table: returnedTableNewColumn\r\n            }\r\n\r\n        case INSERT_ROW:\r\n            console.log('In Reducer INSERT_ROW')\r\n            let insertRowState = { ...state }\r\n\r\n            /**\r\n             * Insert new row and update existing row_id's\r\n             */\r\n            var rowsWithNewId = []\r\n            insertRowState.rows.forEach((row) => {\r\n                if (Number(row.row_id) < Number(action.rowId)) {\r\n                    rowsWithNewId.push(row)\r\n                } else {\r\n                    let newRow = {\r\n                        table_id: row.table_id,\r\n                        row_id: String(Number(row.row_id) + 1),\r\n                        attributes: row.attributes,\r\n                        classes: row.classes\r\n                    }\r\n                    rowsWithNewId.push(newRow)\r\n                }\r\n            })\r\n            rowsWithNewId.push(action.newRow)\r\n            console.log(rowsWithNewId)\r\n\r\n            var sortedRows = tableSort('rows', rowsWithNewId)\r\n            console.log(sortedRows)\r\n\r\n            /**\r\n             * Insert new cells and update existing column_id's\r\n             */\r\n            var cellsWithNewId = []\r\n            insertRowState.cells.forEach((cell) => {\r\n                console.log(cell)\r\n                if (Number(cell.row_id) < Number(action.rowId)) {\r\n                    cellsWithNewId.push(cell)\r\n                } else {\r\n\r\n                    let newRowId = String(Number(cell.row_id) + 1)\r\n                    let columnLetter = cell.column_id == '0' ? '0' : numberToLetter(cell.column_id)\r\n                    let cellContent = Number(cell.column_id) == 0 ? newRowId : cell.content\r\n                    let newCell = {\r\n                        table_id: cell.table_id,\r\n                        column_id: cell.column_id,\r\n                        row_id: newRowId,\r\n                        cell_id: columnLetter + newRowId,\r\n                        attributes: cell.attributes,\r\n                        classes: cell.classes,\r\n                        content: cellContent\r\n                    }\r\n                    cellsWithNewId.push(newCell)\r\n                }\r\n            })\r\n\r\n            var allNewRowCells = [...cellsWithNewId, ...action.rowCells]\r\n            var sortedCells = tableSort('cells', allNewRowCells)\r\n\r\n            var returnedTableNewRow =\r\n            {\r\n                ...insertRowState,\r\n                rows: [...sortedRows],\r\n                columns: [...insertRowState.columns],\r\n                cells: [...sortedCells]\r\n            }\r\n\r\n            return {\r\n                table: returnedTableNewRow\r\n            }\r\n\r\n        case DELETE_COLUMN:\r\n            console.log('In Reducer DELETE_COLUMN')\r\n            let deleteColumnState = { ...state }\r\n\r\n            /**\r\n             * Delete new column and update existing column_id's\r\n             */\r\n            var columnsWithNewId = []\r\n            deleteColumnState.columns.forEach((column) => {\r\n                if (column.column_id < action.columnId) {\r\n                    columnsWithNewId.push(column)\r\n                } else if (column.column_id > action.columnId) {\r\n                    let newColumn = {\r\n                        table_id: column.table_id,\r\n                        column_id: String(Number(column.column_id) - 1),\r\n                        column_name: column.column_name,\r\n                        attributes: column.attributes,\r\n                        classes: column.classes\r\n                    }\r\n                    columnsWithNewId.push(newColumn)\r\n                }\r\n            })\r\n            // columnsWithNewId.push(action.newColumn)\r\n            // var sortedColumns = tableSort('columns', columnsWithNewId)\r\n\r\n            /**\r\n             * Delete new cells and update existing column_id's\r\n             */\r\n            var cellsWithNewId = []\r\n            deleteColumnState.cells.forEach((cell) => {\r\n                if (cell.column_id < action.columnId) {\r\n                    cellsWithNewId.push(cell)\r\n                } else if (cell.column_id > action.columnId) {\r\n                    let newColumnId = String(Number(cell.column_id) - 1)\r\n                    let columnLetter = numberToLetter(newColumnId)\r\n                    let cellContent = Number(cell.row_id) == 0 ? columnLetter : cell.content\r\n                    let newCell = {\r\n                        table_id: cell.table_id,\r\n                        column_id: newColumnId,\r\n                        row_id: cell.row_id,\r\n                        cell_id: columnLetter + cell.row_id,\r\n                        attributes: cell.attributes,\r\n                        classes: cell.classes,\r\n                        content: cellContent\r\n                    }\r\n                    cellsWithNewId.push(newCell)\r\n                }\r\n            })\r\n\r\n            // var allNewColumnCells = [...cellsWithNewId, ...action.columnCells]\r\n            // var sortedCells = tableSort('cells', allNewColumnCells)\r\n\r\n            var returnedTableNewColumn =\r\n            {\r\n                ...deleteColumnState,\r\n                rows: [...deleteColumnState.rows],\r\n                columns: [...columnsWithNewId],\r\n                cells: [...cellsWithNewId]\r\n            }\r\n\r\n            console.log(returnedTableNewColumn)\r\n\r\n            return {\r\n                table: returnedTableNewColumn\r\n            }\r\n\r\n        case DELETE_ROW:\r\n            console.log('In Reducer DELETE_COLUMN')\r\n            let deleteRowState = { ...state }\r\n\r\n            /**\r\n             * Delete new column and update existing column_id's\r\n             */\r\n            var rowsWithNewId = []\r\n            console.log(deleteRowState)\r\n            deleteRowState.rows.forEach((row) => {\r\n                if (row.row_id < action.rowId) {\r\n                    rowsWithNewId.push(row)\r\n                } else if (row.row_id > action.rowId) {\r\n                    let newRow = {\r\n                        table_id: row.table_id,\r\n                        row_id: String(Number(row.row_id) - 1),\r\n                        attributes: row.attributes,\r\n                        classes: row.classes\r\n                    }\r\n                    rowsWithNewId.push(newRow)\r\n                }\r\n            })\r\n            // rowsWithNewId.push(action.newColumn)\r\n            // var sortedRows= tableSort('rows', rowsWithNewId)\r\n\r\n            /**\r\n             * Delete new cells and update existing row_id's\r\n             */\r\n            var cellsWithNewId = []\r\n            console.log(deleteRowState.cells)\r\n            deleteRowState.cells.forEach((cell) => {\r\n                if (cell.row_id < action.rowId) {\r\n                    cellsWithNewId.push(cell)\r\n                } else if (cell.row_id > action.rowId) {\r\n                    let newRowId = String(Number(cell.row_id) - 1)\r\n                    let columnLetter = cell.column_id == '0' ? '0' : numberToLetter(cell.column_id)\r\n                    let cellContent = Number(cell.column_id) == 0 ? newRowId : cell.content\r\n                    let newCell = {\r\n                        table_id: cell.table_id,\r\n                        column_id: cell.column_id,\r\n                        row_id: newRowId,\r\n                        cell_id: columnLetter + cell.row_id,\r\n                        attributes: cell.attributes,\r\n                        classes: cell.classes,\r\n                        content: cellContent\r\n                    }\r\n                    cellsWithNewId.push(newCell)\r\n                }\r\n            })\r\n\r\n            // var allNewColumnCells = [...cellsWithNewId, ...action.columnCells]\r\n            // var sortedCells = tableSort('cells', allNewColumnCells)\r\n\r\n            var returnedTableNewRow =\r\n            {\r\n                ...deleteRowState,\r\n                rows: [...rowsWithNewId],\r\n                columns: [...deleteRowState.columns],\r\n                cells: [...cellsWithNewId]\r\n            }\r\n\r\n            console.log(returnedTableNewRow)\r\n\r\n            return {\r\n                table: returnedTableNewRow\r\n            }\r\n\r\n        case UPDATE_ROW:\r\n            console.log('In Reducer UPDATE_COLUMN')\r\n            let newRowsState = { ...state }\r\n            let updatedRowData = JSON.parse('{ \"' + action.attribute + '\" : \"' + action.value + '\"}')\r\n            let updatedRows = updateArray(newRowsState.rows, 'row_id', action.rowId, updatedRowData)\r\n\r\n            var returnedUpdatedTableRow =\r\n            {\r\n                ...newRowsState,\r\n                rows: [...updatedRows],\r\n                columns: [...newRowsState.columns],\r\n                cells: [...newRowsState.cells]\r\n            }\r\n            return {\r\n                table: returnedUpdatedTableRow\r\n            }\r\n\r\n        case UPDATE_COLUMN:\r\n            console.log('In Reducer UPDATE_COLUMN')\r\n\r\n            let transformedValue = ' \"' + action.value + '\"';\r\n\r\n            if (action.attribute === 'attributes') {\r\n                transformedValue = JSON.stringify(action.value)\r\n            }\r\n\r\n            console.log(transformedValue)\r\n            let newColumnsState = { ...state }\r\n            let updatedColumnData = JSON.parse('{ \"' + action.attribute + '\" :' + transformedValue + '}')\r\n            console.log(newColumnsState);\r\n            console.log(newColumnsState.columns);\r\n            let updatedColumns = updateArray(newColumnsState.columns, 'column_id', action.columnId, updatedColumnData)\r\n\r\n            console.log(updatedColumnData)\r\n            console.log(updatedColumns)\r\n\r\n            var returnedUpdatedTableColumn =\r\n            {\r\n                ...newColumnsState,\r\n                rows: [...newColumnsState.rows],\r\n                columns: [...updatedColumns],\r\n                cells: [...newColumnsState.cells]\r\n            }\r\n            return {\r\n\r\n                table: returnedUpdatedTableColumn\r\n            }\r\n\r\n        case UPDATE_CELL:\r\n            console.log('In Reducer UPDATE_CELL')\r\n            let newCellsState = { ...state }\r\n            console.log(state)\r\n            console.log(newCellsState)\r\n            let updatedCellData = JSON.parse('{ \"' + action.attribute + '\" : \"' + action.value + '\"}')\r\n            let updatedCells = updateArray(newCellsState.cells, 'cell_id', action.cellId, updatedCellData)\r\n\r\n            let returnedCellState =\r\n            {\r\n                ...state,\r\n                rows: [...newCellsState.rows],\r\n                columns: [...newCellsState.columns],\r\n                cells: [...updatedCells]\r\n            }\r\n            console.log(returnedCellState)\r\n            return {\r\n                table: returnedCellState\r\n            }\r\n\r\n        case PROCESS_BORDERS:\r\n            console.log('In Reducer PROCESS_BORDERS')\r\n            const newBaseTableState = { ...state }\r\n\r\n            let returnedBorderState =\r\n            {\r\n                ...newBaseTableState,\r\n                rows: tableSort('rows', [...action.rows]),\r\n                columns: tableSort('columns', [...action.columns]),\r\n                cells: tableSort('cells', [...action.cells])\r\n            }\r\n\r\n            console.log(newBaseTableState)\r\n            console.log(returnedBorderState)\r\n\r\n            return {\r\n                table: returnedBorderState\r\n            }\r\n\r\n        case RECEIVE_HYDRATE:\r\n            console.log('RECEIVE_HYDATE...')\r\n            console.log(state);\r\n            console.log(action.table);\r\n\r\n            return {\r\n                table: {\r\n                    ...state.table,\r\n                    ...action.table\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst reducer = (\r\n    state = {\r\n        tables: {}\r\n    },\r\n    action) => {\r\n    console.log('MAIN REDUCER')\r\n    console.log(state)\r\n    console.log('  Action Table ID = ' + action.tableId)\r\n    console.log(action)\r\n\r\n    let tableKey = action.tableId\r\n    console.log(state.tables[tableKey])\r\n    let newTableState = table(state.tables[tableKey], action)\r\n    let returnedTable =\r\n    {\r\n        [action.tableId]:\r\n            newTableState.table\r\n    }\r\n\r\n    if (JSON.stringify(newTableState.table) === '{}') {\r\n        return state\r\n    }\r\n    console.log(returnedTable)\r\n\r\n    const newTablesState = { ...state.tables }\r\n    // let newTablesStateKeys = Object.keys(state.tables)\r\n\r\n    switch (action.type) {\r\n        case CHANGE_TABLE_ID:\r\n            console.log('In Reducer CHANGE_TABLE_ID for state')\r\n\r\n            const returnedTableNewId =\r\n            {\r\n                [action.newTableId]:\r\n                    newTableState.table\r\n            }\r\n            console.log(returnedTableNewId)\r\n\r\n            const filteredTablesState = Object.keys(state.tables)\r\n                .reduce((acc, key) => {\r\n                    console.log(state.tables[key])\r\n                    if (state.tables[key].table_id !== action.tableId) {\r\n                        acc[key] = { ...state.tables[key] }\r\n                    }\r\n                    return acc\r\n                }, {})\r\n            // const filteredTablesState = Object.keys(state.tables)\r\n            // .filter((key) =>\r\n            //     state.tables[key] !== '0'\r\n            // )\r\n            console.log(filteredTablesState)\r\n\r\n            return {\r\n                tables: {\r\n                    ...filteredTablesState,\r\n                    ...returnedTableNewId\r\n                }\r\n            }\r\n\r\n        case DELETE_TABLE:\r\n            console.log('In Reducer DELETE_TABLE...')\r\n\r\n            const deleteTablesState = Object.keys(state.tables)\r\n                .reduce((acc, key) => {\r\n                    console.log('Reducer key = ' + key)\r\n                    console.log('TableId to delete = ' + String(action.tableId))\r\n                    console.log(acc)\r\n                    if (key !== String(action.tableId)) {\r\n                        acc[key] = {\r\n                            ...state.tables[key],\r\n                            rows: [...state.tables[key].rows],\r\n                            columns: [...state.tables[key].columns],\r\n                            cells: [...state.tables[key].cells],\r\n                        }\r\n                    }\r\n                    return acc\r\n                }, {})\r\n\r\n            console.log(deleteTablesState)\r\n            return {\r\n                tables: {\r\n                    ...deleteTablesState\r\n                }\r\n            }\r\n\r\n        default:\r\n            console.log('In Reducer Default State Handling')\r\n            const returnedTableDefault =\r\n            {\r\n                [action.tableId]:\r\n                    newTableState.table\r\n            }\r\n\r\n            return {\r\n                tables: {\r\n                    ...newTablesState,\r\n                    ...returnedTableDefault\r\n                }\r\n            }\r\n    }\r\n\r\n\r\n\r\n    // if (action.type === 'UPDATE_TABLE_PROP' && action.attribute === 'table_id') {\r\n    //     newTablesState = Object.keys(state.tables)\r\n    //         .filter((key) =>\r\n    //             state.tables[key] !== '0'\r\n    //         )\r\n    // }\r\n\r\n    // if (action.type === 'DELETE_TABLE') {\r\n    //     console.log('DELETE_TABLE...')\r\n\r\n    //     const deleteTablesState = Object.keys(state.tables)\r\n    //         .reduce((acc, key) => {\r\n    //             console.log('Reducer key = ' + key)\r\n    //             console.log('TableId to delete = ' + String(action.tableId))\r\n    //             console.log(acc)\r\n    //             if (key !== String(action.tableId)) {\r\n    //                 acc[key] = {\r\n    //                     ...state.tables[key],\r\n    //                     rows: [...state.tables[key].rows],\r\n    //                     columns: [...state.tables[key].columns],\r\n    //                     cells: [...state.tables[key].cells],\r\n    //                 }\r\n    //             }\r\n    //             return acc\r\n    //         }, {})\r\n\r\n    //     console.log(deleteTablesState)\r\n    //     return {\r\n    //         tables: {\r\n    //             ...deleteTablesState\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // if (action.type === 'PERSIST') {\r\n    //     console.log('PERSIST...')\r\n    // console.log('...Deleted table key = ' + JSON.stringify(newTablesState, null, 4))\r\n\r\n    // }\r\n}\r\n\r\nexport default reducer;\r\n","/**\r\n * Get Wordpress Dependencies\r\n */\r\nimport { addQueryArgs } from \"@wordpress/url\";\r\nimport apiFetch from \"@wordpress/api-fetch\";\r\nimport { store as coreStore } from \"@wordpress/core-data\"\r\nimport { numberToLetter } from '../utils';\r\n\r\n\r\n// import { hydrate } from \"./actions\";\r\n\r\nfunction computeCellId(fetchedCells) {\r\n    fetchedCells.forEach((cell) => {\r\n        cell.cell_id = numberToLetter(cell.column_id) + cell.row_id\r\n        console.log(cell)\r\n    });\r\n    return {\r\n        fetchedCells\r\n    }\r\n}\r\n\r\nexport const getTable =\r\n    (tableId, isTableStale) =>\r\n        async ({ dispatch, registry }) => {\r\n            console.log('            ...Resolver - Before fetch')\r\n            console.log('            ...Table ID = ' + tableId)\r\n            console.log('            ...Table Stale = ' + isTableStale)\r\n            // if (blockTableStatus === 'New' || blockTableStatus === 'Saved' || tableId == '0') {\r\n            if (!isTableStale || tableId == '0') {\r\n                console.log('Bypassing API Call')\r\n                return\r\n            }\r\n            try {\r\n                const tableEntity =\r\n                    await registry\r\n                        .resolveSelect(coreStore)\r\n                        .getEntityRecord(\r\n                            'dynamic-tables/v1',\r\n                            'table',\r\n                            tableId\r\n                        )\r\n\r\n                const table = tableEntity\r\n                const table_id = table.id;\r\n                const block_table_ref = table.header.block_table_ref;\r\n                const post_id = table.header.post_id;\r\n                const table_name = table.header.table_name;\r\n                const table_attributes = table.header.attributes;\r\n                const table_classes = table.header.classes;\r\n                const rows = table.rows;\r\n                const columns = table.columns;\r\n                computeCellId(table.cells);\r\n                const cells = table.cells;\r\n\r\n                dispatch.receiveTable(table_id, block_table_ref, post_id, table_name, table_attributes, table_classes, rows, columns, cells);\r\n            } catch (error) {\r\n                console.log('            ...Resolver - async error - ' + JSON.stringify(error, null, 4));\r\n            }\r\n            console.log('            Resolver - async completed');\r\n\r\n        }\r\n","import { createRegistrySelector } from \"@wordpress/data\";\r\nimport { store as coreStore } from \"@wordpress/core-data\"\r\n\r\nexport function getTable(state, tableId, isTableStale) {\r\n\r\n    console.log('Selector...GetTable ' + tableId)\r\n    console.log('        ...Current Table Stale ' + isTableStale)\r\n    console.log(state)\r\n\r\n    if (!state.tables.hasOwnProperty(tableId)) {\r\n        console.log('State not defined')\r\n        return {\r\n            table_id: tableId,\r\n            block_table_ref: '',\r\n            post_id: '',\r\n            table_status: '',\r\n            table_name: '',\r\n            table_attributes: [],\r\n            table_classes: '',\r\n            rows: [],\r\n            columns: [],\r\n            cells: []\r\n        }\r\n    }\r\n\r\n    return state.tables[tableId]\r\n}\r\n\r\nexport function getTables(state) {\r\n    return state.tables\r\n\r\n}\r\n\r\nexport function getNewTableIdByBlock(state, block_table_ref) {\r\n    const newTable = Object.keys(state.tables)\r\n        .reduce((acc, key) => {\r\n            if (state.tables[key]?.block_table_ref === block_table_ref) {\r\n                console.log({ ...state.tables[key]?.block_table_ref })\r\n                acc[key] = { ...state.tables[key] }\r\n            }\r\n            return acc\r\n        }, {})\r\n\r\n    if (newTable.length === 0) {\r\n        return false\r\n    }\r\n    return Object.keys(newTable)\r\n}\r\n\r\n/**\r\n * Return all tables that are associated with unmounted blocks\r\n * \r\n * @param {*} state \r\n * @returns \r\n */\r\nexport function getUnmountedTables(state) {\r\n    console.log(state.tables)\r\n    const unmountedTables = Object.keys(state.tables)\r\n        .reduce((acc, key) => {\r\n            if (state.tables[key].unmounted_blockid) {\r\n                acc[key] = { ...state.tables[key] }\r\n            }\r\n            return acc\r\n        }, {})\r\n    return unmountedTables\r\n}\r\n\r\nexport function getDeletedTables(state) {\r\n    const deletedTables = Object.keys(state.tables)\r\n        .reduce((acc, key) => {\r\n            console.log(state.tables[key].table_status)\r\n            if (state.tables[key].table_status === 'deleted') {\r\n                acc[key] = { ...state.tables[key] }\r\n            }\r\n            return acc\r\n        }, {})\r\n    return deletedTables\r\n}\r\n\r\nexport function getUnsavedTables(state) {\r\n    const deletedTables = Object.keys(state.tables)\r\n        .reduce((acc, key) => {\r\n            console.log(state.tables[key].table_status)\r\n            if (state.tables[key].table_status === 'new') {\r\n                acc[key] = { ...state.tables[key] }\r\n            }\r\n            return acc\r\n        }, {})\r\n    return deletedTables\r\n}\r\n\r\nexport function getTableBlockId(state) {\r\n\r\n}\r\n\r\nexport const getTableTest = createRegistrySelector(\r\n    // (select) => (state, tableId) => {\r\n    (select) => () => {\r\n\r\n        return select(coreStore).getEntityRecord(\r\n            'dynamic-tables/v1',\r\n            'table',\r\n            '18'\r\n        )\r\n    });\r\n","/**select re\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n */\nimport { useSelect, useDispatch, dispatch } from \"@wordpress/data\";\nimport { useState, useEffect, useRef } from \"@wordpress/element\"\nimport { usePrevious } from \"@wordpress/compose\";\nimport { __ } from '@wordpress/i18n';\nimport {\n\tForwardedRef\n} from 'react';\nimport {\n\tPanel,\n\tPanelBody,\n\tPanelRow,\n\tTabbableContainer,\n\tButton,\n\tTextControl,\n\tSpinner,\n\tPlaceholder,\n\tColorPicker,\n\tToggleControl,\n\tCheckboxControl,\n\tDropdownMenu,\n\tMenuGroup,\n\tMenuItem,\n\t__experimentalNumberControl as NumberControl\n} from '@wordpress/components';\nimport {\n\tRichText,\n\tuseBlockProps,\n\tuseSetting,\n\tBlockIcon,\n\tAlignmentToolbar,\n\tInspectorControls,\n\tBlockControls,\n\tPanelColorSettings\n} from '@wordpress/block-editor';\nimport {\n\tcolumn,\n\t// alignLeft,\n\t// alignRight,\n\t// alignCenter,\n\tsearch,\n\tblockTable as icon\n\t// tableColumnAfter,\n\t// tableColumnBefore,\n\t// tableColumnDelete,\n\t// tableRowAfter,\n\t// tableRowBefore,\n\t// tableRowDelete,\n\t// table,\n\t// moreVertical,\n\t// more,\n\t// arrowLeft,\n\t// arrowRight,\n\t// arrowUp,\n\t// arrowDown,\n\t// trash\n} from '@wordpress/icons';\n\n\n/**\n *  * Internal Dependencies\n */\nimport { store as tableStore } from './data';\nimport { usePostChangesSaved } from './hooks';\nimport {\n\tnumberToLetter,\n\ttableSort,\n\tgenerateBlockTableRef,\n\tinitTable,\n\tinitTableCells,\n\tgetDefaultRow,\n\tgetDefaultColumn,\n\tgetDefaultCell,\n\tgetDefaultTableClasses,\n\tgetDefaultTableAttributes\n} from './utils';\nimport { ColumnMenu, RowMenu } from './components';\n// import TABLE_ATTRIBUTE_TYPES from './constants'\nimport './editor.scss';\n\nexport default function Edit(props) {\n\n\tconst blockProps = useBlockProps({\n\t\tclassName: \"dynamic-table-edit-block\"\n\t})\n\n\t/**\n\t * Table Store Action useDispatch declarations\n\t */\n\tconst { receiveNewTable } = useDispatch(tableStore);\n\tconst { createTableEntity } = useDispatch(tableStore);\n\tconst { deleteTable } = useDispatch(tableStore);\n\tconst { addColumn } = useDispatch(tableStore);\n\tconst { addRow } = useDispatch(tableStore);\n\tconst { removeColumn } = useDispatch(tableStore);\n\tconst { removeRow } = useDispatch(tableStore);\n\tconst { updateTableProp } = useDispatch(tableStore);\n\tconst { removeTableProp } = useDispatch(tableStore);\n\tconst { updateRow } = useDispatch(tableStore);\n\tconst { updateColumn } = useDispatch(tableStore);\n\tconst { updateCell } = useDispatch(tableStore);\n\tconst { updateTableEntity } = useDispatch(tableStore);\n\tconst { updateTableBorder } = useDispatch(tableStore);\n\tconst { processUnmountedTables } = useDispatch(tableStore);\n\tconst { processDeletedTables } = useDispatch(tableStore);\n\n\t/**\n\t * Local State declarations\n\t */\n\tconst [isTableStale, setTableStale] = useState(true);\n\tconst [openColumnRow, setOpenColumnRow] = useState(0);\n\tconst [tablePropAttributes, setTablePropAttributes] = useState({});\n\tconst [columnAttributes, setColumnAttributes] = useState({});\n\tconst [columnMenuVisible, setColumnMenuVisible] = useState(false);\n\tconst [rowMenuVisible, setRowMenuVisible] = useState(false);\n\tconst [openRowColumn, setOpenRowColumn] = useState(0);\n\tconst [rowAttributes, setRowAttributes] = useState({});\n\tconst [render, setRender] = useState(0);\n\tconst [showBorders, setShowBorders] = useState(false);\n\tconst [numColumns, setNumColumns] = useState(2);\n\tconst [numRows, setNumRows] = useState(2);\n\tconst [gridCells, setGridCells] = useState([]);\n\tconst [awaitingTableEntityCreation, setAwaitingTableEntityCreation] = useState(false);\n\n\tconst priorTableRef = useRef({});\n\tconst { table_id, block_table_ref } = props.attributes;\n\tconst themeColors = useSetting('color.palette')\n\tconsole.log(themeColors)\n\n\tconsole.log('Block Table Ref - ' + block_table_ref)\n\n\t/**\n\t * Load entity framework for table entity type\n\t */\n\tuseEffect(() => {\n\t\tdispatch('core').addEntities([\n\t\t\t{\n\t\t\t\tname: 'table',\n\t\t\t\tkind: 'dynamic-tables/v1',\n\t\t\t\tbaseURL: '/dynamic-tables/v1/table'\n\t\t\t}\n\t\t]);\n\t}, []);\n\n\t/**\n\t * Table blocks unmounted when entering the text editor AND when deleted.  However, \n\t * don't know whether the table was deleted when an unmount is detected.  Therefore, \n\t * we mark them as unmounted at that time, and can identify whether the block was \n\t * truly deleted on the subsequent render.\n\t * \n\t * We mark tables as deleted if they do not identify that the block has been remounted \n\t */\n\tconst { unmountedTables } = useSelect(\n\t\t(select) => {\n\t\t\tconst { getUnmountedTables } = select(tableStore);\n\t\t\treturn {\n\t\t\t\tunmountedTables: getUnmountedTables()\n\t\t\t}\n\t\t})\n\n\tif (Object.keys(unmountedTables).length > 0) {\n\t\tprocessUnmountedTables(unmountedTables)\n\t}\n\n\tconst { deletedTables } = useSelect(\n\t\t(select) => {\n\t\t\tconst { getDeletedTables } = select(tableStore);\n\t\t\treturn {\n\t\t\t\tdeletedTables: getDeletedTables()\n\t\t\t}\n\t\t})\n\n\tconst postChangesAreSaved = usePostChangesSaved()\n\tconsole.log(postChangesAreSaved)\n\tconsole.log(unmountedTables)\n\tuseEffect(() => {\n\t\tif (postChangesAreSaved) {\n\t\t\talert('Sync REST Now')\n\t\t\t/**\n\t\t\t * Remove deleted tables from persisted store\n\t\t\t */\n\t\t\tif (Object.keys(deletedTables).length > 0) {\n\t\t\t\tconsole.log(deletedTables)\n\t\t\t\tprocessDeletedTables(deletedTables)\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Update status of new tables to saved\n\t\t\t */\n\t\t\tif (table.table_status == 'new') {\n\t\t\t\tconsole.log('Saving new table - ' + table.table_id)\n\t\t\t\tsetTableAttributes(table.table_id, 'table_status', '', 'PROP', 'saved')\n\t\t\t\tconsole.log(table)\n\t\t\t}\n\n\t\t}\n\n\t}, [postChangesAreSaved, unmountedTables]);\n\n\tconst setBlockTableStatus = () => {\n\t\tif (block_table_ref === '') {\n\t\t\treturn 'None'\n\t\t}\n\n\t\tif (table_id === '0') {\n\t\t\treturn 'New'\n\t\t}\n\n\t\tif (isTableStale) {\n\t\t\treturn 'Stale'\n\t\t}\n\n\t\treturn 'Saved'\n\t}\n\n\tconst setNewBlock = () => {\n\t\tif (block_table_ref === '') {\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tconst isNewBlock = setNewBlock()\n\tconst blockTableStatus = setBlockTableStatus();\n\n\t/**\n\t * Retrieve table entity from table webservice and load table store\n\t */\n\tconst {\n\t\ttable,\n\t\ttableStatus,\n\t\ttableHasStartedResolving,\n\t\ttableHasFinishedResolving,\n\t\ttableIsResolving\n\t} = useSelect(\n\t\t(select) => {\n\t\t\tconsole.log('Table ID = ' + table_id + ', Stale = ' + isTableStale + ', Block Table Ref = ' + block_table_ref);\n\t\t\tconst { getTable, getNewTableIdByBlock, hasStartedResolution, hasFinishedResolution, isResolving } = select(tableStore);\n\t\t\tconst selectorArgs = [table_id, isTableStale]\n\n\t\t\tif (block_table_ref === '') {\n\t\t\t\treturn {\n\t\t\t\t\ttable: {},\n\t\t\t\t\ttableStatus: '',\n\t\t\t\t\ttableHasStartedResolving: false,\n\t\t\t\t\ttableHasFinishedResolving: false,\n\t\t\t\t\ttableIsResolving: false\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst getBlockTable = (table_id, isTableStale, block_table_ref) => {\n\t\t\t\tlet selectedTable = getTable(table_id, isTableStale);\n\t\t\t\tconsole.log(selectedTable)\n\t\t\t\tif (table_id === '0' && selectedTable.block_table_ref.length === 0 && awaitingTableEntityCreation) {\n\t\t\t\t\tconst newTableId = getNewTableIdByBlock(block_table_ref);\n\t\t\t\t\tselectedTable = getTable(newTableId, isTableStale);\n\t\t\t\t\tsetAwaitingTableEntityCreation(false)\n\t\t\t\t\tprops.setAttributes({ table_id: Number(selectedTable.table_id) })\n\t\t\t\t}\n\t\t\t\treturn selectedTable;\n\t\t\t};\n\n\t\t\tconst blockTable = getBlockTable(table_id, isTableStale, block_table_ref)\n\t\t\tconst tableHasStartedResolving = hasStartedResolution('getTable', selectorArgs)\n\t\t\tconst tableHasFinishedResolving = hasFinishedResolution('getTable', selectorArgs)\n\t\t\tconst tableIsResolving = isResolving('getTable', selectorArgs)\n\n\t\t\tif (tableHasFinishedResolving) {\n\t\t\t\tsetTableStale(() => false)\n\t\t\t}\n\n\t\t\t// console.log('isTableStale = ' + isTableStale)\n\t\t\t// console.log('tableHasStartedResolving = ' + hasStartedResolution('getTable', selectorArgs))\n\t\t\t// console.log('tableHasFinishedResolving = ' + hasFinishedResolution('getTable', selectorArgs))\n\t\t\t// console.log('tableIsResolving = ' + isResolving('getTable', selectorArgs))\n\n\t\t\treturn {\n\t\t\t\ttable: blockTable,\n\t\t\t\ttableStatus: blockTable.table_status,\n\t\t\t\ttableHasStartedResolving: tableHasStartedResolving,\n\t\t\t\ttableHasFinishedResolving: tableHasFinishedResolving,\n\t\t\t\ttableIsResolving: tableIsResolving\n\t\t\t};\n\t\t},\n\t\t[\n\t\t\ttable_id,\n\t\t\tisTableStale,\n\t\t\tblock_table_ref\n\t\t]\n\t);\n\n\tfunction getTablePropAttribute(tableAttributes, attributeName) {\n\t\tconst attributeValue = tableAttributes?.[attributeName]\n\t\treturn attributeValue\n\t}\n\n\t/**\n\t * Extract and unpack table attributes\n\t */\n\tconst showGridLines = getTablePropAttribute(table.table_attributes, 'showGridLines')\n\tconst enableHeaderRow = getTablePropAttribute(table.table_attributes, 'enableHeaderRow')\n\tconst gridHeaderBackgroundColor = getTablePropAttribute(table.table_attributes, 'tableHeaderBackgroundColor')\n\tconst headerRowSticky = getTablePropAttribute(table.table_attributes, 'headerRowSticky')\n\tconst bandedRows = getTablePropAttribute(table.table_attributes, 'bandedRows')\n\tconst bandedRowTextColor = getTablePropAttribute(table.table_attributes, 'bandedRowTextColor')\n\tconst bandedRowBackgroundColor = getTablePropAttribute(table.table_attributes, 'bandedRowBackgroundColor')\n\tconst gridLineWidth = getTablePropAttribute(table.table_attributes, 'gridLineWidth')\n\tconst horizontalAlignment = getTablePropAttribute(table.table_attributes, 'horizontalAlignment')\n\tconst verticalAlignment = getTablePropAttribute(table.table_attributes, 'verticalAlignment')\n\n\t/**\n\t * Extract and unpack table classes\n\t */\n\n\n\n\t/**\n\t * Perform clean-up for deleted table block at time of deletion\n\t */\n\tuseEffect(() => {\n\n\t\treturn () => {\n\t\t\tsetTableAttributes(table.table_id, 'unmounted_blockid', '', 'PROP', blockProps[\"data-block\"], false)\n\t\t};\n\t}, [])\n\n\tconst tableColumnLength = (JSON.stringify(table.table) === '{}' || blockTableStatus == 'None') ? 0 : table.columns.length\n\tconst tableRowLength = (JSON.stringify(table.table) === '{}' || blockTableStatus == 'None') ? 0 : table.rows.length\n\n\t/**\n\t * Set state for number of columns and rows when the number of table rows has changes\n\t * \n\t * TODO: Verify this is still needed following update to table store to track all tables in editor\n\t */\n\tuseEffect(() => {\n\t\tif (tableColumnLength != numColumns) {\n\t\t\tsetNumColumns(tableColumnLength);\n\t\t}\n\t\tif (tableRowLength != numRows) {\n\t\t\tsetNumRows(tableRowLength);\n\t\t}\n\t},\n\t\t[tableColumnLength, tableRowLength]\n\t)\n\n\tconsole.log('Table ID from Block - ' + table_id);\n\tconsole.log('Block Table Ref from Block - ' + block_table_ref);\n\n\t/**\n\t * Called upon event to add a column\n\t * \n\t * @param {*} tableId \n\t * @param {*} columnId \n\t * @returns \n\t */\n\tfunction insertColumn(tableId, columnId) {\n\t\tconst newColumn = getDefaultColumn(tableId, columnId)\n\t\tvar tableCells = []\n\n\t\tfor (let i = 0; i < numRows; i++) {\n\t\t\tif (i === 0) {\n\t\t\t\tlet cell = getDefaultCell(tableId, columnId, i, 'Border')\n\t\t\t\ttableCells.push(cell)\n\t\t\t} else {\n\t\t\t\tlet cell = getDefaultCell(tableId, columnId, i)\n\t\t\t\ttableCells.push(cell)\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('ADDING COLUMN')\n\t\tconsole.log('ColumnId = ' + columnId)\n\t\tconsole.log(newColumn)\n\t\tconsole.log(tableCells)\n\n\t\taddColumn(tableId, columnId, newColumn, tableCells)\n\n\t\tconsole.log('Update coreStore');\n\t\tsetTableStale(false)\n\t\treturn (updateTableEntity(tableId));\n\t}\n\n\t/**\n\t * Called upon event to add a row\n\t * \n\t * @param {*} tableId \n\t * @param {*} rowId \n\t * @returns \n\t */\n\tfunction insertRow(tableId, rowId) {\n\t\tconst newRow = getDefaultRow(tableId, rowId)\n\t\tvar tableCells = []\n\n\t\tfor (let i = 0; i < numColumns; i++) {\n\t\t\tif (i === 0) {\n\t\t\t\tlet cell = getDefaultCell(tableId, i, rowId, 'Border')\n\t\t\t\t// cell.content = \n\t\t\t\ttableCells.push(cell)\n\t\t\t} else {\n\t\t\t\tlet cell = getDefaultCell(tableId, i, rowId)\n\t\t\t\ttableCells.push(cell)\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('ADDING ROW')\n\t\tconsole.log('RowId = ' + rowId)\n\t\tconsole.log(newRow)\n\t\tconsole.log(tableCells)\n\n\t\taddRow(tableId, rowId, newRow, tableCells)\n\n\t\tconsole.log('Update coreStore');\n\t\tsetTableStale(false)\n\t\treturn (updateTableEntity(tableId));\n\t}\n\n\t/**\n\t * Called upon event to delete a column\n\t * \n\t * @param {*} tableId \n\t * @param {*} columnId \n\t * @returns \n\t */\n\tfunction deleteColumn(tableId, columnId) {\n\t\tconsole.log('Deleting Column - ' + columnId)\n\t\tremoveColumn(tableId, columnId)\n\n\t\tconsole.log('Update coreStore');\n\t\tsetTableStale(false)\n\t\treturn (updateTableEntity(tableId));\n\t}\n\n\t/**\n\t * Called upon event to delete a row\n\t * \n\t * @param {*} tableId \n\t * @param {*} rowId \n\t * @returns \n\t */\n\tfunction deleteRow(tableId, rowId) {\n\t\tconsole.log('Deleting Row - ' + rowId)\n\t\tremoveRow(tableId, rowId)\n\n\t\tconsole.log('Update coreStore');\n\t\tsetTableStale(false)\n\t\treturn (updateTableEntity(tableId));\n\t}\n\n\n\t/**\n\t * Update table store to reflect changes made to EXISTING table attributes\n\t * \n\t * \n\t * @param {*} tableId - Id of table to update\n\t * @param {*} attribute - Table Object Attribute\n\t * @param {*} id - Array Index Id\n\t * @param {*} type - See Below\n\t * @param {*} value - New attribute value\n\t * @param {*} persist - Write update to entity record\n\t * @returns \n\t * \n\t * Valid Types:\n\t * - CONTENT - Cell Content\n\t * - ATTRIBUTES - Array of attributes\n\t * - CLASSES - Array of Classes\n\t * - PROP - Table Property\n\t */\n\n\tfunction setTableAttributes(tableId, attribute, id, type, value, persist = true) {\n\n\t\tconsole.log('Table Attribute Change: attribute - ' + attribute + ', id - ' + id + ', type - ' + type + ', value - ' + value)\n\t\tlet updatedTable;\n\n\t\tswitch (type) {\n\t\t\tcase 'CONTENT':\n\t\t\t\t{\n\t\t\t\t\tif (attribute === 'cell') {\n\t\t\t\t\t\tupdateCell(tableId, id, 'content', value)\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'ATTRIBUTES':\n\t\t\t\t{\n\t\t\t\t\tif (attribute === 'cell') {\n\t\t\t\t\t\tconsole.log('...Updating Cell')\n\t\t\t\t\t\tupdateCell(tableId, id, 'attributes', value)\n\t\t\t\t\t} else if (attribute === 'column') {\n\t\t\t\t\t\tconsole.log('...Updating Column')\n\t\t\t\t\t\tconsole.log(value)\n\t\t\t\t\t\tsetColumnAttributes(value)\n\t\t\t\t\t\tupdateColumn(tableId, id, 'attributes', value)\n\t\t\t\t\t} else if (attribute === 'table') {\n\t\t\t\t\t\tconsole.log('...Updating Table Attributes')\n\t\t\t\t\t\tconsole.log(value)\n\t\t\t\t\t\tupdateTableProp(tableId, 'table_attributes', value)\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'CLASSES':\n\t\t\t\t{\n\t\t\t\t\tif (attribute === 'cell') {\n\t\t\t\t\t\tupdateCell(tableId, id, 'classes', value)\n\t\t\t\t\t} else if (attribute === 'column') {\n\t\t\t\t\t\tupdateColumn(tableId, id, 'classes', value)\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'PROP':\n\t\t\t\t{\n\t\t\t\t\tupdateTableProp(tableId, attribute, value)\n\t\t\t\t\t// if (attribute === 'table_name') {\n\t\t\t\t\t// \tupdateTableProp(tableId, 'table_name', value)\n\t\t\t\t\t// }\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.log('Unrecognized Attibute Type')\n\t\t}\n\t\tconsole.log('Update coreStore');\n\t\tsetTableStale(false)\n\t\t// console.log(updatedTable);\n\t\tif (persist) {\n\t\t\treturn (updateTableEntity(tableId));\n\t\t}\n\t}\n\n\t/**\n\t * Add/remove grid control column and row when table attribute of \"Show Grid\" is checked\n\t * \n\t * @param {*} table \n\t * @param {*} isChecked \n\t * @returns \n\t */\n\tfunction onToggleBorders(table, isChecked) {\n\n\t\tconsole.log('TOGGLING BORDER')\n\t\tconsole.log(table);\n\t\tconsole.log('Number Columns before update = ' + numColumns)\n\n\t\t/**\n\t\t * Remove borders if unchecked\n\t\t */\n\t\tif (isChecked === false) {\n\t\t\tsetNumColumns(numColumns - 1)\n\t\t\tsetNumRows(numRows - 1)\n\n\t\t\tvar updatedRows = table.rows\n\t\t\t\t.filter((row) =>\n\t\t\t\t\trow.row_id !== '0'\n\t\t\t\t)\n\t\t\tvar updatedColumns = table.columns\n\t\t\t\t.filter((column) =>\n\t\t\t\t\tcolumn.column_id !== '0'\n\t\t\t\t)\n\t\t\tvar updatedCells = table.cells\n\t\t\t\t.filter((cell) =>\n\t\t\t\t\tcell.row_id !== '0' && cell.column_id !== '0'\n\t\t\t\t)\n\t\t\tconsole.log(updatedCells)\n\t\t\tupdateTableBorder(table.table_id, updatedRows, updatedColumns, updatedCells)\n\n\t\t} else {\n\n\t\t\t/**\n\t\t\t* Create borders if checked\n\t\t\t*/\n\t\t\tsetNumColumns(numColumns + 1)\n\t\t\tsetNumRows(numRows + 1)\n\n\t\t\t// Create header row border at top of table\n\t\t\tvar rowBorder = []\n\t\t\trowBorder.push(getDefaultRow(table_id, 0, 'Border'))\n\n\t\t\tvar rowCells = []\n\t\t\tfor (let i = 0; i <= numColumns; i++) {\n\t\t\t\tlet cell = getDefaultCell(table_id, i, 0, 'Border')\n\t\t\t\tconsole.log(cell)\n\t\t\t\trowCells.push(cell);\n\t\t\t}\n\n\t\t\t// Create column border down left side of table\n\t\t\tvar columnBorder = []\n\t\t\tcolumnBorder.push(getDefaultColumn(table_id, 0, 'Border'))\n\n\t\t\tvar columnCells = []\n\t\t\tfor (let i = 1; i <= numRows; i++) {\n\t\t\t\tlet cell = getDefaultCell(table_id, 0, i, 'Border')\n\t\t\t\tcolumnCells.push(cell);\n\t\t\t}\n\n\t\t\t// Sort table parts\n\t\t\tupdatedRows = tableSort('rows', [...table.rows, ...rowBorder])\n\t\t\tupdatedColumns = tableSort('columns', [...table.columns, ...columnBorder])\n\t\t\tupdatedCells = tableSort('cells', [...table.cells, ...rowCells, ...columnCells])\n\n\t\t\t// console.log(table)\n\t\t\t// console.log('Row border - ' + JSON.stringify(rowBorder, null, 4));\n\t\t\t// console.log('Column border - ' + JSON.stringify(columnBorder, null, 4));\n\t\t\t// console.log('Updated columns - ' + JSON.stringify(updatedColumns, null, 4));\n\t\t\t// console.log('Updated cells - ' + JSON.stringify(updatedCells, null, 4));\n\n\t\t\tupdateTableBorder(table.table_id, updatedRows, updatedColumns, updatedCells)\n\t\t}\n\n\t\tsetShowBorders(isChecked);\n\t\tsetTableStale(false)\n\t\treturn;\n\t}\n\n\t/**\n\t * Establish grid css grid-template-columns based upon attributes associated with columns\n\t * \n\t * @param {*} isNewBlock \n\t * @param {*} tableIsResolving \n\t * @param {*} columns \n\t * @returns \n\t */\n\tfunction processColumns(isNewBlock, tableIsResolving, columns) {\n\t\tif (isNewBlock || tableIsResolving) {\n\t\t\treturn undefined\n\t\t}\n\n\t\tlet newGridColumnStyle = ''\n\t\t{\n\t\t\tcolumns.map(({ column_id, column_name, attributes, classes }) => {\n\t\t\t\tconsole.log('Column ID - ' + newGridColumnStyle)\n\t\t\t\tconsole.log(attributes)\n\t\t\t\tconst { columnWidthType,\n\t\t\t\t\tminWidth,\n\t\t\t\t\tminWidthUnits,\n\t\t\t\t\tmaxWidth,\n\t\t\t\t\tmaxWidthUnits,\n\t\t\t\t\tfixedWidth,\n\t\t\t\t\tfixedWidthUnits,\n\t\t\t\t\tdisableForTablet,\n\t\t\t\t\tdisableForPhone,\n\t\t\t\t\tisFixedLeftColumnGroup,\n\t\t\t\t\thorizontalAlignment\n\t\t\t\t} = attributes;\n\n\t\t\t\tlet sizing = '';\n\n\t\t\t\tif (column_id === '1') {\n\t\t\t\t\tnewGridColumnStyle = newGridColumnStyle + '40px '\n\t\t\t\t}\n\t\t\t\tswitch (columnWidthType) {\n\t\t\t\t\tcase 'Proportional':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (minWidth > 0) {\n\t\t\t\t\t\t\t\tsizing = 'minmax(' + minWidth + minWidthUnits + ', ' + maxWidth + 'fr) '\n\t\t\t\t\t\t\t} else (\n\t\t\t\t\t\t\t\t// sizing = '1fr '\n\t\t\t\t\t\t\t\tsizing = maxWidth + 'fr '\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tnewGridColumnStyle = newGridColumnStyle + sizing;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'Auto':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewGridColumnStyle = newGridColumnStyle + 'auto ';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'Fixed':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewGridColumnStyle = newGridColumnStyle + fixedWidth + fixedWidthUnits + ' ';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'Custom':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsizing = 'minmax(' + minWidth + minWidthUnits + ', ' + maxWidth + maxWidthUnits + ') '\n\t\t\t\t\t\t\tnewGridColumnStyle = newGridColumnStyle + sizing;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log('Unrecognized Attibute Type')\n\t\t\t\t}\n\n\t\t\t\t// if (column_id === '0') {\n\t\t\t\t// \tnewGridColumnStyle = newGridColumnStyle + '20px ';\n\t\t\t\t// } else {\n\t\t\t\t// \tnewGridColumnStyle = newGridColumnStyle + 'auto ';\n\t\t\t\t// }\n\t\t\t})\n\t\t}\n\t\tconsole.log('grid-template-columns = ' + newGridColumnStyle)\n\t\t// setTableStale(false)\n\t\treturn newGridColumnStyle\n\t}\n\n\t/**\n\t * Establish grid css grid-template-rowss based upon attributes associated with rows\n\t * \n\t * @param {*} isNewBlock \n\t * @param {*} tableIsResolving \n\t * @param {*} rows \n\t * @returns \n\t */\n\tfunction processRows(isNewBlock, tableIsResolving, rows) {\n\t\tif (isNewBlock || tableIsResolving) {\n\t\t\treturn undefined\n\t\t}\n\n\t\tlet newGridRowStyle = ''\n\t\t{\n\t\t\trows.map(({ row_id, attributes, classes }) => {\n\t\t\t\tconsole.log('Row ID - ' + newGridRowStyle)\n\t\t\t\tif (row_id === '0') {\n\t\t\t\t\tnewGridRowStyle = newGridRowStyle + '25px ';\n\t\t\t\t} else {\n\t\t\t\t\tnewGridRowStyle = newGridRowStyle + 'auto ';\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\t// setTableStale(false)\n\t\treturn newGridRowStyle\n\t}\n\n\t/**\n\t * Create Styling Variable for showing inner grid borders/lines\n\t  * \n\t  * @param {*} isNewBlock \n\t  * @param {*} tableIsResolving \n\t  * @param {*} showGridLines \n\t  * @returns \n\t  */\n\tfunction gridBandedRowTextColorStyle(isNewBlock, tableIsResolving, color) {\n\t\tif (isNewBlock || tableIsResolving) {\n\t\t\treturn undefined;\n\t\t};\n\t\treturn color;\n\t}\n\n\tfunction gridBandedRowBackgroundColorStyle(isNewBlock, tableIsResolving, color) {\n\t\tif (isNewBlock || tableIsResolving) {\n\t\t\treturn undefined;\n\t\t};\n\t\treturn color;\n\t}\n\n\t/**\n\t* Create Styling Variable for showing inner grid borders/lines\n\t* \n\t* @param {*} isNewBlock \n\t* @param {*} tableIsResolving \n\t* @param {*} showGridLines \n\t* @returns \n\t*/\n\tfunction getGridHeaderBackgroundColorStyle(isNewBlock, tableIsResolving, tableColor, blockColor) {\n\t\tif (isNewBlock || tableIsResolving) {\n\t\t\treturn undefined;\n\t\t};\n\n\t\tif (tableColor) {\n\t\t\treturn tableColor;\n\t\t};\n\n\t\treturn blockColor;\n\t}\n\n\n\t/**\n\t * Create Styling Variable for showing inner grid borders/lines\n\t  * \n\t  * @param {*} isNewBlock \n\t  * @param {*} tableIsResolving \n\t  * @param {*} showGridLines \n\t  * @returns \n\t  */\n\tfunction gridInnerBorderStyle(isNewBlock, tableIsResolving, showGridLines) {\n\t\tif (isNewBlock || tableIsResolving) {\n\t\t\treturn undefined;\n\t\t};\n\t\tconsole.log('show grid lines = ' + showGridLines)\n\t\tif (showGridLines) {\n\t\t\treturn 'solid';\n\t\t};\n\n\t\treturn 'hidden';\n\t}\n\n\t/**\n\t* Create Styling Variable for inner grid borders/lines width\n\t* \n\t* @param {*} isNewBlock \n\t* @param {*} tableIsResolving \n\t* @param {*} showGridLines \n\t* @returns \n\t*/\n\tfunction gridInnerBorderWidthStyle(isNewBlock, tableIsResolving, showGridLines, gridLineWidth) {\n\t\tif (isNewBlock || tableIsResolving) {\n\t\t\treturn undefined;\n\t\t};\n\n\t\tif (!showGridLines) {\n\t\t\treturn '0px';\n\t\t};\n\n\t\treturn String(gridLineWidth) + 'px';\n\t}\n\n\tfunction createTable(columnCount, rowCount) {\n\n\t\tconsole.log('FUNCTION - CREATE TABLE')\n\t\tconsole.log('InitialRows - ' + rowCount)\n\t\tconsole.log('InitialColumns - ' + columnCount)\n\n\t\tvar newBlockTableRef = generateBlockTableRef()\n\t\tconst newTable = initTable(newBlockTableRef, columnCount, rowCount)\n\n\t\tconsole.log(JSON.stringify(newTable, null, 4));\n\t\tprops.setAttributes({ block_table_ref: newBlockTableRef })\n\t\treceiveNewTable(newTable)\n\t\tsetAwaitingTableEntityCreation(true)\n\t\tcreateTableEntity();\n\t\t//\t\tsetBlockTableStatus('New');\n\t}\n\n\tfunction onCreateTable(event) {\n\t\tevent.preventDefault();\n\t\tcreateTable(numColumns, numRows)\n\t}\n\n\tfunction onChangeInitialColumnCount(num_columns) {\n\t\tconsole.log(num_columns)\n\t\tsetNumColumns(num_columns)\n\t}\n\n\tfunction onChangeInitialRowCount(num_rows) {\n\t\tconsole.log(num_rows)\n\t\tsetNumRows(num_rows)\n\t}\n\n\tfunction onUpdateColumn(event, updateType, tableId, columnId, updatedColumnAttributes) {\n\t\tconsole.log('    ...onUpdateColumn');\n\t\tconsole.log(event);\n\t\tconsole.log(updatedColumnAttributes);\n\n\t\tswitch (updateType) {\n\t\t\tcase 'attributes':\n\t\t\t\t{\n\t\t\t\t\tsetTableAttributes(tableId, 'column', columnId, 'ATTRIBUTES', updatedColumnAttributes);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'insert':\n\t\t\t\t{\n\t\t\t\t\tsetOpenColumnRow(0);\n\t\t\t\t\tsetColumnMenuVisible(false);\n\t\t\t\t\tinsertColumn(tableId, columnId);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'delete':\n\t\t\t\t{\n\t\t\t\t\tsetOpenColumnRow(0);\n\t\t\t\t\tsetColumnMenuVisible(false);\n\t\t\t\t\tdeleteColumn(tableId, columnId);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.log('Unrecognized Column Update Type')\n\t\t}\n\t\tconsole.log('Show Borders = ' + showBorders)\n\t}\n\n\tfunction onUpdateRow(event, updateType, tableId, rowId, updatedRowAttributes) {\n\t\tconsole.log('    ...onUpdateRow');\n\t\tconsole.log(event);\n\t\tconsole.log(updatedRowAttributes);\n\n\t\tswitch (updateType) {\n\t\t\tcase 'attributes':\n\t\t\t\t{\n\t\t\t\t\tsetTableAttributes(tableId, 'column', rowId, 'ATTRIBUTES', updatedRowAttributes);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'insert':\n\t\t\t\t{\n\t\t\t\t\tsetOpenColumnRow(0);\n\t\t\t\t\tsetRowMenuVisible(false);\n\t\t\t\t\tinsertRow(tableId, rowId);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'delete':\n\t\t\t\t{\n\t\t\t\t\tsetOpenColumnRow(0);\n\t\t\t\t\tsetRowMenuVisible(false);\n\t\t\t\t\tdeleteRow(tableId, rowId);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.log('Unrecognized Row Update Type')\n\t\t}\n\t\tconsole.log('Show Borders = ' + showBorders)\n\t}\n\n\tfunction onMouseColumnClick(column_id, row_id, table, event) {\n\n\t\tconsole.log('MOUSE CLICKED IN BORDER')\n\t\tconsole.log('Column = ' + column_id)\n\t\tconsole.log('Row = ' + row_id)\n\t\tconsole.log(table)\n\t\tconsole.log(event)\n\n\t\tif (row_id === '0' && column_id !== '0') {\n\t\t\tconsole.log('Opening Column ' + column_id)\n\t\t\tlet compareColumnId = column_id\n\t\t\tconst clickedColumn = table.columns.find(({ column_id }) => column_id === compareColumnId)\n\t\t\tconsole.log(clickedColumn)\n\t\t\tsetColumnAttributes(clickedColumn.attributes)\n\t\t\tsetColumnMenuVisible(true)\n\t\t\tsetOpenColumnRow(column_id)\n\t\t}\n\n\t\tif (row_id !== '0' && column_id === '0') {\n\t\t\tconsole.log('Opening Row ' + row_id)\n\t\t\tlet compareRowId = row_id\n\t\t\tconst clickedRow = table.rows.find(({ row_id }) => row_id === compareRowId)\n\t\t\tconsole.log(clickedRow)\n\t\t\tsetRowAttributes(clickedRow.attributes)\n\t\t\tsetRowMenuVisible(true)\n\t\t\tsetOpenColumnRow(row_id)\n\t\t}\n\t\t// alert('Mouse clicked on column')\n\t\t// return <ColumnMenu>Column Menu</ColumnMenu>\n\t\tsetTableStale(false)\n\n\t}\n\n\t/**\n\t * Show colored bands on even numbered table rows\n\t * \n\t * @param {*} table \n\t * @param {*} isChecked \n\t */\n\tfunction onShowBandedRows(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.table_attributes,\n\t\t\tbandedRows: isChecked\n\t\t}\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t* Show colored bands on even numbered table rows\n\t* \n\t* @param {*} table \n\t* @param {*} color \n\t*/\n\tfunction onBandedRowColor(table, type, color) {\n\t\tlet updatedTableAttributes = ''\n\t\tif (type == 'background') {\n\t\t\tupdatedTableAttributes = {\n\t\t\t\t...table.table_attributes,\n\t\t\t\tbandedRowBackgroundColor: color\n\t\t\t}\n\t\t\tconsole.log(updatedTableAttributes)\n\t\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t\t}\n\n\t\tif (type == 'text') {\n\t\t\tupdatedTableAttributes = {\n\t\t\t\t...table.table_attributes,\n\t\t\t\tbandedRowTextColor: color\n\t\t\t}\n\t\t\tconsole.log(updatedTableAttributes)\n\t\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t\t}\n\t}\n\n\t/**\n\t* Make first table row the Header\n\t* \n\t* @param {*} table \n\t* @param {*} isChecked \n\t*/\n\tfunction onEnableHeaderRow(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.table_attributes,\n\t\t\tenableHeaderRow: isChecked,\n\t\t\theaderRowSticky: false\n\t\t}\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t* Make first table row the Header\n\t* \n\t* @param {*} table \n\t* @param {*} isChecked \n\t*/\n\tfunction onHeaderRowSticky(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.table_attributes,\n\t\t\theaderRowSticky: isChecked\n\t\t}\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\n\t/**\n\t  * Show inner grid lines\n\t* \n\t* @param {*} table \n\t* @param {*} isChecked \n\t */\n\tfunction onShowGridLines(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.table_attributes,\n\t\t\tshowGridLines: isChecked\n\t\t}\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\t/**\n\t  * Inner grid line width\n\t* \n\t* @param {*} table \n\t* @param {*} gridLineWidth\n\t */\n\tfunction onGridLineWidth(table, gridLineWidth) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.table_attributes,\n\t\t\tgridLineWidth: Number(gridLineWidth)\n\t\t}\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t}\n\n\tconst gridColumnStyle = processColumns(isNewBlock, tableIsResolving, table.columns)\n\tconst gridRowStyle = processRows(isNewBlock, tableIsResolving, table.rows)\n\tconst gridHeaderBackgroundColorStyle = getGridHeaderBackgroundColorStyle(isNewBlock, tableIsResolving, gridHeaderBackgroundColor, blockProps.style.backgroundColor)\n\tconst gridBandedRowTextColor = gridBandedRowTextColorStyle(isNewBlock, tableIsResolving, bandedRowTextColor)\n\tconst gridBandedRowBackgroundColor = gridBandedRowBackgroundColorStyle(isNewBlock, tableIsResolving, bandedRowBackgroundColor)\n\tconst gridShowInnerLines = gridInnerBorderStyle(isNewBlock, tableIsResolving, showGridLines)\n\tconst gridInnerLineWidth = gridInnerBorderWidthStyle(isNewBlock, tableIsResolving, showGridLines, gridLineWidth)\n\tconst gridHeaderStickyClass = headerRowSticky ? 'grid-scroller' : '';\n\n\tconsole.log('Grid Column Style = ' + gridColumnStyle)\n\t// const gridStyle = setGridStyle(isNewBlock, tableIsResolving, table)\n\tconsole.log('Banded Grid Text Color = ' + gridBandedRowTextColor)\n\tconsole.log('Banded Grid Background Color = ' + gridBandedRowBackgroundColor)\n\n\tconsole.log('MATCH VALUE FOR TABLE:')\n\tconsole.log(table)\n\t// console.log(isRetrievingTable(table))\n\tconsole.log(JSON.stringify(table))\n\tconsole.log('Is Block New - ' + isNewBlock)\n\tconsole.log('Block Table Status - ' + blockTableStatus);\n\tconsole.log('Is Table Resolving - ' + tableIsResolving);\n\tconsole.log('gridColumnStyle = ' + gridColumnStyle);\n\tconsole.log('gridRowStyle = ' + gridRowStyle);\n\tconsole.log(blockProps);\n\tconsole.log(blockProps.style.backgroundColor);\n\n\tif (!tableIsResolving) {\n\t\t// console.log(table.table_attributes?.bandedRows)\n\t}\n\n\treturn (\n\t\t<div {...blockProps} >\n\t\t\t{!isNewBlock && !tableIsResolving && (\n\t\t\t\t<>\n\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t<Panel>\n\t\t\t\t\t\t\t<PanelBody title=\"Table Definition\" initialOpen={true}>\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<TextControl label=\"Table Name\"\n\t\t\t\t\t\t\t\t\t\tvalue={table.table_name} />\n\t\t\t\t\t\t\t\t\t{/* onChange={e => setTableAttributes(table_id, 'table_name', '', 'PROP', e)} /> */}\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<CheckboxControl label=\"Show table borders\"\n\t\t\t\t\t\t\t\t\t\tchecked={showBorders}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onToggleBorders(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<NumberControl label=\"Table Columns\" value={numColumns} labelPosition=\"side\" onChange={(e) => defineColumns(e)} />\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<NumberControl label=\"Table Rows\" value={numRows} labelPosition=\"side\" onChange={(e) => defineRows(e)} />\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t\t\t<PanelBody title=\"Table Header\" initialOpen={true}>\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<CheckboxControl label=\"First Row as Header?\"\n\t\t\t\t\t\t\t\t\t\tchecked={enableHeaderRow}\n\t\t\t\t\t\t\t\t\t\t// checked={true}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onEnableHeaderRow(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<CheckboxControl label=\"Freeze Header Row?\"\n\t\t\t\t\t\t\t\t\t\tchecked={headerRowSticky}\n\t\t\t\t\t\t\t\t\t\t// checked={true}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onHeaderRowSticky(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t</PanelBody>\n\n\n\t\t\t\t\t\t</Panel>\n\t\t\t\t\t</InspectorControls>\n\n\t\t\t\t\t<InspectorControls group=\"styles\">\n\t\t\t\t\t\t<PanelBody title=\"Banded Table Rows\" initialOpen={false}>\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<CheckboxControl label=\"Display Banded Rows\"\n\t\t\t\t\t\t\t\t\tchecked={bandedRows}\n\t\t\t\t\t\t\t\t\t// checked={true}\n\t\t\t\t\t\t\t\t\tonChange={(e) => onShowBandedRows(table, e)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t<PanelColorSettings\n\t\t\t\t\t\t\t\t__experimentalIsRenderedInSidebar\n\t\t\t\t\t\t\t\ttitle={'Banded Row Color'}\n\t\t\t\t\t\t\t\tcolors={themeColors}\n\t\t\t\t\t\t\t\tcolorSettings={[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvalue: bandedRowTextColor,\n\t\t\t\t\t\t\t\t\t\tonChange: (newColor) => onBandedRowColor(table, 'text', newColor),\n\t\t\t\t\t\t\t\t\t\tlabel: 'Text'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvalue: bandedRowBackgroundColor,\n\t\t\t\t\t\t\t\t\t\tonChange: (newColor) => onBandedRowColor(table, 'background', newColor),\n\t\t\t\t\t\t\t\t\t\tlabel: 'Background'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t\t<PanelBody title=\"Grid Lines\" initialOpen={false}>\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<CheckboxControl label=\"Display Inner Grid Lines\"\n\t\t\t\t\t\t\t\t\tchecked={showGridLines}\n\t\t\t\t\t\t\t\t\t// checked={true}\n\t\t\t\t\t\t\t\t\tonChange={(e) => onShowGridLines(table, e)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t<NumberControl label=\"Inner Grid Line Width\"\n\t\t\t\t\t\t\t\t\tvalue={gridLineWidth}\n\t\t\t\t\t\t\t\t\tlabelPosition=\"side\"\n\t\t\t\t\t\t\t\t\tonChange={(e) => onGridLineWidth(table, e)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t<InspectorControls group=\"typography\">\n\t\t\t\t\t</InspectorControls>\n\n\n\t\t\t\t\t{/* <div>{table.table_name}</div> */}\n\n\t\t\t\t\t<RichText\n\t\t\t\t\t\t// id={tableName}\n\t\t\t\t\t\t// className={\"grid-control__cells \" + calculatedClasses + classes}\n\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\t//allowedFormats={['core/bold', 'core/italic']}\n\t\t\t\t\t\t//onChange={cellContent => setGridCells([col, row, cellId, componentClass, cellContent])}\n\t\t\t\t\t\tonChange={e => setTableAttributes(table_id, 'table_name', '', 'PROP', e)}\n\t\t\t\t\t\tvalue={table.table_name}>\n\t\t\t\t\t</RichText>\n\n\t\t\t\t\t<TabbableContainer>\n\t\t\t\t\t\t< div className={gridHeaderStickyClass}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\"--gridHeaderColor\": gridHeaderBackgroundColorStyle\n\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t<div className=\"grid-control\" style={{ \"--gridTemplateColumns\": gridColumnStyle, \"--gridTemplateRows\": gridRowStyle }}>\n\n\t\t\t\t\t\t\t\t{/* TODO: Add overflow-x option if the overflow option is selected */}\n\n\n\t\t\t\t\t\t\t\t{table.cells.map(({ table_id, row_id, column_id, cell_id, content, attributes, classes }) => {\n\t\t\t\t\t\t\t\t\tconst isBorder = attributes.border;\n\n\t\t\t\t\t\t\t\t\tfunction setBorderContent(row, column, content) {\n\t\t\t\t\t\t\t\t\t\tif (row === '0' && column === '0') {\n\t\t\t\t\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn content\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tfunction openCurrentColumnMenu(columnMenuVisible, openColumnRow, column_id) {\n\t\t\t\t\t\t\t\t\t\tif (columnMenuVisible && openColumnRow === column_id) {\n\t\t\t\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tfunction openCurrentRowMenu(rowMenuVisible, openColumnRow, row_id) {\n\t\t\t\t\t\t\t\t\t\tif (rowMenuVisible && openColumnRow === row_id) {\n\t\t\t\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst borderContent = setBorderContent(row_id, column_id, content)\n\t\t\t\t\t\t\t\t\tconst isOpenCurrentColumnMenu = openCurrentColumnMenu(columnMenuVisible, openColumnRow, column_id)\n\t\t\t\t\t\t\t\t\tconst isOpenCurrentRowMenu = openCurrentRowMenu(rowMenuVisible, openColumnRow, row_id)\n\t\t\t\t\t\t\t\t\tconst isFirstColumn = column_id === '1' ? true : false;\n\t\t\t\t\t\t\t\t\tlet showGridLinesCSS = gridShowInnerLines\n\t\t\t\t\t\t\t\t\tlet gridLineWidthCSS = gridInnerLineWidth\n\n\t\t\t\t\t\t\t\t\tlet calculatedClasses = ''\n\t\t\t\t\t\t\t\t\tconst bandedRowOffset = enableHeaderRow ? 1 : 0\n\n\t\t\t\t\t\t\t\t\tif (bandedRows && bandedRowOffset == 0 && Number(row_id) % 2 === 0) {\n\t\t\t\t\t\t\t\t\t\tcalculatedClasses = calculatedClasses + 'grid-control__cells--banded-row '\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (bandedRows && bandedRowOffset == 1 && Number(row_id) > 1 && (Number(row_id) + bandedRowOffset) % 2 === 0) {\n\t\t\t\t\t\t\t\t\t\tcalculatedClasses = calculatedClasses + 'grid-control__cells--banded-row '\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (enableHeaderRow && Number(row_id) == 1) {\n\t\t\t\t\t\t\t\t\t\tcalculatedClasses = calculatedClasses + 'grid-control__header-cells '\n\t\t\t\t\t\t\t\t\t\tshowGridLinesCSS = 'solid'\n\t\t\t\t\t\t\t\t\t\tgridLineWidthCSS = '1px'\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tcalculatedClasses = calculatedClasses + 'grid-control__body-cells '\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconsole.log('...Rendering - ' + cell_id)\n\t\t\t\t\t\t\t\t\tconsole.log('Calculated Classes = ' + calculatedClasses)\n\t\t\t\t\t\t\t\t\t// console.log('Column Menu Visible = ' + columnMenuVisible)\n\t\t\t\t\t\t\t\t\t// console.log('Show Inner Grid Lines = ' + gridShowInnerLines)\n\t\t\t\t\t\t\t\t\t// console.log('Inner Grid Line Width = ' + gridInnerLineWidth)\n\t\t\t\t\t\t\t\t\tconsole.log('Open Column = ' + openColumnRow)\n\t\t\t\t\t\t\t\t\tconsole.log('Open Current Column Menu = ' + isOpenCurrentColumnMenu)\n\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t{(isFirstColumn) && isBorder && (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={\"grid-control__cells--border\"} />\n\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t{isBorder && (\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={cell_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={e => onMouseColumnClick(column_id, row_id, table, e)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{isOpenCurrentColumnMenu && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ColumnMenu\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttableId={table_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnId={column_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnLabel={borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnAttributes={columnAttributes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedColumn={onUpdateColumn}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ColumnMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{isOpenCurrentRowMenu && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RowMenu\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttableId={table_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowId={row_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowLabel={borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowAttributes={columnAttributes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedRow={onUpdateRow}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</RowMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t{isFirstColumn && !isBorder && (\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"grid-control__cells--zoom \" + calculatedClasses}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--bandedRowTextColor\": gridBandedRowTextColor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--bandedRowBackgroundColor\": gridBandedRowBackgroundColor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--showGridLines\": showGridLinesCSS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--gridLineWidth\": gridLineWidthCSS\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={search}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t\t{!isBorder && (\n\t\t\t\t\t\t\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={cell_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={calculatedClasses + classes}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--bandedRowTextColor\": gridBandedRowTextColor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--bandedRowBackgroundColor\": gridBandedRowBackgroundColor,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--showGridLines\": showGridLinesCSS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"--gridLineWidth\": gridLineWidthCSS\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t//allowedFormats={['core/bold', 'core/italic']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t//onChange={cellContent => setGridCells([col, row, cellId, componentClass, cellContent])}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setTableAttributes(table_id, 'cell', cell_id, 'CONTENT', e)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={content}>\n\t\t\t\t\t\t\t\t\t\t\t\t</RichText>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</TabbableContainer>\n\t\t\t\t</>\n\t\t\t)\n\t\t\t}\n\n\t\t\t{\n\t\t\t\t!isNewBlock && tableIsResolving && (\n\t\t\t\t\t<Spinner>Retrieving Table Data</Spinner>\n\t\t\t\t)\n\t\t\t}\n\n\n\t\t\t{\n\t\t\t\tisNewBlock && (\n\t\t\t\t\t<Placeholder\n\t\t\t\t\t\tlabel={__('Dynamic Table')}\n\t\t\t\t\t\ticon={<BlockIcon icon={icon} showColors />}\n\t\t\t\t\t\tinstructions={__('Create a new dynamic table.')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-form\"\n\t\t\t\t\t\t\tonSubmit={onCreateTable}\n\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\tlabel={__('Table Columns')}\n\t\t\t\t\t\t\t\tonChange={e => onChangeInitialColumnCount(e)}\n\t\t\t\t\t\t\t\tvalue={numColumns}\n\t\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-input\"\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\t\tlabel={__('Table Rows')}\n\t\t\t\t\t\t\t\tonChange={e => onChangeInitialRowCount(e)}\n\t\t\t\t\t\t\t\tvalue={numRows}\n\t\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-input\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-button\"\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{__('Create Table')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Placeholder>\n\t\t\t\t)\n\t\t\t}\n\n\t\t</div >\n\t)\n}","import { useState, useEffect } from '@wordpress/element';\r\nimport { usePrevious } from \"@wordpress/compose\";\r\nimport { useSelect } from '@wordpress/data';\r\n\r\n/**\r\n * Returns `true` if post changes are saved, otherwise `false`.\r\n * \r\n * @returns {boolean}\r\n */\r\nexport const usePostChangesSaved = () => {\r\n    console.log('In After Save Hook')\r\n\r\n    const [areChangesSaved, setAreChangesSaved] = useState(false);\r\n    const { hasUnsavedChanges } = useSelect((select) => {\r\n        // console.log('Getting Save Post Status')\r\n        return {\r\n            hasUnsavedChanges: select('core/editor').isEditedPostDirty(),\r\n        }\r\n    })\r\n    const hadUnsavedChanges = usePrevious(hasUnsavedChanges)\r\n\r\n    useEffect(() => {\r\n        if (!hasUnsavedChanges && hadUnsavedChanges) {\r\n            setAreChangesSaved(true);\r\n        }\r\n        if (hasUnsavedChanges) {\r\n            setAreChangesSaved(false);\r\n        }\r\n\r\n    }, [hasUnsavedChanges, hadUnsavedChanges]);\r\n\r\n    // console.log('Post Saved = ' + areChangesSaved)\r\n    return areChangesSaved;\r\n};","import { registerBlockType } from '@wordpress/blocks';\nimport './style.scss';\nimport Edit from './edit';\nimport metadata from './block.json';\n\nregisterBlockType(metadata.name, {\n\t// From  edit.js\n\t//apiVersion: 3,\n\tedit: Edit,\n\tsave: function (props) {\n\t\treturn null\n\t},\n});\n","export function numberToLetter(letterNumber) {\r\n\r\n    const letterMap = [\r\n        { nbr: '1', letter: 'A' },\r\n        { nbr: '2', letter: 'B' },\r\n        { nbr: '3', letter: 'C' },\r\n        { nbr: '4', letter: 'D' },\r\n        { nbr: '5', letter: 'E' },\r\n        { nbr: '6', letter: 'F' },\r\n        { nbr: '7', letter: 'G' },\r\n        { nbr: '8', letter: 'H' },\r\n        { nbr: '9', letter: 'I' },\r\n        { nbr: 'a', letter: 'J' },\r\n        { nbr: 'b', letter: 'k' },\r\n        { nbr: 'c', letter: 'L' },\r\n        { nbr: 'd', letter: 'M' },\r\n        { nbr: 'e', letter: 'N' },\r\n        { nbr: 'f', letter: 'O' },\r\n        { nbr: 'g', letter: 'P' },\r\n        { nbr: 'h', letter: 'Q' },\r\n        { nbr: 'i', letter: 'R' },\r\n        { nbr: 'j', letter: 'S' },\r\n        { nbr: 'k', letter: 'T' },\r\n        { nbr: 'l', letter: 'U' },\r\n        { nbr: 'm', letter: 'V' },\r\n        { nbr: 'n', letter: 'W' },\r\n        { nbr: 'o', letter: 'X' },\r\n        { nbr: 'p', letter: 'Y' },\r\n        { nbr: 'q', letter: 'Z' }\r\n    ]\r\n\r\n    if (letterNumber === 0) {\r\n        console.log('...In Letter = 0')\r\n\r\n        return '0'\r\n    }\r\n\r\n    var letterLookup = letterNumber.toString(26).split('')\r\n    let letterDigit = ''\r\n\r\n    letterLookup.map((value) => {\r\n        letterDigit = letterDigit + letterMap.find(x => x.nbr === value).letter\r\n    })\r\n\r\n    return (letterDigit)\r\n}\r\n\r\nexport function updateArray(arrayIn, key, id, updatedData) {\r\n    console.log('Update Array')\r\n    console.log(arrayIn)\r\n    console.log(key)\r\n    console.log(id)\r\n    console.log(updatedData)\r\n    return arrayIn.map((item) =>\r\n        item[key] === id ? { ...item, ...updatedData } : item\r\n    )\r\n}\r\n\r\n\r\nexport function tableSort(tablePart, tableArray) {\r\n\r\n    console.log('SORTING TABLE')\r\n    console.log('Table Part = ' + tablePart)\r\n    console.log(tableArray)\r\n\r\n    if (tablePart === 'rows') {\r\n        console.log('...in Rows sort')\r\n        var sortedRows = [...tableArray];\r\n        sortedRows.sort((a, b) => {\r\n            // console.log(number(a.row_id))\r\n            // console.log(number([a.row_id]))\r\n            if (Number([a.row_id]) < Number([b.row_id])) {\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n        })\r\n        return sortedRows;\r\n    }\r\n\r\n    if (tablePart === 'columns') {\r\n        console.log('...in Columns sort')\r\n        var sortedColumns = [...tableArray];\r\n        sortedColumns.sort((a, b) => {\r\n            console.log(Number(a.column_id))\r\n            if (Number([a.column_id]) < Number([b.column_id])) {\r\n                return -1\r\n            } else {\r\n                return 1\r\n            }\r\n        })\r\n        console.log(sortedColumns)\r\n        return sortedColumns;\r\n    }\r\n\r\n    if (tablePart === 'cells') {\r\n        console.log('...in Cells sort')\r\n        var sortedCells = [...tableArray];\r\n        sortedCells.sort((a, b) => {\r\n            console.log([Number([a.row_id]), Number([a.column_id])])\r\n            console.log([Number([b.row_id]), Number([b.column_id])])\r\n            if (Number([a.row_id]) === Number([b.row_id])) {\r\n                if (Number([a.column_id]) < Number([b.column_id])) {\r\n                    return -1\r\n                } else {\r\n                    return 1\r\n                }\r\n            }\r\n\r\n            if (Number([a.row_id]) < Number([b.row_id])) {\r\n                return -1\r\n            } else {\r\n                return 1\r\n            }\r\n\r\n            // if ([Number([a.row_id]), Number([a.column_id])] < [Number([b.row_id]), Number([b.column_id])]) {\r\n            //     return -1\r\n            // } else {\r\n            //     return 1\r\n            // }\r\n        })\r\n        console.log(sortedCells)\r\n        return sortedCells;\r\n    }\r\n    console.log('...NO SORT RETURNED')\r\n}\r\n\r\nexport function generateBlockTableRef() {\r\n    const timestamp = Date.now();\r\n    return timestamp.toString(16);\r\n}\r\n\r\nexport function initTable(newBlockTableRef, columnCount, rowCount) {\r\n\r\n    console.log('FUNCTION - CREATE TABLE')\r\n    console.log('InitialRows - ' + rowCount)\r\n    console.log('InitialColumns - ' + columnCount)\r\n\r\n    var tableCells = initTableCells(Number(columnCount), Number(rowCount))\r\n    var rowArray = [];\r\n\r\n    for (let i = 1; i <= rowCount; i++) {\r\n        console.log('Row loop - ' + i)\r\n        let row = getDefaultRow('0', i)\r\n        // console.log('...looped row - ' + JSON.stringify(row, null, 4))\r\n        rowArray.push(row)\r\n        // console.log('...row array - ' + JSON.stringify(rowArray, null, 4))\r\n    }\r\n\r\n    var columnArray = [];\r\n\r\n    for (let i = 1; i <= columnCount; i++) {\r\n        console.log('Column loop - ' + i)\r\n        let column = getDefaultColumn('0', i)\r\n        // console.log('...looped column - ' + JSON.stringify(column, null, 4))\r\n        columnArray.push(column)\r\n        // console.log('...column array - ' + JSON.stringify(columnArray, null, 4))\r\n    }\r\n\r\n    const newTable = {\r\n        table: {\r\n            table_id: '0',\r\n            block_table_ref: newBlockTableRef,\r\n            post_id: '0',\r\n            table_status: 'new',\r\n            table_name: 'Test Table',\r\n            table_attributes: getDefaultTableAttributes('table'),\r\n            table_classes: getDefaultTableClasses('table'),\r\n            rows: rowArray,\r\n            columns: columnArray,\r\n            cells: tableCells\r\n        }\r\n    }\r\n\r\n    return newTable\r\n}\r\n\r\nexport function initTableCells(init_num_columns, init_num_rows) {\r\n    console.log(init_num_rows)\r\n    var tableCells = []\r\n\r\n    var x = 1\r\n    var y = 1\r\n\r\n    while (y <= init_num_rows) {\r\n        while (x <= init_num_columns) {\r\n            let columnLetter = numberToLetter(x)\r\n            if (y == 1) {\r\n                let cell = getDefaultCell('0', String(x), String(y))\r\n                tableCells.push(cell)\r\n            } else {\r\n                let cell = getDefaultCell('0', String(x), String(y))\r\n                tableCells.push(cell)\r\n            }\r\n            x++\r\n        }\r\n        var x = 1\r\n        y++\r\n    }\r\n\r\n    return tableCells;\r\n}\r\n\r\nexport function getDefaultRow(tableId, rowId, rowLocation = 'Body') {\r\n    console.log('In GetDefaultRow')\r\n    console.log('...tableId = ' + tableId)\r\n    console.log('...rowId = ' + rowId)\r\n    console.log('...rowLocation = ' + rowLocation)\r\n\r\n    let row\r\n    if (rowLocation === 'Border') {\r\n        row = {\r\n            table_id: String(tableId),\r\n            row_id: String(rowId),\r\n            attributes: getDefaultTableAttributes('rows', rowLocation),\r\n            classes: getDefaultTableClasses('rows')\r\n        }\r\n    } else {\r\n        row = {\r\n            table_id: String(tableId),\r\n            row_id: String(rowId),\r\n            attributes: getDefaultTableAttributes('rows', rowLocation),\r\n            classes: getDefaultTableClasses('rows')\r\n        }\r\n    }\r\n\r\n    console.log(row)\r\n    return row;\r\n}\r\n\r\n\r\nexport function getDefaultColumn(tableId, columnId, columnLocation = 'Body') {\r\n\r\n    let column\r\n    if (columnLocation === 'Border') {\r\n        column = {\r\n            table_id: String(tableId),\r\n            column_id: String(columnId),\r\n            column_name: 'Border',\r\n            attributes: getDefaultTableAttributes('columns', columnLocation),\r\n            classes: ''\r\n        }\r\n    } else {\r\n        column = {\r\n            table_id: String(tableId),\r\n            column_id: String(columnId),\r\n            column_name: 'Comments',\r\n            attributes: getDefaultTableAttributes('columns', columnLocation),\r\n            classes: getDefaultTableClasses('columns')\r\n        }\r\n    }\r\n\r\n    return column;\r\n}\r\n\r\nexport function getDefaultCell(tableId, columnId, rowId, cellLocation = 'Body') {\r\n\r\n    let cell\r\n    let columnLetter = numberToLetter(columnId)\r\n    let borderContent = rowId == 0 ? columnLetter : String(rowId)\r\n\r\n    if (cellLocation === 'Border') {\r\n        cell = {\r\n            table_id: String(tableId),\r\n            column_id: String(columnId),\r\n            row_id: String(rowId),\r\n            cell_id: rowId === 0 ? columnLetter + '0' : '0' + String(columnId),\r\n            attributes: getDefaultTableAttributes('cells', cellLocation),\r\n            classes: 'grid-control__cells--border hover',\r\n            content: borderContent\r\n        }\r\n    } else {\r\n        cell = {\r\n            table_id: String(tableId),\r\n            column_id: String(columnId),\r\n            row_id: String(rowId),\r\n            cell_id: columnLetter + rowId,\r\n            attributes: getDefaultTableAttributes('cells', cellLocation),\r\n            classes: getDefaultTableClasses('cells'),\r\n            content: ''\r\n        }\r\n    }\r\n    return cell;\r\n}\r\n\r\nexport function getDefaultTableAttributes(tableComponent, componentLocation = 'Body') {\r\n\r\n    const tableBaseAttributes = {\r\n        showGridLines: false,\r\n        bandedRows: false,\r\n        bandedRowBackgroundColor: '#d8dbda',\r\n        bandedTextColor: '#d8dbda',\r\n        gridLineWidth: 1,\r\n        enableHeaderRow: false,\r\n        headerRowSticky: false,\r\n        horizontalAlignment: 'none',\r\n        verticalAlignment: 'none'\r\n    }\r\n\r\n    const columnAttributes = {\r\n        columnWidthType: 'Proportional',\r\n        minWidth: 20,\r\n        minWidthUnits: 'ch',\r\n        maxWidth: 1,\r\n        maxWidthUnits: 'fr',\r\n        fixedWidth: 1,\r\n        fixedWidthUnits: 'fr',\r\n        disableForTablet: false,\r\n        disableForPhone: false,\r\n        isFixedLeftColumnGroup: false,\r\n        horizontalAlignment: 'none'\r\n    }\r\n\r\n    const columnBorderAttributes = {\r\n        columnWidthType: 'Fixed',\r\n        minWidth: 0,\r\n        minWidthUnits: '',\r\n        maxWidth: 0,\r\n        maxWidthUnits: '',\r\n        fixedWidth: 20,\r\n        fixedWidthUnits: 'px',\r\n        disableForTablet: false,\r\n        disableForPhone: false,\r\n        isFixedLeftColumnGroup: false,\r\n        horizontalAlignment: 'center'\r\n    }\r\n\r\n    const rowAttributes = {\r\n        rowHeightType: 'Auto',\r\n        minHeight: 0,\r\n        minHeightUnits: 'em',\r\n        maxHeight: 0,\r\n        maxHeightUnits: 'em',\r\n        fixedHeight: 0,\r\n        fixedHeightUnits: 'em',\r\n        isHeader: 'false',\r\n        verticalAlignment: 'none'\r\n    }\r\n\r\n    const rowBorderAttributes = {\r\n        rowHeightType: 'Auto',\r\n        minHeight: 0,\r\n        minHeightUnits: 'em',\r\n        maxHeight: 0,\r\n        maxHeightUnits: 'em',\r\n        fixedHeight: 0,\r\n        fixedHeightUnits: 'em',\r\n        isHeader: 'false',\r\n        verticalAlignment: 'none'\r\n    }\r\n\r\n    const cellAttributes = {\r\n        border: false\r\n    }\r\n\r\n    const cellBorderAttributes = {\r\n        border: true\r\n    }\r\n\r\n    switch (tableComponent) {\r\n        case 'table':\r\n            return tableBaseAttributes;\r\n            break;\r\n\r\n        case 'columns':\r\n            if (componentLocation === 'Border') {\r\n                return columnBorderAttributes;\r\n            }\r\n            return columnAttributes;\r\n            break;\r\n\r\n        case 'rows':\r\n            if (componentLocation === 'Border') {\r\n                return rowBorderAttributes;\r\n            }\r\n            return rowAttributes;\r\n            break;\r\n\r\n        case 'cells':\r\n            if (componentLocation === 'Border') {\r\n                return cellBorderAttributes;\r\n            }\r\n            return cellAttributes;\r\n            break;\r\n\r\n        default:\r\n            return\r\n    }\r\n}\r\n\r\nexport function getDefaultTableClasses(tableComponent) {\r\n\r\n\r\n    const tableBaseClasses = ''\r\n\r\n    const columnClasses = ''\r\n\r\n\r\n    const rowClasses = ''\r\n\r\n    const cellClasses = ''\r\n\r\n    switch (tableComponent) {\r\n        case 'table':\r\n            return tableBaseClasses;\r\n            break;\r\n\r\n        case 'columns':\r\n            return columnClasses;\r\n            break;\r\n\r\n        case 'rows':\r\n            return rowClasses;\r\n            break;\r\n\r\n        case 'cells':\r\n            return cellClasses;\r\n            break;\r\n\r\n        default:\r\n            return\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"dataControls\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"primitives\"];","module.exports = window[\"wp\"][\"url\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdynamic_tables\"] = self[\"webpackChunkdynamic_tables\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], function() { return __webpack_require__(\"./src/index.js\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["useEffect","useState","DropdownMenu","MenuGroup","MenuItem","AlignmentToolbar","blockTable","icon","moreVertical","more","arrowLeft","arrowRight","arrowUp","arrowDown","trash","store","tableStore","ConfigureColumnWidth","ColumnMenu","props","openModalColumnWidth","setOpenModalColumnWidth","columnAttributes","setColumnAttributes","tableId","columnId","columnLabel","updatedColumn","console","log","onInsertColumn","event","onDeleteColumn","onUpdateColumnWidth","updatedColumnAttributes","preventDefault","createElement","Fragment","defaultOpen","label","onClose","onClick","e","openColumnWidth","Modal","SelectControl","CheckboxControl","TabbableContainer","Button","__experimentalInputControl","InputControl","__experimentalNumberControl","NumberControl","columnWidthType","setHideProportional","setHideCustom","setHideFixed","setColumnWidthType","setMinWidth","minWidth","setMinWidthUnits","minWidthUnits","setMaxWidth","maxWidth","setMaxWidthUnits","maxWidthUnits","setFixedWidth","fixedWidth","setFixedWidthUnits","setDisableForPhone","disableForPhone","setDisableForTablet","disableForTablet","stopProp","stopPropagation","handleCancel","hideProportional","hideCustom","hideFixed","fixedWidthUnits","onWidthType","onMinimumWidth","target","value","onMinimumWidthUnits","onMaximumWidth","onMaximumWidthUnits","onFixedWidth","Number","onFixedWidthUnits","onTablet","checked","onPhone","onUpdate","isFixedLeftColumnGroup","horizontalAlignment","title","onRequestClose","focusOnMount","isDismissible","shouldCloseOnClickOutside","size","className","onSubmit","onMouseDown","onChange","options","__nextHasNoMarginBottom","labelPosition","onBlur","variant","type","ConfigureRowHeight","onHeightType","setRowHeightType","openRowHeight","rowHeightType","RowMenu","openModalRowHeight","setOpenModalRowHeight","rowAttributes","setRowAttributes","rowId","rowLabel","updatedRow","onInsertRow","onDeleteRow","onUpdateRowHeight","updatedRowAttributes","TYPES","CREATE_TABLE","INSERT_COLUMN","INSERT_ROW","DELETE_TABLE","DELETE_COLUMN","DELETE_ROW","CHANGE_TABLE_ID","UPDATE_TABLE_PROP","REMOVE_TABLE_PROP","UPDATE_ROW","UPDATE_COLUMN","UPDATE_CELL","RECEIVE_HYDRATE","RECEIVE_HYDRATE_TEST","PERSIST","PROCESS_BORDERS","addEntities","addQueryArgs","apiFetch","coreStore","blockEditorStore","addTableEntity","registry","dispatch","tableEntityConfig","configs","receiveNewTable","table","table_id","receiveTable","block_table_ref","post_id","table_name","table_attributes","table_classes","rows","columns","cells","table_status","createTableEntity","select","getTable","testTable","newTable","header","id","tableEntity","saveEntityRecord","assignTableId","error","updateTableEntity","filteredRows","filter","row","row_id","filteredColumns","column","column_id","filteredCells","cell","updatedTable","editEntityRecord","deleteTableEntity","deletedTableEntity","deleteEntityRecord","processDeletedTables","deletedTables","Object","keys","forEach","key","deletedTableId","processUnmountedTables","unmountedTables","unmountedTableBlockId","unmounted_blockid","tableBlock","getBlock","removeTableProp","updateTableProp","addColumn","newColumn","columnCells","addRow","newRow","rowCells","removeColumn","removeRow","newTableId","String","attribute","updateRow","updateColumn","updateCell","cellId","updateTableBorder","tableRows","tableColumns","tableCells","receiveTableTest","name","kind","baseURL","STORE_NAME","createReduxStore","register","reducer","selectors","actions","resolvers","numberToLetter","updateArray","tableSort","state","action","JSON","stringify","newTableIdState","rowsWithNewId","columnsWithNewId","cellsWithNewId","foreach","push","newCell","newCellRow","updatedTableId","tablePropRemoved","insertColumnState","column_name","attributes","classes","sortedColumns","newColumnId","columnLetter","cellContent","content","cell_id","allNewColumnCells","sortedCells","returnedTableNewColumn","insertRowState","sortedRows","newRowId","allNewRowCells","returnedTableNewRow","deleteColumnState","deleteRowState","newRowsState","updatedRowData","parse","updatedRows","returnedUpdatedTableRow","transformedValue","newColumnsState","updatedColumnData","updatedColumns","returnedUpdatedTableColumn","newCellsState","updatedCellData","updatedCells","returnedCellState","newBaseTableState","returnedBorderState","tables","tableKey","newTableState","returnedTable","newTablesState","returnedTableNewId","filteredTablesState","reduce","acc","deleteTablesState","returnedTableDefault","computeCellId","fetchedCells","isTableStale","resolveSelect","getEntityRecord","createRegistrySelector","hasOwnProperty","getTables","getNewTableIdByBlock","length","getUnmountedTables","getDeletedTables","getUnsavedTables","getTableBlockId","getTableTest","useSelect","useDispatch","useRef","usePrevious","__","ForwardedRef","Panel","PanelBody","PanelRow","TextControl","Spinner","Placeholder","ColorPicker","ToggleControl","RichText","useBlockProps","useSetting","BlockIcon","InspectorControls","BlockControls","PanelColorSettings","search","usePostChangesSaved","generateBlockTableRef","initTable","initTableCells","getDefaultRow","getDefaultColumn","getDefaultCell","getDefaultTableClasses","getDefaultTableAttributes","Edit","blockProps","deleteTable","setTableStale","openColumnRow","setOpenColumnRow","tablePropAttributes","setTablePropAttributes","columnMenuVisible","setColumnMenuVisible","rowMenuVisible","setRowMenuVisible","openRowColumn","setOpenRowColumn","render","setRender","showBorders","setShowBorders","numColumns","setNumColumns","numRows","setNumRows","gridCells","setGridCells","awaitingTableEntityCreation","setAwaitingTableEntityCreation","priorTableRef","themeColors","postChangesAreSaved","alert","setTableAttributes","setBlockTableStatus","setNewBlock","isNewBlock","blockTableStatus","tableStatus","tableHasStartedResolving","tableHasFinishedResolving","tableIsResolving","hasStartedResolution","hasFinishedResolution","isResolving","selectorArgs","getBlockTable","selectedTable","setAttributes","getTablePropAttribute","tableAttributes","attributeName","attributeValue","showGridLines","enableHeaderRow","gridHeaderBackgroundColor","headerRowSticky","bandedRows","bandedRowTextColor","bandedRowBackgroundColor","gridLineWidth","verticalAlignment","tableColumnLength","tableRowLength","insertColumn","i","insertRow","deleteColumn","deleteRow","persist","onToggleBorders","isChecked","rowBorder","columnBorder","processColumns","undefined","newGridColumnStyle","map","sizing","processRows","newGridRowStyle","gridBandedRowTextColorStyle","color","gridBandedRowBackgroundColorStyle","getGridHeaderBackgroundColorStyle","tableColor","blockColor","gridInnerBorderStyle","gridInnerBorderWidthStyle","createTable","columnCount","rowCount","newBlockTableRef","onCreateTable","onChangeInitialColumnCount","num_columns","onChangeInitialRowCount","num_rows","onUpdateColumn","updateType","onUpdateRow","onMouseColumnClick","compareColumnId","clickedColumn","find","compareRowId","clickedRow","onShowBandedRows","updatedTableAttributes","onBandedRowColor","onEnableHeaderRow","onHeaderRowSticky","onShowGridLines","onGridLineWidth","gridColumnStyle","gridRowStyle","gridHeaderBackgroundColorStyle","style","backgroundColor","gridBandedRowTextColor","gridBandedRowBackgroundColor","gridShowInnerLines","gridInnerLineWidth","gridHeaderStickyClass","initialOpen","defineColumns","defineRows","group","__experimentalIsRenderedInSidebar","colors","colorSettings","newColor","tagName","isBorder","border","setBorderContent","openCurrentColumnMenu","openCurrentRowMenu","borderContent","isOpenCurrentColumnMenu","isOpenCurrentRowMenu","isFirstColumn","showGridLinesCSS","gridLineWidthCSS","calculatedClasses","bandedRowOffset","href","tabIndex","showColors","instructions","areChangesSaved","setAreChangesSaved","hasUnsavedChanges","isEditedPostDirty","hadUnsavedChanges","registerBlockType","metadata","edit","save","letterNumber","letterMap","nbr","letter","letterLookup","toString","split","letterDigit","x","arrayIn","updatedData","item","tablePart","tableArray","sort","a","b","timestamp","Date","now","rowArray","columnArray","init_num_columns","init_num_rows","y","rowLocation","columnLocation","cellLocation","tableComponent","componentLocation","tableBaseAttributes","bandedTextColor","columnBorderAttributes","minHeight","minHeightUnits","maxHeight","maxHeightUnits","fixedHeight","fixedHeightUnits","isHeader","rowBorderAttributes","cellAttributes","cellBorderAttributes","tableBaseClasses","columnClasses","rowClasses","cellClasses"],"sourceRoot":""}