{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;AAAsC;AACtC;AACA;AACA;AACkD;AAClD,kBAAkB,oDAAa,CAAC,sDAAG;AACnC;AACA;AACA,CAAC,EAAE,oDAAa,CAAC,uDAAI;AACrB;AACA,CAAC;AACD,+DAAe,SAAS,EAAC;AACzB;;;;;;;;;;;;;;;ACZsC;AACtC;AACA;AACA;AACkD;AAClD,gBAAgB,oDAAa,CAAC,sDAAG;AACjC;AACA;AACA,CAAC,EAAE,oDAAa,CAAC,uDAAI;AACrB;AACA,CAAC;AACD,+DAAe,OAAO,EAAC;AACvB;;;;;;;;;;;;;;;ACZsC;AACtC;AACA;AACA;AACkD;AAClD,mBAAmB,oDAAa,CAAC,sDAAG;AACpC;AACA;AACA,CAAC,EAAE,oDAAa,CAAC,uDAAI;AACrB;AACA,CAAC;AACD,+DAAe,UAAU,EAAC;AAC1B;;;;;;;;;;;;;;;ACZsC;AACtC;AACA;AACA;AACkD;AAClD,qBAAqB,oDAAa,CAAC,sDAAG;AACtC;AACA;AACA,CAAC,EAAE,oDAAa,CAAC,uDAAI;AACrB;AACA,CAAC;AACD,+DAAe,YAAY,EAAC;AAC5B;;;;;;;;;;;;;;;ACZsC;AACtC;AACA;AACA;AACkD;AAClD,cAAc,oDAAa,CAAC,sDAAG;AAC/B;AACA;AACA,CAAC,EAAE,oDAAa,CAAC,uDAAI;AACrB;AACA;AACA;AACA,CAAC;AACD,+DAAe,KAAK,EAAC;AACrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdwD;AAKzB;AAIE;AAUP;;AAE1B;AACA;AACA;AACgD;AACiB;AACtC;AAG3B,SAASkB,UAAUA,CAACC,KAAK,EAAE;EAEvB,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGpB,4DAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,4DAAQ,CAAC,CAAC,CAAC,CAAC;EAE5D,MAAM;IACFuB,OAAO;IACPC,QAAQ;IACRC,WAAW;IACXC;EACJ,CAAC,GAAGR,KAAK;EAETnB,6DAAS,CAAC,MAAM;IACZuB,mBAAmB,CAACJ,KAAK,CAACG,gBAAgB,CAAC;EAC/C,CAAC,EAAE,CAACH,KAAK,CAACG,gBAAgB,CAAC,CAAC;EAE5BM,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACtCD,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;EAElB,SAASW,cAAcA,CAACC,KAAK,EAAEN,QAAQ,EAAE;IACrCG,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpCD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClBH,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGJ,QAAQ,CAAC;IACrCE,aAAa,CAACI,KAAK,EAAE,QAAQ,EAAEP,OAAO,EAAEC,QAAQ,EAAE,EAAE,CAAC;EACzD;EAEA,SAASO,cAAcA,CAACD,KAAK,EAAEN,QAAQ,EAAE;IACrCG,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpCD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClBH,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGJ,QAAQ,CAAC;IACrCE,aAAa,CAACI,KAAK,EAAE,QAAQ,EAAEP,OAAO,EAAEC,QAAQ,EAAE,EAAE,CAAC;EACzD;EAEA,SAASQ,mBAAmBA,CAACF,KAAK,EAAEG,uBAAuB,EAAE;IACzDN,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1CD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClBH,OAAO,CAACC,GAAG,CAACK,uBAAuB,CAAC;IACpC,IAAId,oBAAoB,EAAE;MACtBC,uBAAuB,CAAC,KAAK,CAAC;MAC9BM,aAAa,CAACI,KAAK,EAAE,YAAY,EAAEP,OAAO,EAAEC,QAAQ,EAAES,uBAAuB,CAAC;IAClF,CAAC,MAAM;MACHH,KAAK,CAACI,cAAc,CAAC,CAAC;MACtBd,uBAAuB,CAAC,IAAI,CAAC;IACjC;EACJ;EAEAO,OAAO,CAACC,GAAG,CAAC,2BAA2B,GAAGT,oBAAoB,CAAC;EAE/D,OACIgB,oDAAA,CAAAC,2CAAA,QACID,oDAAA,CAAClC,+DAAYA;EACT;EAAA;IACAK,IAAI,EAAEC,wDAAa;IACnB8B,WAAW,EAAC,MAAM;IAClBC,KAAK,EAAEb;EAAY,GAClB,CAAC;IAAEc;EAAQ,CAAC,KACTJ,oDAAA,CAAAC,2CAAA,QACID,oDAAA,CAACjC,4DAAS,QACNiC,oDAAA,CAAChC,2DAAQ;IAACG,IAAI,EAAEK,wDAAQ;IAAC6B,OAAO,EAAER;EAAoB,GAAC,qBAE7C,CACH,CAAC,EACZG,oDAAA,CAACjC,4DAAS,QACNiC,oDAAA,CAAChC,2DAAQ;IAACG,IAAI,EAAEM,wDAAU;IAAC4B,OAAO,EAAEC,CAAC,IAAIZ,cAAc,CAACY,CAAC,EAAEjB,QAAQ;EAAE,GAAC,eAE5D,CAAC,EACXW,oDAAA,CAAChC,2DAAQ;IAACG,IAAI,EAAEO,yDAAM;IAAC2B,OAAO,EAAEC,CAAC,IAAIV,cAAc,CAACU,CAAC,EAAEjB,QAAQ;EAAE,GAAC,eAExD,CACH,CACb,CAEI,CAAC,EAEdL,oBAAoB,IACjBgB,oDAAA,CAACnB,yEAAoB;IACjBQ,QAAQ,EAAEA,QAAS;IACnBC,WAAW,EAAEA,WAAY;IACzBJ,gBAAgB,EAAEA,gBAAiB;IACnCqB,eAAe,EAAEV;EAAoB,CACnB,CAE5B,CAAC;AAGX;;;;;;;;;;;;;;;;;;;;;;;;;;AClHwD;AACxD;AACA;AACA;;AAU+B;AAKE;AAWP;;AAE1B;AACA;AACA;AACgD;AAC1B;AAEtB,SAAShB,oBAAoBA,CAACE,KAAK,EAAE;EAEjC,MAAM;IAAEwB,eAAe;IACnBlB,QAAQ;IACRC,WAAW;IACXJ;EACJ,CAAC,GAAGH,KAAK;EACT;;EAEAnB,6DAAS,CAAC,MAAM;IAEZ,QAAQsB,gBAAgB,CAAC+B,eAAe;MACpC,KAAK,cAAc;QACf;UACIC,mBAAmB,CAAC,KAAK,CAAC;UAC1BC,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,IAAI,CAAC;UAClB;QACJ;MAEJ,KAAK,MAAM;QACP;UACIF,mBAAmB,CAAC,IAAI,CAAC;UACzBC,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,IAAI,CAAC;UAClB;QACJ;MAEJ,KAAK,OAAO;QACR;UACIF,mBAAmB,CAAC,IAAI,CAAC;UACzBC,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,KAAK,CAAC;UACnB;QACJ;MAEJ,KAAK,QAAQ;QACT;UACIF,mBAAmB,CAAC,IAAI,CAAC;UACzBC,aAAa,CAAC,KAAK,CAAC;UACpBC,YAAY,CAAC,IAAI,CAAC;UAClB;QACJ;IACR;IAEAC,kBAAkB,CAACnC,gBAAgB,CAAC+B,eAAe,CAAC;IACpDK,WAAW,CAACpC,gBAAgB,CAACqC,QAAQ,CAAC;IACtCC,gBAAgB,CAACtC,gBAAgB,CAACuC,aAAa,CAAC;IAChDC,WAAW,CAACxC,gBAAgB,CAACyC,QAAQ,CAAC;IACtCC,gBAAgB,CAAC1C,gBAAgB,CAAC2C,aAAa,CAAC;IAChDC,aAAa,CAAC5C,gBAAgB,CAAC6C,UAAU,CAAC;IAC1CC,kBAAkB,CAAC9C,gBAAgB,CAAC6C,UAAU,CAAC;IAC/CE,kBAAkB,CAAC/C,gBAAgB,CAACgD,eAAe,CAAC;IACpDC,mBAAmB,CAACjD,gBAAgB,CAACkD,gBAAgB,CAAC;EAC1D,CAAC,EAAE,CAAClD,gBAAgB,CAAC,CAAC;EAEtB,SAASmD,QAAQA,CAAC1C,KAAK,EAAE;IACrBA,KAAK,CAAC2C,eAAe,CAAC,CAAC;EAC3B;EAEA,SAASC,YAAYA,CAAC5C,KAAK,EAAE;IACzBY,eAAe,CAAC,KAAK,CAAC;EAC1B;EAEA,MAAM,CAACU,eAAe,EAAEI,kBAAkB,CAAC,GAAGxD,4DAAQ,CAAC,CAAC;EACxD,MAAM,CAAC2E,gBAAgB,EAAEtB,mBAAmB,CAAC,GAAGrD,4DAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAAC4E,UAAU,EAAEtB,aAAa,CAAC,GAAGtD,4DAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC6E,SAAS,EAAEtB,YAAY,CAAC,GAAGvD,4DAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC0D,QAAQ,EAAED,WAAW,CAAC,GAAGzD,4DAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC4D,aAAa,EAAED,gBAAgB,CAAC,GAAG3D,4DAAQ,CAAC,CAAC;EACpD,MAAM,CAAC8D,QAAQ,EAAED,WAAW,CAAC,GAAG7D,4DAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACgE,aAAa,EAAED,gBAAgB,CAAC,GAAG/D,4DAAQ,CAAC,CAAC;EACpD,MAAM,CAACkE,UAAU,EAAED,aAAa,CAAC,GAAGjE,4DAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC8E,eAAe,EAAEX,kBAAkB,CAAC,GAAGnE,4DAAQ,CAAC,CAAC;EACxD,MAAM,CAACuE,gBAAgB,EAAED,mBAAmB,CAAC,GAAGtE,4DAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACqE,eAAe,EAAED,kBAAkB,CAAC,GAAGpE,4DAAQ,CAAC,KAAK,CAAC;EAE7D2B,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EAChDD,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;EAElB,SAAS6D,WAAWA,CAACjD,KAAK,EAAE;IACxBH,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtCD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAElB,QAAQA,KAAK;MACT,KAAK,cAAc;QACf;UACI+B,WAAW,CAAC,CAAC,CAAC;UACdE,gBAAgB,CAAC,IAAI,CAAC;UACtBN,WAAW,CAAC,EAAE,CAAC;UACfE,gBAAgB,CAAC,IAAI,CAAC;UACtBM,aAAa,CAAC,CAAC,CAAC;UAChBE,kBAAkB,CAAC,IAAI,CAAC;UACxBd,mBAAmB,CAAC,KAAK,CAAC;UAC1BC,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,IAAI,CAAC;UAClB;QACJ;MAEJ,KAAK,MAAM;QACP;UACIM,WAAW,CAAC,CAAC,CAAC;UACdE,gBAAgB,CAAC,IAAI,CAAC;UACtBN,WAAW,CAAC,CAAC,CAAC;UACdE,gBAAgB,CAAC,IAAI,CAAC;UACtBM,aAAa,CAAC,CAAC,CAAC;UAChBE,kBAAkB,CAAC,IAAI,CAAC;UACxBd,mBAAmB,CAAC,IAAI,CAAC;UACzBC,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,IAAI,CAAC;UAClB;QACJ;MAEJ,KAAK,OAAO;QACR;UACIM,WAAW,CAAC,CAAC,CAAC;UACdE,gBAAgB,CAAC,IAAI,CAAC;UACtBN,WAAW,CAAC,CAAC,CAAC;UACdE,gBAAgB,CAAC,IAAI,CAAC;UACtBM,aAAa,CAAC,EAAE,CAAC;UACjBE,kBAAkB,CAAC,IAAI,CAAC;UACxBd,mBAAmB,CAAC,IAAI,CAAC;UACzBC,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,KAAK,CAAC;UACnB;QACJ;MAEJ,KAAK,QAAQ;QACT;UACIM,WAAW,CAAC,EAAE,CAAC;UACfE,gBAAgB,CAAC,IAAI,CAAC;UACtBN,WAAW,CAAC,EAAE,CAAC;UACfE,gBAAgB,CAAC,IAAI,CAAC;UACtBM,aAAa,CAAC,CAAC,CAAC;UAChBE,kBAAkB,CAAC,IAAI,CAAC;UACxBd,mBAAmB,CAAC,IAAI,CAAC;UACzBC,aAAa,CAAC,KAAK,CAAC;UACpBC,YAAY,CAAC,IAAI,CAAC;UAClB;QACJ;IACR;IAEAC,kBAAkB,CAAC1B,KAAK,CAAC;EAC7B;EAEA,SAASkD,cAAcA,CAAClD,KAAK,EAAE;IAC3BH,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpCD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClB2B,WAAW,CAAC3B,KAAK,CAACmD,MAAM,CAACC,KAAK,CAAC;EACnC;EAEA,SAASC,mBAAmBA,CAACrD,KAAK,EAAE;IAChCH,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1CD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClB6B,gBAAgB,CAAC7B,KAAK,CAAC;EAC3B;EAEA,SAASsD,cAAcA,CAACtD,KAAK,EAAE;IAC3BH,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrCD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClB+B,WAAW,CAAC/B,KAAK,CAACmD,MAAM,CAACC,KAAK,CAAC;EACnC;EAEA,SAASG,mBAAmBA,CAACvD,KAAK,EAAE;IAChCH,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtCD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClBiC,gBAAgB,CAACjC,KAAK,CAAC;EAC3B;EAEA,SAASwD,YAAYA,CAACxD,KAAK,EAAE;IACzBH,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrCD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClBmC,aAAa,CAACsB,MAAM,CAACzD,KAAK,CAACmD,MAAM,CAACC,KAAK,CAAC,CAAC;EAC7C;EAEA,SAASM,iBAAiBA,CAAC1D,KAAK,EAAE;IAC9BH,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3CD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClBqC,kBAAkB,CAACrC,KAAK,CAAC;EAC7B;EAEA,SAAS2D,QAAQA,CAACC,OAAO,EAAE;IACvB/D,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClCD,OAAO,CAACC,GAAG,CAAC8D,OAAO,CAAC;IAEpBpB,mBAAmB,CAACoB,OAAO,CAAC;EAChC;EAEA,SAASC,OAAOA,CAACD,OAAO,EAAE;IACtB/D,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjCD,OAAO,CAACC,GAAG,CAAC8D,OAAO,CAAC;IAEpBtB,kBAAkB,CAACsB,OAAO,CAAC;EAC/B;EAEA,SAASE,QAAQA,CAAC9D,KAAK,EAAE;IACrB;IACAH,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtCD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClBH,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGkC,QAAQ,CAAC;IAEzC,IAAI7B,uBAAuB,GAC3B;MACImB,eAAe,EAAEA,eAAe;MAChCM,QAAQ,EAAEA,QAAQ;MAClBE,aAAa,EAAEA,aAAa;MAC5BE,QAAQ,EAAEyB,MAAM,CAACzB,QAAQ,CAAC;MAC1BE,aAAa,EAAEA,aAAa;MAC5BE,UAAU,EAAEA,UAAU;MACtBY,eAAe,EAAEA,eAAe;MAChCP,gBAAgB,EAAEA,gBAAgB;MAClCF,eAAe,EAAEA,eAAe;MAChCwB,sBAAsB,EAAE,KAAK;MAC7BC,mBAAmB,EAAE;IACzB,CAAC;IAEDnE,OAAO,CAACC,GAAG,CAACK,uBAAuB,CAAC;IAEpCS,eAAe,CAAC,KAAK,EAAET,uBAAuB,CAAC;EACnD;EAEAN,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAC3BD,OAAO,CAACC,GAAG,CAAC,kCAAkC,GAAG+C,gBAAgB,CAAC;EAClEhD,OAAO,CAACC,GAAG,CAAC,2BAA2B,GAAGiD,SAAS,CAAC;EACpDlD,OAAO,CAACC,GAAG,CAAC,4BAA4B,GAAGgD,UAAU,CAAC;EAEtD,OACIzC,oDAAA,CAAAC,2CAAA,QACMM,eAAe,IACbP,oDAAA,CAACQ,wDAAK;IACFoD,KAAK,EAAC,wBAAwB;IAC9BC,cAAc,EAAEtB,YAAa;IAC7BuB,YAAY,EAAC,qBAAqB;IAClCC,aAAa,EAAC,OAAO;IACrBC,yBAAyB,EAAC,OAAO;IACjCC,IAAI,EAAC;EAAO,GACZjE,oDAAA;IAAGkE,SAAS,EAAC;EAAc,GAAC,aACb,EAAC5E,WACb,CAAC,EAEJU,oDAAA;IACI;IACAmE,QAAQ,EAAEV,QAAS;IACnBW,WAAW,EAAE/B;EAAS,GAGtBrC,oDAAA,CAACS,gEAAa;IACVN,KAAK,EAAC,YAAY;IAClB4C,KAAK,EAAE9B,eAAgB;IACvBoD,QAAQ,EAAE/D,CAAC,IAAIsC,WAAW,CAACtC,CAAC,CAAE;IAC9BgE,OAAO,EAAE,CACL;MAAEvB,KAAK,EAAE,cAAc;MAAE5C,KAAK,EAAE;IAAe,CAAC,EAChD;MAAE4C,KAAK,EAAE,MAAM;MAAE5C,KAAK,EAAE;IAAY,CAAC,EACrC;MAAE4C,KAAK,EAAE,OAAO;MAAE5C,KAAK,EAAE;IAAc,CAAC,EACxC;MAAE4C,KAAK,EAAE,QAAQ;MAAE5C,KAAK,EAAE;IAAS,CAAC,CACtC;IACFoE,uBAAuB;EAAA,CAC1B,CAAC,EAEFvE,oDAAA;IACIkE,SAAS,EAAG1B,gBAAgB,KAAK,IAAI,GAAG,4BAA4B,GAAG;EAAI,GAC3ExC,oDAAA,iBAAQ,wBAA8B,CAAC,EACvCA,oDAAA,CAACgB,8EAAa;IACVkD,SAAS,EAAC,0BAA0B;IACpC/D,KAAK,EAAC,oBAAoB;IAC1BqE,aAAa,EAAC,MAAM;IACpBC,MAAM,EAAEnE,CAAC,IAAI2C,cAAc,CAAC3C,CAAC,CAAE;IAC/ByC,KAAK,EAAEpB;EAAS,CACnB,CAAC,EAEF3B,oDAAA;IACIkE,SAAS,EAAC;EAAyB,GAEnClE,oDAAA,CAACgB,8EAAa;IACVkD,SAAS,EAAC,0BAA0B;IACpC/D,KAAK,EAAC,eAAe;IACrBqE,aAAa,EAAC,MAAM;IACpBzB,KAAK,EAAExB,QAAS;IAChBkD,MAAM,EAAEnE,CAAC,IAAIuC,cAAc,CAACvC,CAAC;EAAE,CAClC,CAAC,EAEFN,oDAAA,CAACS,gEAAa;IACVyD,SAAS,EAAC,yBAAyB;IACnCM,aAAa,EAAC,MAAM;IACpBrE,KAAK,EAAC,OAAO;IACb4C,KAAK,EAAEtB,aAAc;IACrB4C,QAAQ,EAAE/D,CAAC,IAAI0C,mBAAmB,CAAC1C,CAAC,CAAE;IACtCgE,OAAO,EAAE,CACL;MAAEvB,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAS,CAAC,EAChC;MAAE4C,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAa,CAAC,EACpC;MAAE4C,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAS,CAAC,EAChC;MAAE4C,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAS,CAAC,EAChC;MAAE4C,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAe,CAAC,CACxC;IACFoE,uBAAuB;EAAA,CAC1B,CACC,CACA,CAAC,EAEXvE,oDAAA;IACIkE,SAAS,EAAGxB,SAAS,KAAK,IAAI,GAAG,2BAA2B,GAAG;EAAI,GACnE1C,oDAAA,iBAAQ,iBAAuB,CAAC,EAEhCA,oDAAA;IACIkE,SAAS,EAAC;EAAyB,GAEnClE,oDAAA,CAACgB,8EAAa;IACVkD,SAAS,EAAC,oBAAoB;IAC9B/D,KAAK,EAAC,aAAa;IACnBqE,aAAa,EAAC,MAAM;IACpBzB,KAAK,EAAEhB,UAAW;IAClB0C,MAAM,EAAEnE,CAAC,IAAI6C,YAAY,CAAC7C,CAAC;EAAE,CAChC,CAAC,EAEFN,oDAAA,CAACS,gEAAa;IACVyD,SAAS,EAAC,yBAAyB;IACnC/D,KAAK,EAAC,OAAO;IACbqE,aAAa,EAAC,MAAM;IACpBzB,KAAK,EAAEJ,eAAgB;IACvB0B,QAAQ,EAAE/D,CAAC,IAAI+C,iBAAiB,CAAC/C,CAAC,CAAE;IACpCgE,OAAO,EAAE,CACL;MAAEvB,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAS,CAAC,EAChC;MAAE4C,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAO,CAAC,EAC9B;MAAE4C,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAS,CAAC,EAChC;MAAE4C,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAS,CAAC,EAChC;MAAE4C,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAe,CAAC,CACxC;IACFoE,uBAAuB;EAAA,CAC1B,CACC,CACA,CAAC,EAEXvE,oDAAA;IACIkE,SAAS,EAAGzB,UAAU,KAAK,IAAI,GAAG,2BAA2B,GAAG;EAAI,GACpEzC,oDAAA,iBAAQ,kBAAwB,CAAC,EACjCA,oDAAA;IACIkE,SAAS,EAAC;EAAyB,GAEnClE,oDAAA,CAACgB,8EAAa;IACVkD,SAAS,EAAC,oBAAoB;IAC9B/D,KAAK,EAAC,eAAe;IACrBqE,aAAa,EAAC,MAAM;IACpBzB,KAAK,EAAExB,QAAS;IAChBkD,MAAM,EAAEnE,CAAC,IAAIuC,cAAc,CAACvC,CAAC;EAAE,CAClC,CAAC,EAEFN,oDAAA,CAACS,gEAAa;IACVyD,SAAS,EAAC,yBAAyB;IACnCM,aAAa,EAAC,MAAM;IACpBrE,KAAK,EAAC,OAAO;IACb4C,KAAK,EAAEtB,aAAc;IACrB4C,QAAQ,EAAE/D,CAAC,IAAI0C,mBAAmB,CAAC1C,CAAC,CAAE;IACtCgE,OAAO,EAAE,CACL;MAAEvB,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAS,CAAC,EAChC;MAAE4C,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAa,CAAC,EACpC;MAAE4C,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAS,CAAC,EAChC;MAAE4C,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAS,CAAC,EAChC;MAAE4C,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAe,CAAC,CACxC;IACFoE,uBAAuB;EAAA,CAC1B,CACC,CAAC,EAEPvE,oDAAA;IACIkE,SAAS,EAAC;EAAyB,GAEnClE,oDAAA,CAACgB,8EAAa;IACVkD,SAAS,EAAC,oBAAoB;IAC9B/D,KAAK,EAAC,eAAe;IACrBqE,aAAa,EAAC,MAAM;IACpBzB,KAAK,EAAEpB,QAAS;IAChB8C,MAAM,EAAEnE,CAAC,IAAI2C,cAAc,CAAC3C,CAAC;EAAE,CAClC,CAAC,EAEFN,oDAAA,CAACS,gEAAa;IACVyD,SAAS,EAAC,yBAAyB;IACnCM,aAAa,EAAC,MAAM;IACpBrE,KAAK,EAAC,OAAO;IACb4C,KAAK,EAAElB,aAAc;IACrBwC,QAAQ,EAAE/D,CAAC,IAAI4C,mBAAmB,CAAC5C,CAAC,CAAE;IACtCgE,OAAO,EAAE,CACL;MAAEvB,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAS,CAAC,EAChC;MAAE4C,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAa,CAAC,EACpC;MAAE4C,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAS,CAAC,EAChC;MAAE4C,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAS,CAAC,EAChC;MAAE4C,KAAK,EAAE,IAAI;MAAE5C,KAAK,EAAE;IAAe,CAAC,CACxC;IACFoE,uBAAuB;EAAA,CAC1B,CACC,CACA,CAAC,EAEXvE,oDAAA,CAACU,kEAAe;IACZP,KAAK,EAAC,iBAAiB;IACvBoD,OAAO,EAAEnB,gBAAiB;IAC1BiC,QAAQ,EAAEf;EAAS,CACtB,CAAC,EACFtD,oDAAA,CAACU,kEAAe;IACZP,KAAK,EAAC,gBAAgB;IACtBoD,OAAO,EAAErB,eAAgB;IACzBmC,QAAQ,EAAEb;EAAQ,CACrB,CAAC,EAEFxD,oDAAA,eACIA,oDAAA,CAACY,yDAAM;IAAC8D,OAAO,EAAC,WAAW;IAACrE,OAAO,EAAEkC;EAAa,GAAC,QAE3C,CAAC,EAETvC,oDAAA,CAACY,yDAAM;IACH8D,OAAO,EAAC,SAAS;IACjBC,IAAI,EAAC;EAAQ,GAChB,QAEO,CACN,CACJ,CACF,CAGd,CAAC;AAEX;AAAC;;;;;;;;;;;;;;;;;;AC1cmD;;;;;;;;;;;;ACApD,MAAMC,KAAK,GAAG;EACVC,YAAY,EAAE,cAAc;EAC5BC,aAAa,EAAE,eAAe;EAC9BC,UAAU,EAAE,YAAY;EACxBC,YAAY,EAAE,cAAc;EAC5BC,aAAa,EAAE,eAAe;EAC9BC,UAAU,EAAE,YAAY;EACxBC,eAAe,EAAE,iBAAiB;EAClCC,iBAAiB,EAAE,mBAAmB;EACtCC,iBAAiB,EAAE,mBAAmB;EACtCC,UAAU,EAAE,YAAY;EACxBC,aAAa,EAAE,eAAe;EAC9BC,WAAW,EAAE,aAAa;EAC1BC,eAAe,EAAE,iBAAiB;EAClCC,oBAAoB,EAAE,sBAAsB;EAC5CC,OAAO,EAAE,SAAS;EAClBC,eAAe,EAAE;AACrB,CAAC;AAED,+DAAehB,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnB+B;AACL;AACM;AACK;AACU;AAC7B;AAEtC,MAAM;EACFC,YAAY;EACZC,aAAa;EACbC,UAAU;EACVC,YAAY;EACZC,aAAa;EACbC,UAAU;EACVC,eAAe;EACfC,iBAAiB;EACjBC,iBAAiB;EACjBC,UAAU;EACVC,aAAa;EACbC,WAAW;EACXC,eAAe;EACfC,oBAAoB;EACpBC,OAAO;EACPC;AACJ,CAAC,GAAGhB,wDAAK;AAEF,SAASsB,cAAcA,CAAA,EAAG;EAC7B,CAAC;IAAEC;EAAS,CAAC,KAAK;IACd;IACA;IACA;IACA;IACAA,QAAQ,CAACC,QAAQ,CAACJ,uDAAS,CAAC,CAACH,WAAW,CAACQ,iBAAiB,CAAC;IAE3D,OAAOC,OAAO;EAClB,CAAC;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,SAASC,eAAeA,CAACC,KAAK,EAAE;EACnChH,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClCD,OAAO,CAACC,GAAG,CAAC+G,KAAK,CAAC;EAClBhH,OAAO,CAACC,GAAG,CAAC+G,KAAK,CAACA,KAAK,CAACC,QAAQ,CAAC;EAEjC,OAAO;IACH9B,IAAI,EAAEE,YAAY;IAClBzF,OAAO,EAAEoH,KAAK,CAACA,KAAK,CAACC,QAAQ;IAC7B,GAAGD;EACP,CAAC;AACL;AAEO,SAASE,YAAYA,CAACD,QAAQ,EAAEE,eAAe,EAAEC,OAAO,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,aAAa,EAAEC,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAE;EAChI1H,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;EACtD;EACAD,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAGgH,QAAQ,CAAC;EAChD;EACA;;EAEA,OAAO;IACH9B,IAAI,EAAEc,eAAe;IACrBrG,OAAO,EAAEqH,QAAQ;IACjBD,KAAK,EAAE;MACHC,QAAQ;MACRE,eAAe;MACfC,OAAO;MACPO,YAAY,EAAE,OAAO;MACrBN,UAAU;MACVC,gBAAgB;MAChBC,aAAa;MACbC,IAAI;MACJC,OAAO;MACPC;IACJ;EACJ,CAAC;AACL;AAEO,MAAME,iBAAiB,GAC1BA,CAAA,KACI,OAAO;EAAEC,MAAM;EAAEjB,QAAQ;EAAED;AAAS,CAAC,KAAK;EAEtC,MAAM;IAAEM,QAAQ;IAAEE,eAAe;IAAEC,OAAO;IAAEC,UAAU;IAAEC,gBAAgB;IAAEC,aAAa;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGG,MAAM,CAACC,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC;EAC/I,MAAMC,SAAS,GAAGF,MAAM,CAACC,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC;EAC/C9H,OAAO,CAACC,GAAG,CAAC8H,SAAS,CAAC;EACtB,MAAMC,QAAQ,GAAG;IACbC,MAAM,EAAE;MACJC,EAAE,EAAEjB,QAAQ;MACZE,eAAe,EAAEA,eAAe;MAChCC,OAAO,EAAEA,OAAO;MAChBC,UAAU,EAAEA,UAAU;MACtBC,gBAAgB,EAAEA,gBAAgB;MAClCC,aAAa,EAAEA;IACnB,CAAC;IACDC,IAAI,EAAE,CAAC,GAAGA,IAAI,CAAC;IACfC,OAAO,EAAE,CAAC,GAAGA,OAAO,CAAC;IACrBC,KAAK,EAAE,CAAC,GAAGA,KAAK;EACpB,CAAC;EAED1H,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpCD,OAAO,CAACC,GAAG,CAAC+H,QAAQ,CAAC;EAErB,IAAI;IACA,MAAMG,WAAW,GAAG,MAAMxB,QAAQ,CAC7BC,QAAQ,CAACJ,uDAAS,CAAC,CACnB4B,gBAAgB,CACb,mBAAmB,EACnB,OAAO,EACPJ,QACJ,CAAC;IAELpB,QAAQ,CAACyB,aAAa,CAACF,WAAW,CAACD,EAAE,CAAC;IAEtC,OAAOC,WAAW,CAACD,EAAE;EAEzB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZtI,OAAO,CAACC,GAAG,CAAC,0CAA0C,GAAGqI,KAAK,CAAC;EACnE;EACAtI,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;AACzD,CAAC;AAGF,MAAMsI,iBAAiB,GACzB3I,OAAO,IACJ,CAAC;EAAEiI,MAAM;EAAElB;AAAS,CAAC,KAAK;EAEtB,MAAMoB,SAAS,GAAGF,MAAM,CAACC,QAAQ,CAAClI,OAAO,EAAE,OAAO,CAAC;EACnDI,OAAO,CAACC,GAAG,CAAC8H,SAAS,CAAC;EACtB,MAAM;IACFd,QAAQ;IACRE,eAAe;IACfC,OAAO;IACPC,UAAU;IACVC,gBAAgB;IAChBC,aAAa;IACbC,IAAI;IACJC,OAAO;IACPC;EACJ,CAAC,GAAGG,MAAM,CAACC,QAAQ,CAAClI,OAAO,EAAE,OAAO,CAAC;;EAErC;EACA,IAAI4I,YAAY,GAAGhB,IAAI,CAClBiB,MAAM,CAAEC,GAAG,IACRA,GAAG,CAACC,MAAM,KAAK,GACnB,CAAC;;EAEL;EACA,IAAIC,eAAe,GAAGnB,OAAO,CACxBgB,MAAM,CAAEI,MAAM,IACXA,MAAM,CAACC,SAAS,KAAK,GACzB,CAAC;;EAEL;EACA,IAAIC,aAAa,GAAGrB,KAAK,CACpBe,MAAM,CAAEO,IAAI,IACTA,IAAI,CAACL,MAAM,KAAK,GAAG,IAAIK,IAAI,CAACF,SAAS,KAAK,GAC9C,CAAC;EAEL,MAAMG,YAAY,GAAG;IACjBf,EAAE,EAAEtI,OAAO;IACXqI,MAAM,EAAE;MACJC,EAAE,EAAEjB,QAAQ;MACZE,eAAe,EAAEA,eAAe;MAChCC,OAAO,EAAEA,OAAO;MAChBC,UAAU,EAAEA,UAAU;MACtBC,gBAAgB,EAAEA,gBAAgB;MAClCC,aAAa,EAAEA;IACnB,CAAC;IACDC,IAAI,EAAE,CAAC,GAAGgB,YAAY,CAAC;IACvBf,OAAO,EAAE,CAAC,GAAGmB,eAAe,CAAC;IAC7BlB,KAAK,EAAE,CAAC,GAAGqB,aAAa;EAC5B,CAAC;EAED/I,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpCD,OAAO,CAACC,GAAG,CAACgJ,YAAY,CAAC;;EAGzB;AACZ;AACA;AACA;EACYtC,QAAQ,CACHC,QAAQ,CAACJ,uDAAS,CAAC,CACnB0C,gBAAgB,CACb,mBAAmB,EACnB,OAAO,EACPjC,QAAQ,EACRgC,YACJ,CAAC;AACT,CAAC;AAEF,MAAME,iBAAiB,GACzBvJ,OAAO,IACJ,OAAO;EAAEiI,MAAM;EAAEjB,QAAQ;EAAED;AAAS,CAAC,KAAK;EACtC3G,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAE1C,IAAI;IACA,MAAMmJ,kBAAkB,GAAG,MAAMzC,QAAQ,CACpCC,QAAQ,CAACJ,uDAAS,CAAC,CACnB6C,kBAAkB,CACf,mBAAmB,EACnB,OAAO,EACPzJ,OACJ,CAAC;IAELgH,QAAQ,CAAC;MACLzB,IAAI,EAAEK,YAAY;MAClB5F;IACJ,CAAC,CAAC;EACN,CAAC,CAAC,OAAO0I,KAAK,EAAE;IACZtI,OAAO,CAACC,GAAG,CAAC,0CAA0C,GAAGqI,KAAK,CAAC;EACnE;EACAtI,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;AACzD,CAAC;AAEF,MAAMqJ,oBAAoB,GAC5BC,aAAa,IACV,CAAC;EAAE3C,QAAQ;EAAED;AAAS,CAAC,KAAK;EACxB6C,MAAM,CAACC,IAAI,CAACF,aAAa,CAAC,CAACG,OAAO,CAACC,GAAG,IAAI;IACtC,MAAMC,cAAc,GAAGL,aAAa,CAACI,GAAG,CAAC,CAAC1C,QAAQ;IAClDjH,OAAO,CAACC,GAAG,CAAC2J,cAAc,CAAC;IAC3BhD,QAAQ,CAACuC,iBAAiB,CAACI,aAAa,CAACI,GAAG,CAAC,CAAC1C,QAAQ,CAAC;EAC3D,CAAC,CAAC;AACN,CAAC;AAEF,MAAM4C,sBAAsB,GAC9BC,eAAe,IACZ,CAAC;EAAElD,QAAQ;EAAED;AAAS,CAAC,KAAK;EACxB6C,MAAM,CAACC,IAAI,CAACK,eAAe,CAAC,CAACJ,OAAO,CAACC,GAAG,IAAI;IACxC,MAAMI,qBAAqB,GAAGD,eAAe,CAACH,GAAG,CAAC,CAACK,iBAAiB;IACpE,MAAMC,UAAU,GAAGtD,QAAQ,CAACkB,MAAM,CAACpB,0DAAgB,CAAC,CAACyD,QAAQ,CAACH,qBAAqB,CAAC;IACpF/J,OAAO,CAACC,GAAG,CAACgK,UAAU,CAAC;IACvB,IAAIA,UAAU,EAAE;MACZrD,QAAQ,CAACuD,eAAe,CAACL,eAAe,CAACH,GAAG,CAAC,CAAC1C,QAAQ,EAAE,mBAAmB,CAAC;IAChF,CAAC,MAAM;MACHL,QAAQ,CAACuD,eAAe,CAACL,eAAe,CAACH,GAAG,CAAC,CAAC1C,QAAQ,EAAE,mBAAmB,CAAC;MAC5EL,QAAQ,CAACwD,eAAe,CAACN,eAAe,CAACH,GAAG,CAAC,CAAC1C,QAAQ,EAAE,cAAc,EAAE,SAAS,CAAC;IACtF;EACJ,CAAC,CAAC;AACN,CAAC;AAEF,MAAMoD,SAAS,GAClBA,CACIxK,QAAQ,EACRyK,SAAS,EACTC,WAAW,KAGX,OAAO;EAAE3D;AAAS,CAAC,KAAK;EACpB,MAAMA,QAAQ,CAAC;IACXzB,IAAI,EAAEG,aAAa;IACnBzF,QAAQ;IACRyK,SAAS;IACTC;EACJ,CAAC,CAAC;AACN,CAAC;AAEF,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACxB,OAAO;IACHrF,IAAI,EAAEI;EACV,CAAC;AACL,CAAC;AAEM,MAAMkF,YAAY,GAEjB5K,QAAQ,IAER,OAAO;EAAE+G;AAAS,CAAC,KAAK;EACpB5G,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACrC,MAAM2G,QAAQ,CAAC;IACXzB,IAAI,EAAEM,aAAa;IACnB5F;EACJ,CAAC,CAAC;AAEN,CAAC;AAEF,MAAM6K,SAAS,GAAGA,CAAA,KAAM;EAC3B,OAAO;IACHvF,IAAI,EAAEO;EACV,CAAC;AACL,CAAC;AAEM,MAAM2C,aAAa,GAAIzI,OAAO,IAAK;EACtCI,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxC,OAAO;IACHkF,IAAI,EAAEQ,eAAe;IACrB/F,OAAO,EAAE,GAAG;IACZ+K,UAAU,EAAEC,MAAM,CAAChL,OAAO;EAC9B,CAAC;AACL,CAAC;AAEM,MAAMwK,eAAe,GAAGA,CAACxK,OAAO,EAAEiL,SAAS,EAAEtH,KAAK,KAAK;EAC1DvD,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxC,OAAO;IACHkF,IAAI,EAAES,iBAAiB;IACvBhG,OAAO,EAAEA,OAAO;IAChBiL,SAAS;IACTtH;EACJ,CAAC;AACL,CAAC;AAEM,MAAM4G,eAAe,GAAGA,CAACvK,OAAO,EAAEiL,SAAS,KAAK;EACnD7K,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxC,OAAO;IACHkF,IAAI,EAAEU,iBAAiB;IACvBjG,OAAO,EAAEA,OAAO;IAChBiL;EACJ,CAAC;AACL,CAAC;AAEM,MAAMC,SAAS,GAAGA,CAACC,KAAK,EAAEF,SAAS,EAAEtH,KAAK,KAAK;EAElDvD,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EAClC,OAAO;IACHkF,IAAI,EAAEW,UAAU;IAChBiF,KAAK;IACLF,SAAS;IACTtH;EACJ,CAAC;AACL,CAAC;AAEM,MAAMyH,YAAY,GAAGA,CAACnL,QAAQ,EAAEgL,SAAS,EAAEtH,KAAK,KAAK;EAExDvD,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACrC,OAAO;IACHkF,IAAI,EAAEY,aAAa;IACnBlG,QAAQ;IACRgL,SAAS;IACTtH;EACJ,CAAC;AACL,CAAC;AAEM,MAAM0H,UAAU,GAAGA,CAACrL,OAAO,EAAEsL,MAAM,EAAEL,SAAS,EAAEtH,KAAK,KAAK;EAC7DvD,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACnC,OAAO;IACHkF,IAAI,EAAEa,WAAW;IACjBpG,OAAO;IACPsL,MAAM;IACNL,SAAS;IACTtH;EACJ,CAAC;AACL,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,MAAM4H,iBAAiB,GAC1BA,CACIvL,OAAO,EACPwL,SAAS,EACTC,YAAY,EACZC,UAAU,KAGV,OAAO;EAAE1E;AAAS,CAAC,KAAK;EACpB5G,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAE9B,MAAM2G,QAAQ,CAAC;IACXzB,IAAI,EAAEiB,eAAe;IACrBxG,OAAO,EAAEA,OAAO;IAChB4H,IAAI,EAAE4D,SAAS;IACf3D,OAAO,EAAE4D,YAAY;IACrB3D,KAAK,EAAE4D;EACX,CAAC,CAAC;AACN,CAAC;;AAGT;AACO,SAASC,gBAAgBA,CAACpD,WAAW,EAAE;EAC1CnI,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;EAC1D;EACA;EACA;EACA;;EAEA,OAAO;IACHkF,IAAI,EAAEe,oBAAoB;IAC1BiC;IACA;IACA;IACA;EACJ,CAAC;AACL;;AAEA,MAAMtB,iBAAiB,GAAG,CACtB;EACI2E,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,mBAAmB;EACzBC,OAAO,EAAE;EACT;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC,CAEJ;;;;;;;;;;;AC1aD,MAAMC,UAAU,GAAG,sBAAsB;AACzC,+DAAeA,UAAU;;;;;;;;;;;;;;;;;;;;;ACDoC;AAE7B;AACS;AACJ;AACI;AACJ;;AAErC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO,MAAMxM,KAAK,GAAGyM,iEAAgB,CAACD,kDAAU,EAAE;EAC9CG,OAAO;EACPC,SAAS;EACTC,OAAO;EACPC,SAASA,yCAAAA;AACb,CAAC,CAAC;AAEFJ,yDAAQ,CAAC1M,KAAK,CAAC;;AAEf;;;;;;;;;;;;;ACzBmC;AAKjB;AAElB,MAAM;EACFkG,YAAY;EACZC,aAAa;EACbC,UAAU;EACVC,YAAY;EACZC,aAAa;EACbC,UAAU;EACVC,eAAe;EACfC,iBAAiB;EACjBC,iBAAiB;EACjBC,UAAU;EACVC,aAAa;EACbC,WAAW;EACXC,eAAe;EACfC,oBAAoB;EACpBC,OAAO;EACPC;AACJ,CAAC,GAAGhB,qDAAK;AAET,MAAM4B,KAAK,GAAGA,CACVqF,KAAK,GAAG;EACJrF,KAAK,EAAE,CAAC;AACZ,CAAC,EAEDsF,MAAM,KAAK;EAEXtM,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAGsM,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,CAAC;EAC7DrM,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGqM,MAAM,CAACnH,IAAI,CAAC;EAElD,QAAQmH,MAAM,CAACnH,IAAI;IACf,KAAKE,YAAY;MACbrF,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtCD,OAAO,CAACC,GAAG,CAACqM,MAAM,CAACtF,KAAK,CAAC;MAEzB,OAAO;QACHA,KAAK,EAAE;UACH,GAAGsF,MAAM,CAACtF;QACd;MACJ,CAAC;IAEL,KAAKrB,eAAe;MAChB3F,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C,MAAMwM,cAAc,GAAG;QACnB,GAAGJ,KAAK;QACRpF,QAAQ,EAAEqF,MAAM,CAAC3B;MACrB,CAAC;MACD3K,OAAO,CAACC,GAAG,CAACwM,cAAc,CAAC;MAE3B,OAAO;QACHzF,KAAK,EAAEyF;MACX,CAAC;IAEL,KAAK7G,iBAAiB;MAClB5F,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C,MAAMgJ,YAAY,GAAG;QACjB,GAAGoD,KAAK;QACR,CAACC,MAAM,CAACzB,SAAS,GAAGyB,MAAM,CAAC/I;MAC/B,CAAC;MACDvD,OAAO,CAACC,GAAG,CAACgJ,YAAY,CAAC;MAEzB,OAAO;QACHjC,KAAK,EAAEiC;MACX,CAAC;IAEL,KAAKpD,iBAAiB;MAClB,MAAM6G,gBAAgB,GAAG;QAAE,GAAGL;MAAM,CAAC;MACrC;MACA,OAAOK,gBAAgB,CAACJ,MAAM,CAACzB,SAAS,CAAC;MAEzC,OAAO;QACH7D,KAAK,EAAE0F;MACX,CAAC;IAEL,KAAKpH,aAAa;MACdtF,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC,IAAI0M,iBAAiB,GAAG;QAAE,GAAGN,KAAK,CAACrF;MAAM,CAAC;;MAE1C;AACZ;AACA;MACY,IAAI4F,gBAAgB,GAAG,EAAE;MACzBD,iBAAiB,CAAClF,OAAO,CAACiC,OAAO,CAAEb,MAAM,IAAK;QAC1C,IAAIA,MAAM,CAACC,SAAS,GAAGwD,MAAM,CAACzM,QAAQ,EAAE;UACpC+M,gBAAgB,CAACC,IAAI,CAAChE,MAAM,CAAC;QACjC,CAAC,MAAM;UACH,IAAIyB,SAAS,GAAG;YACZrD,QAAQ,EAAE4B,MAAM,CAAC5B,QAAQ;YACzB6B,SAAS,EAAE8B,MAAM,CAAChH,MAAM,CAACiF,MAAM,CAACC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC/CgE,WAAW,EAAEjE,MAAM,CAACiE,WAAW;YAC/BC,UAAU,EAAElE,MAAM,CAACkE,UAAU;YAC7BC,OAAO,EAAEnE,MAAM,CAACmE;UACpB,CAAC;UACDJ,gBAAgB,CAACC,IAAI,CAACvC,SAAS,CAAC;QACpC;MACJ,CAAC,CAAC;MACFsC,gBAAgB,CAACC,IAAI,CAACP,MAAM,CAAChC,SAAS,CAAC;MACvC,IAAI2C,aAAa,GAAGb,iDAAS,CAAC,SAAS,EAAEQ,gBAAgB,CAAC;;MAE1D;AACZ;AACA;MACY,IAAIM,cAAc,GAAG,EAAE;MACvBP,iBAAiB,CAACjF,KAAK,CAACgC,OAAO,CAAEV,IAAI,IAAK;QACtC,IAAIA,IAAI,CAACF,SAAS,GAAGwD,MAAM,CAACzM,QAAQ,EAAE;UAClCqN,cAAc,CAACL,IAAI,CAAC7D,IAAI,CAAC;QAC7B,CAAC,MAAM;UAEH,IAAImE,WAAW,GAAGvC,MAAM,CAAChH,MAAM,CAACoF,IAAI,CAACF,SAAS,CAAC,GAAG,CAAC,CAAC;UACpD,IAAIsE,YAAY,GAAGlB,sDAAc,CAACiB,WAAW,CAAC;UAC9C,IAAIE,OAAO,GAAG;YACVpG,QAAQ,EAAE+B,IAAI,CAAC/B,QAAQ;YACvB6B,SAAS,EAAEqE,WAAW;YACtBxE,MAAM,EAAEK,IAAI,CAACL,MAAM;YACnB2E,OAAO,EAAEF,YAAY,GAAGpE,IAAI,CAACL,MAAM;YACnCoE,UAAU,EAAE/D,IAAI,CAAC+D,UAAU;YAC3BC,OAAO,EAAEhE,IAAI,CAACgE,OAAO;YACrBO,OAAO,EAAEvE,IAAI,CAACuE;UAClB,CAAC;UACDL,cAAc,CAACL,IAAI,CAACQ,OAAO,CAAC;QAChC;MACJ,CAAC,CAAC;MAEF,IAAIG,iBAAiB,GAAG,CAAC,GAAGN,cAAc,EAAE,GAAGZ,MAAM,CAAC/B,WAAW,CAAC;MAClE,IAAIkD,WAAW,GAAGrB,iDAAS,CAAC,OAAO,EAAEoB,iBAAiB,CAAC;MAEvD,IAAIE,sBAAsB,GAC1B;QACI,GAAGf,iBAAiB;QACpBnF,IAAI,EAAE,CAAC,GAAGmF,iBAAiB,CAACnF,IAAI,CAAC;QACjCC,OAAO,EAAE,CAAC,GAAGwF,aAAa,CAAC;QAC3BvF,KAAK,EAAE,CAAC,GAAG+F,WAAW;MAC1B,CAAC;MAEDzN,OAAO,CAACC,GAAG,CAACyN,sBAAsB,CAAC;MACnC,OAAOA,sBAAsB;IAEjC,KAAKnI,UAAU;IAEf,KAAKE,aAAa;MACdzF,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC,IAAI0N,iBAAiB,GAAG;QAAE,GAAGtB,KAAK,CAACrF;MAAM,CAAC;;MAE1C;AACZ;AACA;MACY,IAAI4F,gBAAgB,GAAG,EAAE;MACzBe,iBAAiB,CAAClG,OAAO,CAACiC,OAAO,CAAEb,MAAM,IAAK;QAC1C,IAAIA,MAAM,CAACC,SAAS,GAAGwD,MAAM,CAACzM,QAAQ,EAAE;UACpC+M,gBAAgB,CAACC,IAAI,CAAChE,MAAM,CAAC;QACjC,CAAC,MAAM,IAAIA,MAAM,CAACC,SAAS,GAAGwD,MAAM,CAACzM,QAAQ,EAAE;UAC3C,IAAIyK,SAAS,GAAG;YACZrD,QAAQ,EAAE4B,MAAM,CAAC5B,QAAQ;YACzB6B,SAAS,EAAE8B,MAAM,CAAChH,MAAM,CAACiF,MAAM,CAACC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC/CgE,WAAW,EAAEjE,MAAM,CAACiE,WAAW;YAC/BC,UAAU,EAAElE,MAAM,CAACkE,UAAU;YAC7BC,OAAO,EAAEnE,MAAM,CAACmE;UACpB,CAAC;UACDJ,gBAAgB,CAACC,IAAI,CAACvC,SAAS,CAAC;QACpC;MACJ,CAAC,CAAC;MACF;MACA;;MAEA;AACZ;AACA;MACY,IAAI4C,cAAc,GAAG,EAAE;MACvBS,iBAAiB,CAACjG,KAAK,CAACgC,OAAO,CAAEV,IAAI,IAAK;QACtC,IAAIA,IAAI,CAACF,SAAS,GAAGwD,MAAM,CAACzM,QAAQ,EAAE;UAClCqN,cAAc,CAACL,IAAI,CAAC7D,IAAI,CAAC;QAC7B,CAAC,MAAM,IAAIA,IAAI,CAACF,SAAS,GAAGwD,MAAM,CAACzM,QAAQ,EAAE;UACzC,IAAIsN,WAAW,GAAGvC,MAAM,CAAChH,MAAM,CAACoF,IAAI,CAACF,SAAS,CAAC,GAAG,CAAC,CAAC;UACpD,IAAIsE,YAAY,GAAGlB,sDAAc,CAACiB,WAAW,CAAC;UAC9C,IAAIE,OAAO,GAAG;YACVpG,QAAQ,EAAE+B,IAAI,CAAC/B,QAAQ;YACvB6B,SAAS,EAAEqE,WAAW;YACtBxE,MAAM,EAAEK,IAAI,CAACL,MAAM;YACnB2E,OAAO,EAAEF,YAAY,GAAGpE,IAAI,CAACL,MAAM;YACnCoE,UAAU,EAAE/D,IAAI,CAAC+D,UAAU;YAC3BC,OAAO,EAAEhE,IAAI,CAACgE,OAAO;YACrBO,OAAO,EAAEvE,IAAI,CAACuE;UAClB,CAAC;UACDL,cAAc,CAACL,IAAI,CAACQ,OAAO,CAAC;QAChC;MACJ,CAAC,CAAC;;MAEF;MACA;;MAEA,IAAIK,sBAAsB,GAC1B;QACI,GAAGC,iBAAiB;QACpBnG,IAAI,EAAE,CAAC,GAAGmG,iBAAiB,CAACnG,IAAI,CAAC;QACjCC,OAAO,EAAE,CAAC,GAAGmF,gBAAgB,CAAC;QAC9BlF,KAAK,EAAE,CAAC,GAAGwF,cAAc;MAC7B,CAAC;MAEDlN,OAAO,CAACC,GAAG,CAACyN,sBAAsB,CAAC;MACnC,OAAOA,sBAAsB;IAEjC,KAAKhI,UAAU;MACX,OAAO2G,KAAK;IAEhB,KAAKvG,UAAU;MACX9F,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC,IAAI2N,YAAY,GAAG;QAAE,GAAGvB,KAAK,CAACrF;MAAM,CAAC;MACrC,IAAI6G,cAAc,GAAGtB,IAAI,CAACuB,KAAK,CAAC,KAAK,GAAGxB,MAAM,CAACzB,SAAS,GAAG,OAAO,GAAGyB,MAAM,CAAC/I,KAAK,GAAG,IAAI,CAAC;MACzF,IAAIwK,WAAW,GAAG5B,mDAAW,CAACyB,YAAY,CAACpG,IAAI,EAAE,QAAQ,EAAE8E,MAAM,CAACvB,KAAK,EAAE8C,cAAc,CAAC;MAExF,IAAIG,uBAAuB,GAC3B;QACI,GAAGJ,YAAY;QACfpG,IAAI,EAAE,CAAC,GAAGuG,WAAW,CAAC;QACtBtG,OAAO,EAAE,CAAC,GAAGmG,YAAY,CAACnG,OAAO,CAAC;QAClCC,KAAK,EAAE,CAAC,GAAGkG,YAAY,CAAClG,KAAK;MACjC,CAAC;MACD,OAAO;QACHV,KAAK,EAAEgH;MACX,CAAC;IAEL,KAAKjI,aAAa;MACd/F,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MAEvC,IAAIgO,gBAAgB,GAAG,IAAI,GAAG3B,MAAM,CAAC/I,KAAK,GAAG,GAAG;MAEhD,IAAI+I,MAAM,CAACzB,SAAS,KAAK,YAAY,EAAE;QACnCoD,gBAAgB,GAAG1B,IAAI,CAACC,SAAS,CAACF,MAAM,CAAC/I,KAAK,CAAC;MACnD;MAEAvD,OAAO,CAACC,GAAG,CAACgO,gBAAgB,CAAC;MAC7B,IAAIC,eAAe,GAAG;QAAE,GAAG7B,KAAK,CAACrF;MAAM,CAAC;MACxC,IAAImH,iBAAiB,GAAG5B,IAAI,CAACuB,KAAK,CAAC,KAAK,GAAGxB,MAAM,CAACzB,SAAS,GAAG,KAAK,GAAGoD,gBAAgB,GAAG,GAAG,CAAC;MAC7F,IAAIG,cAAc,GAAGjC,mDAAW,CAAC+B,eAAe,CAACzG,OAAO,EAAE,WAAW,EAAE6E,MAAM,CAACzM,QAAQ,EAAEsO,iBAAiB,CAAC;MAE1GnO,OAAO,CAACC,GAAG,CAACkO,iBAAiB,CAAC;MAC9BnO,OAAO,CAACC,GAAG,CAACmO,cAAc,CAAC;MAE3B,IAAIC,0BAA0B,GAC9B;QACI,GAAGH,eAAe;QAClB1G,IAAI,EAAE,CAAC,GAAG0G,eAAe,CAAC1G,IAAI,CAAC;QAC/BC,OAAO,EAAE,CAAC,GAAG2G,cAAc,CAAC;QAC5B1G,KAAK,EAAE,CAAC,GAAGwG,eAAe,CAACxG,KAAK;MACpC,CAAC;MACD,OAAO;QAEHV,KAAK,EAAEqH;MACX,CAAC;IAEL,KAAKrI,WAAW;MACZhG,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC,IAAIqO,aAAa,GAAG;QAAE,GAAGjC;MAAM,CAAC;MAChCrM,OAAO,CAACC,GAAG,CAACoM,KAAK,CAAC;MAClBrM,OAAO,CAACC,GAAG,CAACqO,aAAa,CAAC;MAC1B,IAAIC,eAAe,GAAGhC,IAAI,CAACuB,KAAK,CAAC,KAAK,GAAGxB,MAAM,CAACzB,SAAS,GAAG,OAAO,GAAGyB,MAAM,CAAC/I,KAAK,GAAG,IAAI,CAAC;MAC1F,IAAIiL,YAAY,GAAGrC,mDAAW,CAACmC,aAAa,CAAC5G,KAAK,EAAE,SAAS,EAAE4E,MAAM,CAACpB,MAAM,EAAEqD,eAAe,CAAC;MAE9F,IAAIE,iBAAiB,GACrB;QACI,GAAGpC,KAAK;QACR7E,IAAI,EAAE,CAAC,GAAG8G,aAAa,CAAC9G,IAAI,CAAC;QAC7BC,OAAO,EAAE,CAAC,GAAG6G,aAAa,CAAC7G,OAAO,CAAC;QACnCC,KAAK,EAAE,CAAC,GAAG8G,YAAY;MAC3B,CAAC;MACDxO,OAAO,CAACC,GAAG,CAACwO,iBAAiB,CAAC;MAC9B,OAAO;QACHzH,KAAK,EAAEyH;MACX,CAAC;IAEL,KAAKrI,eAAe;MAChBpG,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC,MAAMyO,iBAAiB,GAAG;QAAE,GAAGrC;MAAM,CAAC;MAEtC,IAAIsC,mBAAmB,GACvB;QACI,GAAGD,iBAAiB;QACpBlH,IAAI,EAAE,CAAC,GAAG8E,MAAM,CAAC9E,IAAI,CAAC;QACtBC,OAAO,EAAE,CAAC,GAAG6E,MAAM,CAAC7E,OAAO,CAAC;QAC5BC,KAAK,EAAE,CAAC,GAAG4E,MAAM,CAAC5E,KAAK;MAC3B,CAAC;MAED1H,OAAO,CAACC,GAAG,CAACyO,iBAAiB,CAAC;MAC9B1O,OAAO,CAACC,GAAG,CAAC0O,mBAAmB,CAAC;MAEhC,OAAO;QACH3H,KAAK,EAAE2H;MACX,CAAC;IAEL,KAAK1I,eAAe;MAChBjG,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChCD,OAAO,CAACC,GAAG,CAACoM,KAAK,CAAC;MAClBrM,OAAO,CAACC,GAAG,CAACqM,MAAM,CAACtF,KAAK,CAAC;MAEzB,OAAO;QACHA,KAAK,EAAE;UACH,GAAGqF,KAAK,CAACrF,KAAK;UACd,GAAGsF,MAAM,CAACtF;QACd;MACJ,CAAC;IAEL;MACI,OAAOqF,KAAK;EACpB;AACJ,CAAC;AAED,MAAMP,OAAO,GAAGA,CACZO,KAAK,GAAG;EACJuC,MAAM,EAAE,CAAC;AACb,CAAC,EACDtC,MAAM,KAAK;EACXtM,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAC3BD,OAAO,CAACC,GAAG,CAACoM,KAAK,CAAC;EAClBrM,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGqM,MAAM,CAAC1M,OAAO,CAAC;EACpDI,OAAO,CAACC,GAAG,CAACqM,MAAM,CAAC;EAEnB,IAAIuC,QAAQ,GAAGvC,MAAM,CAAC1M,OAAO;EAC7BI,OAAO,CAACC,GAAG,CAACoM,KAAK,CAACuC,MAAM,CAACC,QAAQ,CAAC,CAAC;EACnC,IAAIC,aAAa,GAAG9H,KAAK,CAACqF,KAAK,CAACuC,MAAM,CAACC,QAAQ,CAAC,EAAEvC,MAAM,CAAC;EACzD,IAAIyC,aAAa,GACjB;IACI,CAACzC,MAAM,CAAC1M,OAAO,GACXkP,aAAa,CAAC9H;EACtB,CAAC;EAED,IAAIuF,IAAI,CAACC,SAAS,CAACsC,aAAa,CAAC9H,KAAK,CAAC,KAAK,IAAI,EAAE;IAC9C,OAAOqF,KAAK;EAChB;EACArM,OAAO,CAACC,GAAG,CAAC8O,aAAa,CAAC;EAE1B,MAAMC,cAAc,GAAG;IAAE,GAAG3C,KAAK,CAACuC;EAAO,CAAC;EAC1C;;EAEA,QAAQtC,MAAM,CAACnH,IAAI;IACf,KAAKQ,eAAe;MAChB3F,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MAEnD,MAAMgP,kBAAkB,GACxB;QACI,CAAC3C,MAAM,CAAC3B,UAAU,GACdmE,aAAa,CAAC9H;MACtB,CAAC;MACDhH,OAAO,CAACC,GAAG,CAACgP,kBAAkB,CAAC;MAE/B,MAAMC,mBAAmB,GAAG1F,MAAM,CAACC,IAAI,CAAC4C,KAAK,CAACuC,MAAM,CAAC,CAChDO,MAAM,CAAC,CAACC,GAAG,EAAEzF,GAAG,KAAK;QAClB3J,OAAO,CAACC,GAAG,CAACoM,KAAK,CAACuC,MAAM,CAACjF,GAAG,CAAC,CAAC;QAC9B,IAAI0C,KAAK,CAACuC,MAAM,CAACjF,GAAG,CAAC,CAAC1C,QAAQ,KAAKqF,MAAM,CAAC1M,OAAO,EAAE;UAC/CwP,GAAG,CAACzF,GAAG,CAAC,GAAG;YAAE,GAAG0C,KAAK,CAACuC,MAAM,CAACjF,GAAG;UAAE,CAAC;QACvC;QACA,OAAOyF,GAAG;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;MACV;MACA;MACA;MACA;MACApP,OAAO,CAACC,GAAG,CAACiP,mBAAmB,CAAC;MAEhC,OAAO;QACHN,MAAM,EAAE;UACJ,GAAGM,mBAAmB;UACtB,GAAGD;QACP;MACJ,CAAC;IAEL,KAAKzJ,YAAY;MACbxF,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MAEzC,MAAMoP,iBAAiB,GAAG7F,MAAM,CAACC,IAAI,CAAC4C,KAAK,CAACuC,MAAM,CAAC,CAC9CO,MAAM,CAAC,CAACC,GAAG,EAAEzF,GAAG,KAAK;QAClB3J,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAG0J,GAAG,CAAC;QACnC3J,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAG2K,MAAM,CAAC0B,MAAM,CAAC1M,OAAO,CAAC,CAAC;QAC5DI,OAAO,CAACC,GAAG,CAACmP,GAAG,CAAC;QAChB,IAAIzF,GAAG,KAAKiB,MAAM,CAAC0B,MAAM,CAAC1M,OAAO,CAAC,EAAE;UAChCwP,GAAG,CAACzF,GAAG,CAAC,GAAG;YACP,GAAG0C,KAAK,CAACuC,MAAM,CAACjF,GAAG,CAAC;YACpBnC,IAAI,EAAE,CAAC,GAAG6E,KAAK,CAACuC,MAAM,CAACjF,GAAG,CAAC,CAACnC,IAAI,CAAC;YACjCC,OAAO,EAAE,CAAC,GAAG4E,KAAK,CAACuC,MAAM,CAACjF,GAAG,CAAC,CAAClC,OAAO,CAAC;YACvCC,KAAK,EAAE,CAAC,GAAG2E,KAAK,CAACuC,MAAM,CAACjF,GAAG,CAAC,CAACjC,KAAK;UACtC,CAAC;QACL;QACA,OAAO0H,GAAG;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;MAEVpP,OAAO,CAACC,GAAG,CAACoP,iBAAiB,CAAC;MAC9B,OAAO;QACHT,MAAM,EAAE;UACJ,GAAGS;QACP;MACJ,CAAC;IAEL;MACIrP,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAChD,MAAMqP,oBAAoB,GAC1B;QACI,CAAChD,MAAM,CAAC1M,OAAO,GACXkP,aAAa,CAAC9H;MACtB,CAAC;MAED,OAAO;QACH4H,MAAM,EAAE;UACJ,GAAGI,cAAc;UACjB,GAAGM;QACP;MACJ,CAAC;EACT;;EAIA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;AACJ,CAAC;;AAED,+DAAexD,OAAO;;;;;;;;;;;;;;;;;;;;;ACxctB;AACA;AACA;AAC8C;AACF;AACa;AACf;;AAG1C;;AAEA,SAASyD,aAAaA,CAACC,YAAY,EAAE;EACjCA,YAAY,CAAC9F,OAAO,CAAEV,IAAI,IAAK;IAC3BA,IAAI,CAACsE,OAAO,GAAGpB,sDAAc,CAAClD,IAAI,CAACF,SAAS,CAAC,GAAGE,IAAI,CAACL,MAAM;IAC3D3I,OAAO,CAACC,GAAG,CAAC+I,IAAI,CAAC;EACrB,CAAC,CAAC;EACF,OAAO;IACHwG;EACJ,CAAC;AACL;AAEO,MAAM1H,QAAQ,GACjBA,CAAClI,OAAO,EAAE6P,YAAY,KAClB,OAAO;EAAE7I,QAAQ;EAAED;AAAS,CAAC,KAAK;EAC9B3G,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;EACrDD,OAAO,CAACC,GAAG,CAAC,4BAA4B,GAAGL,OAAO,CAAC;EACnDI,OAAO,CAACC,GAAG,CAAC,+BAA+B,GAAGwP,YAAY,CAAC;EAC3D;EACA,IAAI,CAACA,YAAY,IAAI7P,OAAO,IAAI,GAAG,EAAE;IACjCI,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjC;EACJ;EACA,IAAI;IACA,MAAMkI,WAAW,GACb,MAAMxB,QAAQ,CACT+I,aAAa,CAAClJ,uDAAS,CAAC,CACxBmJ,eAAe,CACZ,mBAAmB,EACnB,OAAO,EACP/P,OACJ,CAAC;IAET,MAAMoH,KAAK,GAAGmB,WAAW;IACzB,MAAMlB,QAAQ,GAAGD,KAAK,CAACkB,EAAE;IACzB,MAAMf,eAAe,GAAGH,KAAK,CAACiB,MAAM,CAACd,eAAe;IACpD,MAAMC,OAAO,GAAGJ,KAAK,CAACiB,MAAM,CAACb,OAAO;IACpC,MAAMC,UAAU,GAAGL,KAAK,CAACiB,MAAM,CAACZ,UAAU;IAC1C,MAAMC,gBAAgB,GAAGN,KAAK,CAACiB,MAAM,CAAC8E,UAAU;IAChD,MAAMxF,aAAa,GAAGP,KAAK,CAACiB,MAAM,CAAC+E,OAAO;IAC1C,MAAMxF,IAAI,GAAGR,KAAK,CAACQ,IAAI;IACvB,MAAMC,OAAO,GAAGT,KAAK,CAACS,OAAO;IAC7B8H,aAAa,CAACvI,KAAK,CAACU,KAAK,CAAC;IAC1B,MAAMA,KAAK,GAAGV,KAAK,CAACU,KAAK;IAEzBd,QAAQ,CAACM,YAAY,CAACD,QAAQ,EAAEE,eAAe,EAAEC,OAAO,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,aAAa,EAAEC,IAAI,EAAEC,OAAO,EAAEC,KAAK,CAAC;EAChI,CAAC,CAAC,OAAOY,KAAK,EAAE;IACZtI,OAAO,CAACC,GAAG,CAAC,0CAA0C,GAAGsM,IAAI,CAACC,SAAS,CAAClE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;EAC5F;EACAtI,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;AAEzD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AC5DgD;AACA;AAElD,SAAS6H,QAAQA,CAACuE,KAAK,EAAEzM,OAAO,EAAE6P,YAAY,EAAE;EAEnDzP,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGL,OAAO,CAAC;EAC7CI,OAAO,CAACC,GAAG,CAAC,iCAAiC,GAAGwP,YAAY,CAAC;EAC7DzP,OAAO,CAACC,GAAG,CAACoM,KAAK,CAAC;EAElB,IAAI,CAACA,KAAK,CAACuC,MAAM,CAACiB,cAAc,CAACjQ,OAAO,CAAC,EAAE;IACvCI,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,OAAO;MACHgH,QAAQ,EAAErH,OAAO;MACjBuH,eAAe,EAAE,EAAE;MACnBC,OAAO,EAAE,EAAE;MACXO,YAAY,EAAE,EAAE;MAChBN,UAAU,EAAE,EAAE;MACdC,gBAAgB,EAAE,EAAE;MACpBC,aAAa,EAAE,EAAE;MACjBC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE;IACX,CAAC;EACL;EAEA,OAAO2E,KAAK,CAACuC,MAAM,CAAChP,OAAO,CAAC;AAChC;AAEO,SAASkQ,SAASA,CAACzD,KAAK,EAAE;EAC7B,OAAOA,KAAK,CAACuC,MAAM;AAEvB;AAEO,SAASmB,oBAAoBA,CAAC1D,KAAK,EAAElF,eAAe,EAAE;EACzD,MAAMa,QAAQ,GAAGwB,MAAM,CAACC,IAAI,CAAC4C,KAAK,CAACuC,MAAM,CAAC,CACrCO,MAAM,CAAC,CAACC,GAAG,EAAEzF,GAAG,KAAK;IAClB,IAAI0C,KAAK,CAACuC,MAAM,CAACjF,GAAG,CAAC,EAAExC,eAAe,KAAKA,eAAe,EAAE;MACxDnH,OAAO,CAACC,GAAG,CAAC;QAAE,GAAGoM,KAAK,CAACuC,MAAM,CAACjF,GAAG,CAAC,EAAExC;MAAgB,CAAC,CAAC;MACtDiI,GAAG,CAACzF,GAAG,CAAC,GAAG;QAAE,GAAG0C,KAAK,CAACuC,MAAM,CAACjF,GAAG;MAAE,CAAC;IACvC;IACA,OAAOyF,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;EAEV,IAAIpH,QAAQ,CAACgI,MAAM,KAAK,CAAC,EAAE;IACvB,OAAO,KAAK;EAChB;EACA,OAAOxG,MAAM,CAACC,IAAI,CAACzB,QAAQ,CAAC;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASiI,kBAAkBA,CAAC5D,KAAK,EAAE;EACtCrM,OAAO,CAACC,GAAG,CAACoM,KAAK,CAACuC,MAAM,CAAC;EACzB,MAAM9E,eAAe,GAAGN,MAAM,CAACC,IAAI,CAAC4C,KAAK,CAACuC,MAAM,CAAC,CAC5CO,MAAM,CAAC,CAACC,GAAG,EAAEzF,GAAG,KAAK;IAClB,IAAI0C,KAAK,CAACuC,MAAM,CAACjF,GAAG,CAAC,CAACK,iBAAiB,EAAE;MACrCoF,GAAG,CAACzF,GAAG,CAAC,GAAG;QAAE,GAAG0C,KAAK,CAACuC,MAAM,CAACjF,GAAG;MAAE,CAAC;IACvC;IACA,OAAOyF,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,OAAOtF,eAAe;AAC1B;AAEO,SAASoG,gBAAgBA,CAAC7D,KAAK,EAAE;EACpC,MAAM9C,aAAa,GAAGC,MAAM,CAACC,IAAI,CAAC4C,KAAK,CAACuC,MAAM,CAAC,CAC1CO,MAAM,CAAC,CAACC,GAAG,EAAEzF,GAAG,KAAK;IAClB3J,OAAO,CAACC,GAAG,CAACoM,KAAK,CAACuC,MAAM,CAACjF,GAAG,CAAC,CAAChC,YAAY,CAAC;IAC3C,IAAI0E,KAAK,CAACuC,MAAM,CAACjF,GAAG,CAAC,CAAChC,YAAY,KAAK,SAAS,EAAE;MAC9CyH,GAAG,CAACzF,GAAG,CAAC,GAAG;QAAE,GAAG0C,KAAK,CAACuC,MAAM,CAACjF,GAAG;MAAE,CAAC;IACvC;IACA,OAAOyF,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,OAAO7F,aAAa;AACxB;AAEO,SAAS4G,gBAAgBA,CAAC9D,KAAK,EAAE;EACpC,MAAM9C,aAAa,GAAGC,MAAM,CAACC,IAAI,CAAC4C,KAAK,CAACuC,MAAM,CAAC,CAC1CO,MAAM,CAAC,CAACC,GAAG,EAAEzF,GAAG,KAAK;IAClB3J,OAAO,CAACC,GAAG,CAACoM,KAAK,CAACuC,MAAM,CAACjF,GAAG,CAAC,CAAChC,YAAY,CAAC;IAC3C,IAAI0E,KAAK,CAACuC,MAAM,CAACjF,GAAG,CAAC,CAAChC,YAAY,KAAK,KAAK,EAAE;MAC1CyH,GAAG,CAACzF,GAAG,CAAC,GAAG;QAAE,GAAG0C,KAAK,CAACuC,MAAM,CAACjF,GAAG;MAAE,CAAC;IACvC;IACA,OAAOyF,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,OAAO7F,aAAa;AACxB;AAEO,SAAS6G,eAAeA,CAAC/D,KAAK,EAAE,CAEvC;AAEO,MAAMgE,YAAY,GAAGT,uEAAsB;AAC9C;AACC/H,MAAM,IAAK,MAAM;EAEd,OAAOA,MAAM,CAACrB,uDAAS,CAAC,CAACmJ,eAAe,CACpC,mBAAmB,EACnB,OAAO,EACP,IACJ,CAAC;AACL,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxGN;AACA;AACA;AACA;AACA;AACmE;AACH;AACf;AACZ;AAGtB;AAgBgB;AAQE;AAqBP;;AAG1B;AACA;AACA;AAC6C;AACC;AAW7B;AACyB;AAC1C;AACuB;AAER,SAASsC,IAAIA,CAAC1S,KAAK,EAAE;EAEnC,MAAM2S,UAAU,GAAGX,sEAAa,CAAC;IAChC7M,SAAS,EAAE;EACZ,CAAC,CAAC;;EAEF;AACD;AACA;EACC,MAAM;IAAEqC;EAAgB,CAAC,GAAGwJ,4DAAW,CAACnR,wCAAU,CAAC;EACnD,MAAM;IAAEwI;EAAkB,CAAC,GAAG2I,4DAAW,CAACnR,wCAAU,CAAC;EACrD,MAAM;IAAE+S;EAAY,CAAC,GAAG5B,4DAAW,CAACnR,wCAAU,CAAC;EAC/C,MAAM;IAAEiL;EAAU,CAAC,GAAGkG,4DAAW,CAACnR,wCAAU,CAAC;EAC7C,MAAM;IAAEoL;EAAO,CAAC,GAAG+F,4DAAW,CAACnR,wCAAU,CAAC;EAC1C,MAAM;IAAEqL;EAAa,CAAC,GAAG8F,4DAAW,CAACnR,wCAAU,CAAC;EAChD,MAAM;IAAEsL;EAAU,CAAC,GAAG6F,4DAAW,CAACnR,wCAAU,CAAC;EAC7C,MAAM;IAAEgL;EAAgB,CAAC,GAAGmG,4DAAW,CAACnR,wCAAU,CAAC;EACnD,MAAM;IAAE+K;EAAgB,CAAC,GAAGoG,4DAAW,CAACnR,wCAAU,CAAC;EACnD,MAAM;IAAE0L;EAAU,CAAC,GAAGyF,4DAAW,CAACnR,wCAAU,CAAC;EAC7C,MAAM;IAAE4L;EAAa,CAAC,GAAGuF,4DAAW,CAACnR,wCAAU,CAAC;EAChD,MAAM;IAAE6L;EAAW,CAAC,GAAGsF,4DAAW,CAACnR,wCAAU,CAAC;EAC9C,MAAM;IAAEmJ;EAAkB,CAAC,GAAGgI,4DAAW,CAACnR,wCAAU,CAAC;EACrD,MAAM;IAAE+L;EAAkB,CAAC,GAAGoF,4DAAW,CAACnR,wCAAU,CAAC;EACrD,MAAM;IAAEyK;EAAuB,CAAC,GAAG0G,4DAAW,CAACnR,wCAAU,CAAC;EAC1D,MAAM;IAAEkK;EAAqB,CAAC,GAAGiH,4DAAW,CAACnR,wCAAU,CAAC;;EAExD;AACD;AACA;EACC,MAAM,CAACqQ,YAAY,EAAE2C,aAAa,CAAC,GAAG/T,4DAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgU,aAAa,EAAEC,gBAAgB,CAAC,GAAGjU,4DAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACkU,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGnU,4DAAQ,CAAC,CAAC,CAAC,CAAC;EAClE,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,4DAAQ,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACoU,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrU,4DAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACsU,cAAc,EAAEC,iBAAiB,CAAC,GAAGvU,4DAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACwU,aAAa,EAAEC,gBAAgB,CAAC,GAAGzU,4DAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAAC0U,aAAa,EAAEC,gBAAgB,CAAC,GAAG3U,4DAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAAC4U,MAAM,EAAEC,SAAS,CAAC,GAAG7U,4DAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAAC8U,WAAW,EAAEC,cAAc,CAAC,GAAG/U,4DAAQ,CAAC,KAAK,CAAC;EACrD;EACA,MAAM,CAACgV,UAAU,EAAEC,aAAa,CAAC,GAAGjV,4DAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACkV,OAAO,EAAEC,UAAU,CAAC,GAAGnV,4DAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACoV,SAAS,EAAEC,YAAY,CAAC,GAAGrV,4DAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACsV,2BAA2B,EAAEC,8BAA8B,CAAC,GAAGvV,4DAAQ,CAAC,KAAK,CAAC;EAErF,MAAMwV,aAAa,GAAGrD,0DAAM,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM;IAAEvJ,QAAQ;IAAEE;EAAgB,CAAC,GAAG5H,KAAK,CAACwN,UAAU;EAEtD/M,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGkH,eAAe,CAAC;;EAEnD;AACD;AACA;EACC/I,6DAAS,CAAC,MAAM;IACfwI,yDAAQ,CAAC,MAAM,CAAC,CAACP,WAAW,CAAC,CAC5B;MACCmF,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE,mBAAmB;MACzBC,OAAO,EAAE;IACV,CAAC,CACD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,MAAM;IAAE5B;EAAgB,CAAC,GAAGwG,0DAAS,CACnCzI,MAAM,IAAK;IACX,MAAM;MAAEoI;IAAmB,CAAC,GAAGpI,MAAM,CAACzI,wCAAU,CAAC;IACjD,OAAO;MACN0K,eAAe,EAAEmG,kBAAkB,CAAC;IACrC,CAAC;EACF,CAAC,CAAC;EAEH,IAAIzG,MAAM,CAACC,IAAI,CAACK,eAAe,CAAC,CAACkG,MAAM,GAAG,CAAC,EAAE;IAC5CnG,sBAAsB,CAACC,eAAe,CAAC;EACxC;EAEA,MAAM;IAAEP;EAAc,CAAC,GAAG+G,0DAAS,CACjCzI,MAAM,IAAK;IACX,MAAM;MAAEqI;IAAiB,CAAC,GAAGrI,MAAM,CAACzI,wCAAU,CAAC;IAC/C,OAAO;MACNmK,aAAa,EAAE2G,gBAAgB,CAAC;IACjC,CAAC;EACF,CAAC,CAAC;EAEH,MAAM4D,mBAAmB,GAAGtC,2DAAmB,CAAC,CAAC;EACjDxR,OAAO,CAACC,GAAG,CAAC6T,mBAAmB,CAAC;EAChC9T,OAAO,CAACC,GAAG,CAAC6J,eAAe,CAAC;EAC5B1L,6DAAS,CAAC,MAAM;IACf,IAAI0V,mBAAmB,EAAE;MACxBC,KAAK,CAAC,eAAe,CAAC;MACtB;AACH;AACA;MACG,IAAIvK,MAAM,CAACC,IAAI,CAACF,aAAa,CAAC,CAACyG,MAAM,GAAG,CAAC,EAAE;QAC1ChQ,OAAO,CAACC,GAAG,CAACsJ,aAAa,CAAC;QAC1BD,oBAAoB,CAACC,aAAa,CAAC;MACpC;;MAEA;AACH;AACA;MACG,IAAIvC,KAAK,CAACW,YAAY,IAAI,KAAK,EAAE;QAChC3H,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAG+G,KAAK,CAACC,QAAQ,CAAC;QACnD+M,kBAAkB,CAAChN,KAAK,CAACC,QAAQ,EAAE,cAAc,EAAE,EAAE,EAAE,MAAM,EAAE,OAAO,CAAC;QACvEjH,OAAO,CAACC,GAAG,CAAC+G,KAAK,CAAC;MACnB;IAED;EAED,CAAC,EAAE,CAAC8M,mBAAmB,EAAEhK,eAAe,CAAC,CAAC;EAE1C,MAAMmK,mBAAmB,GAAGA,CAAA,KAAM;IACjC,IAAI9M,eAAe,KAAK,EAAE,EAAE;MAC3B,OAAO,MAAM;IACd;IAEA,IAAIF,QAAQ,KAAK,GAAG,EAAE;MACrB,OAAO,KAAK;IACb;IAEA,IAAIwI,YAAY,EAAE;MACjB,OAAO,OAAO;IACf;IAEA,OAAO,OAAO;EACf,CAAC;EAED,MAAMyE,WAAW,GAAGA,CAAA,KAAM;IACzB,IAAI/M,eAAe,KAAK,EAAE,EAAE;MAC3B,OAAO,IAAI;IACZ;IACA,OAAO,KAAK;EACb,CAAC;EAED,MAAMgN,UAAU,GAAGD,WAAW,CAAC,CAAC;EAChC,MAAME,gBAAgB,GAAGH,mBAAmB,CAAC,CAAC;;EAE9C;AACD;AACA;EACC,MAAM;IACLjN,KAAK;IACLqN,WAAW;IACXC,wBAAwB;IACxBC,yBAAyB;IACzBC;EACD,CAAC,GAAGlE,0DAAS,CACXzI,MAAM,IAAK;IACX7H,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGgH,QAAQ,GAAG,YAAY,GAAGwI,YAAY,GAAG,sBAAsB,GAAGtI,eAAe,CAAC;IAC9G,MAAM;MAAEW,QAAQ;MAAEiI,oBAAoB;MAAE0E,oBAAoB;MAAEC,qBAAqB;MAAEC;IAAY,CAAC,GAAG9M,MAAM,CAACzI,wCAAU,CAAC;IACvH,MAAMwV,YAAY,GAAG,CAAC3N,QAAQ,EAAEwI,YAAY,CAAC;IAE7C,IAAItI,eAAe,KAAK,EAAE,EAAE;MAC3B,OAAO;QACNH,KAAK,EAAE,CAAC,CAAC;QACTqN,WAAW,EAAE,EAAE;QACfC,wBAAwB,EAAE,KAAK;QAC/BC,yBAAyB,EAAE,KAAK;QAChCC,gBAAgB,EAAE;MACnB,CAAC;IACF;IACA,MAAMK,aAAa,GAAGA,CAAC5N,QAAQ,EAAEwI,YAAY,EAAEtI,eAAe,KAAK;MAClE,IAAI2N,aAAa,GAAGhN,QAAQ,CAACb,QAAQ,EAAEwI,YAAY,CAAC;MACpDzP,OAAO,CAACC,GAAG,CAAC6U,aAAa,CAAC;MAC1B,IAAI7N,QAAQ,KAAK,GAAG,IAAI6N,aAAa,CAAC3N,eAAe,CAAC6I,MAAM,KAAK,CAAC,IAAI2D,2BAA2B,EAAE;QAClG,MAAMhJ,UAAU,GAAGoF,oBAAoB,CAAC5I,eAAe,CAAC;QACxD2N,aAAa,GAAGhN,QAAQ,CAAC6C,UAAU,EAAE8E,YAAY,CAAC;QAClDmE,8BAA8B,CAAC,KAAK,CAAC;QACrCrU,KAAK,CAACwV,aAAa,CAAC;UAAE9N,QAAQ,EAAErD,MAAM,CAACkR,aAAa,CAAC7N,QAAQ;QAAE,CAAC,CAAC;MAClE;MACA,OAAO6N,aAAa;IACrB,CAAC;IAED,MAAMpW,UAAU,GAAGmW,aAAa,CAAC5N,QAAQ,EAAEwI,YAAY,EAAEtI,eAAe,CAAC;IACzE,MAAMmN,wBAAwB,GAAGG,oBAAoB,CAAC,UAAU,EAAEG,YAAY,CAAC;IAC/E,MAAML,yBAAyB,GAAGG,qBAAqB,CAAC,UAAU,EAAEE,YAAY,CAAC;IACjF,MAAMJ,gBAAgB,GAAGG,WAAW,CAAC,UAAU,EAAEC,YAAY,CAAC;IAE9D,IAAIL,yBAAyB,EAAE;MAC9BnC,aAAa,CAAC,MAAM,KAAK,CAAC;IAC3B;;IAEA;IACA;IACA;IACA;;IAEA,OAAO;MACNpL,KAAK,EAAEtI,UAAU;MACjB2V,WAAW,EAAE3V,UAAU,CAACiJ,YAAY;MACpC2M,wBAAwB,EAAEA,wBAAwB;MAClDC,yBAAyB,EAAEA,yBAAyB;MACpDC,gBAAgB,EAAEA;IACnB,CAAC;EACF,CAAC,EACD,CACCvN,QAAQ,EACRwI,YAAY,EACZtI,eAAe,CAEjB,CAAC;EAED,SAAS6N,qBAAqBA,CAACC,eAAe,EAAEC,aAAa,EAAE;IAC9D,MAAMC,cAAc,GAAGF,eAAe,GAAGC,aAAa,CAAC;IACvD,OAAOC,cAAc;EACtB;EAEA,MAAMC,aAAa,GAAGJ,qBAAqB,CAAChO,KAAK,CAACM,gBAAgB,EAAE,eAAe,CAAC;EACpF,MAAM+N,UAAU,GAAGL,qBAAqB,CAAChO,KAAK,CAACM,gBAAgB,EAAE,YAAY,CAAC;EAC9E,MAAMgO,aAAa,GAAGN,qBAAqB,CAAChO,KAAK,CAACM,gBAAgB,EAAE,eAAe,CAAC;EACpF,MAAMnD,mBAAmB,GAAG6Q,qBAAqB,CAAChO,KAAK,CAACM,gBAAgB,EAAE,qBAAqB,CAAC;EAChG,MAAMiO,iBAAiB,GAAGP,qBAAqB,CAAChO,KAAK,CAACM,gBAAgB,EAAE,mBAAmB,CAAC;;EAE5F;AACD;AACA;EACClJ,6DAAS,CAAC,MAAM;IAEf,OAAO,MAAM;MACZ4V,kBAAkB,CAAChN,KAAK,CAACC,QAAQ,EAAE,mBAAmB,EAAE,EAAE,EAAE,MAAM,EAAEiL,UAAU,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC;IACrG,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMsD,iBAAiB,GAAIjJ,IAAI,CAACC,SAAS,CAACxF,KAAK,CAACA,KAAK,CAAC,KAAK,IAAI,IAAIoN,gBAAgB,IAAI,MAAM,GAAI,CAAC,GAAGpN,KAAK,CAACS,OAAO,CAACuI,MAAM;EACzH,MAAMyF,cAAc,GAAIlJ,IAAI,CAACC,SAAS,CAACxF,KAAK,CAACA,KAAK,CAAC,KAAK,IAAI,IAAIoN,gBAAgB,IAAI,MAAM,GAAI,CAAC,GAAGpN,KAAK,CAACQ,IAAI,CAACwI,MAAM;;EAEnH;AACD;AACA;AACA;AACA;EACC5R,6DAAS,CAAC,MAAM;IACf,IAAIoX,iBAAiB,IAAInC,UAAU,EAAE;MACpCC,aAAa,CAACkC,iBAAiB,CAAC;IACjC;IACA,IAAIC,cAAc,IAAIlC,OAAO,EAAE;MAC9BC,UAAU,CAACiC,cAAc,CAAC;IAC3B;EACD,CAAC,EACA,CAACD,iBAAiB,EAAEC,cAAc,CACnC,CAAC;EAEDzV,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAGgH,QAAQ,CAAC;EAChDjH,OAAO,CAACC,GAAG,CAAC,+BAA+B,GAAGkH,eAAe,CAAC;;EAE9D;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASuO,YAAYA,CAAC9V,OAAO,EAAEC,QAAQ,EAAE;IACxC,MAAMyK,SAAS,GAAGuH,wDAAgB,CAACjS,OAAO,EAAEC,QAAQ,CAAC;IACrD,IAAIyL,UAAU,GAAG,EAAE;IAEnB,KAAK,IAAIqK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpC,OAAO,EAAEoC,CAAC,EAAE,EAAE;MACjC3V,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAG0V,CAAC,CAAC;MACzC,IAAIA,CAAC,KAAK,CAAC,EAAE;QACZ,IAAI3M,IAAI,GAAG8I,sDAAc,CAAClS,OAAO,EAAEC,QAAQ,EAAE8V,CAAC,EAAE,QAAQ,CAAC;QACzDrK,UAAU,CAACuB,IAAI,CAAC7D,IAAI,CAAC;MACtB,CAAC,MAAM;QACN,IAAIA,IAAI,GAAG8I,sDAAc,CAAClS,OAAO,EAAEC,QAAQ,EAAE8V,CAAC,CAAC;QAC/CrK,UAAU,CAACuB,IAAI,CAAC7D,IAAI,CAAC;MACtB;IACD;IAEAhJ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5BD,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGJ,QAAQ,CAAC;IACrCG,OAAO,CAACC,GAAG,CAACqK,SAAS,CAAC;IACtBtK,OAAO,CAACC,GAAG,CAACqL,UAAU,CAAC;IAEvBjB,SAAS,CAACxK,QAAQ,EAAEyK,SAAS,EAAEgB,UAAU,CAAC;IAE1CtL,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BmS,aAAa,CAAC,KAAK,CAAC;IACpB,OAAQ7J,iBAAiB,CAAC3I,OAAO,CAAC;EACnC;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASgW,YAAYA,CAAChW,OAAO,EAAEC,QAAQ,EAAE;IACxCG,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGJ,QAAQ,CAAC;IAC5C4K,YAAY,CAAC5K,QAAQ,CAAC;IAEtBG,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BmS,aAAa,CAAC,KAAK,CAAC;IACpB,OAAQ7J,iBAAiB,CAAC3I,OAAO,CAAC;EACnC;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC,SAASoU,kBAAkBA,CAACpU,OAAO,EAAEiL,SAAS,EAAE3C,EAAE,EAAE/C,IAAI,EAAE5B,KAAK,EAAEsS,OAAO,GAAG,IAAI,EAAE;IAEhF7V,OAAO,CAACC,GAAG,CAAC,sCAAsC,GAAG4K,SAAS,GAAG,SAAS,GAAG3C,EAAE,GAAG,WAAW,GAAG/C,IAAI,GAAG,YAAY,GAAG5B,KAAK,CAAC;IAC5H,IAAI0F,YAAY;IAEhB,QAAQ9D,IAAI;MACX,KAAK,SAAS;QACb;UACC,IAAI0F,SAAS,KAAK,MAAM,EAAE;YACzBI,UAAU,CAACrL,OAAO,EAAEsI,EAAE,EAAE,SAAS,EAAE3E,KAAK,CAAC;UAC1C;UACA;QACD;MACD,KAAK,YAAY;QAChB;UACC,IAAIsH,SAAS,KAAK,MAAM,EAAE;YACzB7K,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;YAC/BgL,UAAU,CAAC/C,EAAE,EAAE,YAAY,EAAE3E,KAAK,CAAC;UACpC,CAAC,MAAM,IAAIsH,SAAS,KAAK,QAAQ,EAAE;YAClC7K,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;YACjCD,OAAO,CAACC,GAAG,CAACsD,KAAK,CAAC;YAClB5D,mBAAmB,CAAC4D,KAAK,CAAC;YAC1ByH,YAAY,CAAC9C,EAAE,EAAE,YAAY,EAAE3E,KAAK,CAAC;UACtC,CAAC,MAAM,IAAIsH,SAAS,KAAK,OAAO,EAAE;YACjC7K,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;YAC3CD,OAAO,CAACC,GAAG,CAACsD,KAAK,CAAC;YAClB6G,eAAe,CAACxK,OAAO,EAAE,kBAAkB,EAAE2D,KAAK,CAAC;UAEpD;UACA;QACD;MACD,KAAK,SAAS;QACb;UACC,IAAIsH,SAAS,KAAK,MAAM,EAAE;YACzBI,UAAU,CAAC/C,EAAE,EAAE,SAAS,EAAE3E,KAAK,CAAC;UACjC,CAAC,MAAM,IAAIsH,SAAS,KAAK,QAAQ,EAAE;YAClCG,YAAY,CAAC9C,EAAE,EAAE,SAAS,EAAE3E,KAAK,CAAC;UACnC;UACA;QACD;MACD,KAAK,MAAM;QACV;UACC6G,eAAe,CAACxK,OAAO,EAAEiL,SAAS,EAAEtH,KAAK,CAAC;UAC1C;UACA;UACA;UACA;QACD;MACD;QACCvD,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C;IACAD,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BmS,aAAa,CAAC,KAAK,CAAC;IACpB;IACA,IAAIyD,OAAO,EAAE;MACZ,OAAQtN,iBAAiB,CAAC3I,OAAO,CAAC;IACnC;EACD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACC,SAASkW,eAAeA,CAAC9O,KAAK,EAAE+O,SAAS,EAAE;IAE1C/V,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BD,OAAO,CAACC,GAAG,CAAC+G,KAAK,CAAC;IAClBhH,OAAO,CAACC,GAAG,CAAC,iCAAiC,GAAGoT,UAAU,CAAC;IAE3D,IAAI0C,SAAS,KAAK,KAAK,EAAE;MACxBzC,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;MAC7BG,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;MAEvB,IAAIxF,WAAW,GAAG/G,KAAK,CAACQ,IAAI,CAC1BiB,MAAM,CAAEC,GAAG,IACXA,GAAG,CAACC,MAAM,KAAK,GAChB,CAAC;MAEF,IAAIyF,cAAc,GAAGpH,KAAK,CAACS,OAAO,CAChCgB,MAAM,CAAEI,MAAM,IACdA,MAAM,CAACC,SAAS,KAAK,GACtB,CAAC;MAEF,IAAI0F,YAAY,GAAGxH,KAAK,CAACU,KAAK,CAC5Be,MAAM,CAAEO,IAAI,IACZA,IAAI,CAACL,MAAM,KAAK,GAAG,IAAIK,IAAI,CAACF,SAAS,KAAK,GAC3C,CAAC;MAEF9I,OAAO,CAACC,GAAG,CAACuO,YAAY,CAAC;MACzBrD,iBAAiB,CAACnE,KAAK,CAACC,QAAQ,EAAE8G,WAAW,EAAEK,cAAc,EAAEI,YAAY,CAAC;IAG7E,CAAC,MAAM;MACN8E,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;MAC7BG,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;MAEvB,IAAIyC,SAAS,GAAG,CAAC;QAChB/O,QAAQ,EAAE2D,MAAM,CAAC3D,QAAQ,CAAC;QAC1B0B,MAAM,EAAE,GAAG;QACXsN,QAAQ,EAAE,QAAQ;QAClBlJ,UAAU,EAAE,EAAE;QACdC,OAAO,EAAE;MACV,CAAC,CAAC;MAEF,IAAIkJ,QAAQ,GAAG,EAAE;MAEjB,IAAIC,cAAc,GAAG;QACpBC,MAAM,EAAE;MACT,CAAC;MAEDpW,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGoT,UAAU,CAAC;MAC7C,KAAK,IAAIsC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAItC,UAAU,EAAEsC,CAAC,EAAE,EAAE;QACrC,IAAIvI,YAAY,GAAGlB,sDAAc,CAACyJ,CAAC,CAAC;QACpC3V,OAAO,CAACC,GAAG,CAAC,2BAA2B,GAAGmN,YAAY,CAAC;QAEvD,IAAIpE,IAAI,GAAG;UACV/B,QAAQ,EAAE2D,MAAM,CAAC3D,QAAQ,CAAC;UAC1B6B,SAAS,EAAE8B,MAAM,CAAC+K,CAAC,CAAC;UACpBhN,MAAM,EAAE,GAAG;UACX2E,OAAO,EAAEF,YAAY,GAAG,GAAG;UAC3BL,UAAU,EAAEoJ,cAAc;UAC1BnJ,OAAO,EAAE,cAAc;UACvBO,OAAO,EAAEH;QACV,CAAC;QACD8I,QAAQ,CAACrJ,IAAI,CAAC7D,IAAI,CAAC;MACpB;MAEA,MAAMqN,sBAAsB,GAAG;QAC9B5U,eAAe,EAAE,OAAO;QACxBM,QAAQ,EAAE,CAAC;QACXE,aAAa,EAAE,EAAE;QACjBE,QAAQ,EAAE,CAAC;QACXE,aAAa,EAAE,EAAE;QACjBE,UAAU,EAAE,EAAE;QACdY,eAAe,EAAE,IAAI;QACrBP,gBAAgB,EAAE,KAAK;QACvBF,eAAe,EAAE,KAAK;QACtBwB,sBAAsB,EAAE,KAAK;QAC7BC,mBAAmB,EAAE;MACtB,CAAC;MAED,IAAImS,YAAY,GAAG,CAAC;QACnBrP,QAAQ,EAAE2D,MAAM,CAAC3D,QAAQ,CAAC;QAC1B6B,SAAS,EAAE,GAAG;QACdgE,WAAW,EAAE,QAAQ;QACrBC,UAAU,EAAEsJ,sBAAsB;QAClCrJ,OAAO,EAAE;MACV,CAAC,CAAC;MAEF,IAAIzC,WAAW,GAAG,EAAE;MAEpB,KAAK,IAAIoL,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIpC,OAAO,EAAEoC,CAAC,EAAE,EAAE;QAElC,IAAI3M,IAAI,GAAG;UACV/B,QAAQ,EAAE2D,MAAM,CAAC3D,QAAQ,CAAC;UAC1B6B,SAAS,EAAE,GAAG;UACdH,MAAM,EAAEiC,MAAM,CAAC+K,CAAC,CAAC;UACjBrI,OAAO,EAAE,GAAG,GAAG1C,MAAM,CAAC+K,CAAC,CAAC;UACxB5I,UAAU,EAAEoJ,cAAc;UAC1BnJ,OAAO,EAAE,cAAc;UACvBO,OAAO,EAAE3C,MAAM,CAAC+K,CAAC;QAClB,CAAC;QACDpL,WAAW,CAACsC,IAAI,CAAC7D,IAAI,CAAC;MACvB;MAEA,IAAI+E,WAAW,GAAG,CAAC,GAAG/G,KAAK,CAACQ,IAAI,EAAE,GAAGwO,SAAS,CAAC;MAC/CjI,WAAW,CAACwI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC1B,IAAI,CAACD,CAAC,CAAC7N,MAAM,CAAC,GAAG,CAAC8N,CAAC,CAAC9N,MAAM,CAAC,EAAE;UAC5B,OAAO,CAAC,CAAC;QACV,CAAC,MAAM;UACN,OAAO,CAAC;QACT;MACD,CAAC,CAAC;MAEF,IAAIyF,cAAc,GAAG,CAAC,GAAGpH,KAAK,CAACS,OAAO,EAAE,GAAG6O,YAAY,CAAC;MACxDlI,cAAc,CAACmI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC7B,IAAI,CAACD,CAAC,CAAC1N,SAAS,CAAC,GAAG,CAAC2N,CAAC,CAAC3N,SAAS,CAAC,EAAE;UAClC,OAAO,CAAC,CAAC;QACV,CAAC,MAAM;UACN,OAAO,CAAC;QACT;MACD,CAAC,CAAC;MAEF,IAAI0F,YAAY,GAAG,CAAC,GAAGxH,KAAK,CAACU,KAAK,EAAE,GAAGwO,QAAQ,EAAE,GAAG3L,WAAW,CAAC;MAChEiE,YAAY,CAAC+H,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC3B,IAAI,CAAC,CAACD,CAAC,CAAC7N,MAAM,CAAC,EAAE,CAAC6N,CAAC,CAAC1N,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC2N,CAAC,CAAC9N,MAAM,CAAC,EAAE,CAAC8N,CAAC,CAAC3N,SAAS,CAAC,CAAC,EAAE;UAC9D,OAAO,CAAC,CAAC;QACV,CAAC,MAAM;UACN,OAAO,CAAC;QACT;MACD,CAAC,CAAC;MAEF9I,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGsM,IAAI,CAACC,SAAS,CAACwJ,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MACjEhW,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGsM,IAAI,CAACC,SAAS,CAAC8J,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MACvEtW,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGsM,IAAI,CAACC,SAAS,CAAC4B,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MAC3EpO,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGsM,IAAI,CAACC,SAAS,CAACgC,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MAEvErD,iBAAiB,CAACnE,KAAK,CAACC,QAAQ,EAAE8G,WAAW,EAAEK,cAAc,EAAEI,YAAY,CAAC;IAC7E;IAEA4E,cAAc,CAAC2C,SAAS,CAAC;IACzB3D,aAAa,CAAC,KAAK,CAAC;IACpB;EACD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASsE,cAAcA,CAACvC,UAAU,EAAEK,gBAAgB,EAAE/M,OAAO,EAAE;IAC9D,IAAI0M,UAAU,IAAIK,gBAAgB,EAAE;MACnC,OAAOmC,SAAS;IACjB;IAEA,IAAIC,kBAAkB,GAAG,EAAE;IAC3B;MACCnP,OAAO,CAACoP,GAAG,CAAC,CAAC;QAAE/N,SAAS;QAAEgE,WAAW;QAAEC,UAAU;QAAEC;MAAQ,CAAC,KAAK;QAChEhN,OAAO,CAACC,GAAG,CAAC,cAAc,GAAG2W,kBAAkB,CAAC;QAChD5W,OAAO,CAACC,GAAG,CAAC8M,UAAU,CAAC;QACvB,MAAM;UAAEtL,eAAe;UACtBM,QAAQ;UACRE,aAAa;UACbE,QAAQ;UACRE,aAAa;UACbE,UAAU;UACVY,eAAe;UACfP,gBAAgB;UAChBF,eAAe;UACfwB,sBAAsB;UACtBC;QACD,CAAC,GAAG4I,UAAU;QAEd,IAAI+J,MAAM,GAAG,EAAE;QAEf,QAAQrV,eAAe;UACtB,KAAK,cAAc;YAClB;cACC,IAAIM,QAAQ,GAAG,CAAC,EAAE;gBACjB+U,MAAM,GAAG,SAAS,GAAG/U,QAAQ,GAAGE,aAAa,GAAG,IAAI,GAAGE,QAAQ,GAAG,MAAM;cACzE,CAAC;cACA;cACA2U,MAAM,GAAG3U,QAAQ,GAAG,KAAK;cAE1ByU,kBAAkB,GAAGA,kBAAkB,GAAGE,MAAM;cAChD;YACD;UACD,KAAK,MAAM;YACV;cACCF,kBAAkB,GAAGA,kBAAkB,GAAG,OAAO;cACjD;YACD;UACD,KAAK,OAAO;YACX;cACCA,kBAAkB,GAAGA,kBAAkB,GAAGrU,UAAU,GAAGY,eAAe,GAAG,GAAG;cAC5E;YACD;UACD,KAAK,QAAQ;YACZ;cACC2T,MAAM,GAAG,SAAS,GAAG/U,QAAQ,GAAGE,aAAa,GAAG,IAAI,GAAGE,QAAQ,GAAGE,aAAa,GAAG,IAAI;cACtFuU,kBAAkB,GAAGA,kBAAkB,GAAGE,MAAM;cAChD;YACD;UACD;YACC9W,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QAC3C;;QAEA;QACA;QACA;QACA;QACA;MACD,CAAC,CAAC;IACH;;IACAD,OAAO,CAACC,GAAG,CAAC,0BAA0B,GAAG2W,kBAAkB,CAAC;IAC5D;IACA,OAAOA,kBAAkB;EAC1B;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAASG,WAAWA,CAAC5C,UAAU,EAAEK,gBAAgB,EAAEhN,IAAI,EAAE;IACxD,IAAI2M,UAAU,IAAIK,gBAAgB,EAAE;MACnC,OAAOmC,SAAS;IACjB;IAEA,IAAIK,eAAe,GAAG,EAAE;IACxB;MACCxP,IAAI,CAACqP,GAAG,CAAC,CAAC;QAAElO,MAAM;QAAEoE,UAAU;QAAEC;MAAQ,CAAC,KAAK;QAC7ChN,OAAO,CAACC,GAAG,CAAC,WAAW,GAAG+W,eAAe,CAAC;QAC1C,IAAIrO,MAAM,KAAK,GAAG,EAAE;UACnBqO,eAAe,GAAGA,eAAe,GAAG,OAAO;QAC5C,CAAC,MAAM;UACNA,eAAe,GAAGA,eAAe,GAAG,OAAO;QAC5C;MACD,CAAC,CAAC;IACH;IACA;IACA,OAAOA,eAAe;EACvB;EAEA,SAASC,WAAWA,CAACC,WAAW,EAAEC,QAAQ,EAAE;IAE3CnX,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtCD,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGkX,QAAQ,CAAC;IACxCnX,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGiX,WAAW,CAAC;IAE9C,IAAIE,gBAAgB,GAAG3F,6DAAqB,CAAC,CAAC;IAC9C,MAAMzJ,QAAQ,GAAG0J,iDAAS,CAAC0F,gBAAgB,EAAEF,WAAW,EAAEC,QAAQ,CAAC;IAEnEnX,OAAO,CAACC,GAAG,CAACsM,IAAI,CAACC,SAAS,CAACxE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAC9CzI,KAAK,CAACwV,aAAa,CAAC;MAAE5N,eAAe,EAAEiQ;IAAiB,CAAC,CAAC;IAC1DrQ,eAAe,CAACiB,QAAQ,CAAC;IACzB4L,8BAA8B,CAAC,IAAI,CAAC;IACpChM,iBAAiB,CAAC,CAAC;IACnB;EACD;;EAEA,SAASyP,aAAaA,CAAClX,KAAK,EAAE;IAC7BA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB0W,WAAW,CAAC5D,UAAU,EAAEE,OAAO,CAAC;EACjC;EAEA,SAAS+D,0BAA0BA,CAACC,WAAW,EAAE;IAChDvX,OAAO,CAACC,GAAG,CAACsX,WAAW,CAAC;IACxBjE,aAAa,CAACiE,WAAW,CAAC;EAC3B;EAEA,SAASC,uBAAuBA,CAACC,QAAQ,EAAE;IAC1CzX,OAAO,CAACC,GAAG,CAACwX,QAAQ,CAAC;IACrBjE,UAAU,CAACiE,QAAQ,CAAC;EACrB;EAEA,SAASC,cAAcA,CAACvX,KAAK,EAAEwX,UAAU,EAAE/X,OAAO,EAAEC,QAAQ,EAAES,uBAAuB,EAAE;IACtFN,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpCD,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClBH,OAAO,CAACC,GAAG,CAACK,uBAAuB,CAAC;IAEpC,QAAQqX,UAAU;MACjB,KAAK,YAAY;QAChB;UACC3D,kBAAkB,CAACpU,OAAO,EAAE,QAAQ,EAAEC,QAAQ,EAAE,YAAY,EAAES,uBAAuB,CAAC;UACtF;QACD;MACD,KAAK,QAAQ;QACZ;UACCwV,eAAe,CAAC,KAAK,CAAC;UACtBxD,gBAAgB,CAAC,CAAC,CAAC;UACnBI,oBAAoB,CAAC,KAAK,CAAC;UAC3BgD,YAAY,CAAC9V,OAAO,EAAEC,QAAQ,CAAC;UAC/B;UACA;QAED;MACD,KAAK,QAAQ;QACZ;UACCiW,eAAe,CAAC,KAAK,CAAC;UACtBxD,gBAAgB,CAAC,CAAC,CAAC;UACnBI,oBAAoB,CAAC,KAAK,CAAC;UAC3BkD,YAAY,CAAChW,OAAO,EAAEC,QAAQ,CAAC;UAC/B;UACA;QACD;MACD;QACCG,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD;IACAmT,cAAc,CAAC,KAAK,CAAC;IACrBpT,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGkT,WAAW,CAAC;EAE7C;EAEA,SAASyE,kBAAkBA,CAAC9O,SAAS,EAAEH,MAAM,EAAE3B,KAAK,EAAE7G,KAAK,EAAE;IAE5DH,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtCD,OAAO,CAACC,GAAG,CAAC,WAAW,GAAG6I,SAAS,CAAC;IACpC9I,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAG0I,MAAM,CAAC;IAC9B3I,OAAO,CAACC,GAAG,CAAC+G,KAAK,CAAC;IAClBhH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAElB,IAAIwI,MAAM,KAAK,GAAG,IAAIG,SAAS,KAAK,GAAG,EAAE;MACxC9I,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAG6I,SAAS,CAAC;MAC1C,IAAI+O,eAAe,GAAG/O,SAAS;MAC/B,MAAMgP,aAAa,GAAG9Q,KAAK,CAACS,OAAO,CAACsQ,IAAI,CAAC,CAAC;QAAEjP;MAAU,CAAC,KAAKA,SAAS,KAAK+O,eAAe,CAAC;MAC1F7X,OAAO,CAACC,GAAG,CAAC6X,aAAa,CAAC;MAC1BnY,mBAAmB,CAACmY,aAAa,CAAC/K,UAAU,CAAC;MAC7C2F,oBAAoB,CAAC,IAAI,CAAC;MAC1BJ,gBAAgB,CAACxJ,SAAS,CAAC;IAC5B;IAEA,IAAIH,MAAM,KAAK,GAAG,IAAIG,SAAS,KAAK,GAAG,EAAE;MACxC9I,OAAO,CAACC,GAAG,CAAC,cAAc,GAAG0I,MAAM,CAAC;MACpC,IAAIqP,YAAY,GAAGrP,MAAM;MACzB,MAAMsP,UAAU,GAAGjR,KAAK,CAACS,OAAO,CAACsQ,IAAI,CAAC,CAAC;QAAEpP;MAAO,CAAC,KAAKA,MAAM,KAAKqP,YAAY,CAAC;MAC9EhF,gBAAgB,CAACiF,UAAU,CAAClL,UAAU,CAAC;MACvC6F,iBAAiB,CAAC,IAAI,CAAC;MACvBN,gBAAgB,CAAC3J,MAAM,CAAC;IACzB;IACA;IACA;IACAyJ,aAAa,CAAC,KAAK,CAAC;EAErB;;EAEA;AACD;AACA;AACA;AACA;AACA;EACC,SAAS8F,gBAAgBA,CAAClR,KAAK,EAAE+O,SAAS,EAAE;IAC3C,MAAMoC,sBAAsB,GAAG;MAC9B,GAAGnR,KAAK,CAACM,gBAAgB;MACzB+N,UAAU,EAAEU;IACb,CAAC;IACD/B,kBAAkB,CAAChN,KAAK,CAACC,QAAQ,EAAE,OAAO,EAAE,EAAE,EAAE,YAAY,EAAEkR,sBAAsB,CAAC;IACrF;EACD;EACA;;EAEA,MAAMC,eAAe,GAAG1B,cAAc,CAACvC,UAAU,EAAEK,gBAAgB,EAAExN,KAAK,CAACS,OAAO,CAAC;EACnF,MAAM4Q,YAAY,GAAGtB,WAAW,CAAC5C,UAAU,EAAEK,gBAAgB,EAAExN,KAAK,CAACQ,IAAI,CAAC;EAG1ExH,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGmY,eAAe,CAAC;EACrD;;EAEApY,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACrCD,OAAO,CAACC,GAAG,CAAC+G,KAAK,CAAC;EAClB;EACAhH,OAAO,CAACC,GAAG,CAACsM,IAAI,CAACC,SAAS,CAACxF,KAAK,CAAC,CAAC;EAClChH,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGkU,UAAU,CAAC;EAC3CnU,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGmU,gBAAgB,CAAC;EACvDpU,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGuU,gBAAgB,CAAC;EACvDxU,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGmY,eAAe,CAAC;EACnDpY,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGoY,YAAY,CAAC;EAE7C,IAAI,CAAC7D,gBAAgB,EAAE;IACtB;EAAA;EAGD,OACChU,oDAAA;IAAA,GAAS0R;EAAU,GAEjB,CAACiC,UAAU,IAAI,CAACK,gBAAgB,IAChChU,oDAAA,CAAAC,2CAAA,QACCD,oDAAA,CAAC6Q,sEAAiB,QACjB7Q,oDAAA,CAACoQ,wDAAK;IAAC3I,MAAM,EAAC;EAAuB,GACpCzH,oDAAA,CAACqQ,4DAAS;IAACzM,KAAK,EAAC,kBAAkB;IAACkU,WAAW,EAAE;EAAK,GACrD9X,oDAAA,CAACsQ,2DAAQ,QACRtQ,oDAAA,CAACuQ,8DAAW;IAACpQ,KAAK,EAAC,YAAY;IAC9B4C,KAAK,EAAEyD,KAAK,CAACK,UAAW;IACxBxC,QAAQ,EAAE/D,CAAC,IAAIkT,kBAAkB,CAAC/M,QAAQ,EAAE,YAAY,EAAE,EAAE,EAAE,MAAM,EAAEnG,CAAC;EAAE,CAAE,CACnE,CAAC,EAEXN,oDAAA,CAACsQ,2DAAQ,QACRtQ,oDAAA,CAACU,kEAAe;IAACP,KAAK,EAAC,oBAAoB;IAC1CoD,OAAO,EAAEoP,WAAY;IACrBtO,QAAQ,EAAG/D,CAAC,IAAKgV,eAAe,CAAC9O,KAAK,EAAElG,CAAC;EAAE,CAC3C,CACQ,CAAC,EAEXN,oDAAA,CAACsQ,2DAAQ,QACRtQ,oDAAA,CAACU,kEAAe;IAACP,KAAK,EAAC,qBAAqB;IAC3CoD,OAAO,EAAEiD,KAAK,CAACM,gBAAgB,EAAE+N;IACjC;IAAA;IACAxQ,QAAQ,EAAG/D,CAAC,IAAKoX,gBAAgB,CAAClR,KAAK,EAAElG,CAAC;EAAE,CAC5C,CACQ,CAAC,EAEXN,oDAAA,CAACsQ,2DAAQ,QACRtQ,oDAAA,CAACgB,8EAAa;IAACb,KAAK,EAAC,eAAe;IAAC4C,KAAK,EAAE8P,UAAW;IAACrO,aAAa,EAAC,MAAM;IAACH,QAAQ,EAAG/D,CAAC,IAAKyX,aAAa,CAACzX,CAAC;EAAE,CAAE,CACxG,CAAC,EAEXN,oDAAA,CAACsQ,2DAAQ,QACRtQ,oDAAA,CAACgB,8EAAa;IAACb,KAAK,EAAC,YAAY;IAAC4C,KAAK,EAAEgQ,OAAQ;IAACvO,aAAa,EAAC,MAAM;IAACH,QAAQ,EAAG/D,CAAC,IAAK0X,UAAU,CAAC1X,CAAC;EAAE,CAAE,CAC/F,CACA,CACL,CACW,CAAC,EAEpBN,oDAAA,cAAMwG,KAAK,CAACK,UAAgB,CAAC,EAE7B7G,oDAAA,CAACW,oEAAiB,QACjBX,oDAAA;IAAKkE,SAAS,EAAC,cAAc;IAAC+T,KAAK,EAAE;MAAE,uBAAuB,EAAEL,eAAe;MAAE,oBAAoB,EAAEC;IAAa;EAAE,GAEpHrR,KAAK,CAACU,KAAK,CAACmP,GAAG,CAAC,CAAC;IAAE5P,QAAQ;IAAE0B,MAAM;IAAEG,SAAS;IAAEwE,OAAO;IAAEC,OAAO;IAAER,UAAU;IAAEC;EAAQ,CAAC,KAAK;IAC5F,MAAM0L,QAAQ,GAAG3L,UAAU,CAACqJ,MAAM;IAElC,SAASuC,gBAAgBA,CAACjQ,GAAG,EAAEG,MAAM,EAAE0E,OAAO,EAAE;MAC/C,IAAI7E,GAAG,KAAK,GAAG,IAAIG,MAAM,KAAK,GAAG,EAAE;QAClC,OAAO,EAAE;MACV,CAAC,MAAM;QACN,OAAO0E,OAAO;MACf;IACD;IAEA,SAASqL,qBAAqBA,CAACnG,iBAAiB,EAAEJ,aAAa,EAAEvJ,SAAS,EAAE;MAC3E,IAAI2J,iBAAiB,IAAIJ,aAAa,KAAKvJ,SAAS,EAAE;QACrD,OAAO,IAAI;MACZ;MACA,OAAO,KAAK;IACb;IAEA,MAAM+P,aAAa,GAAGF,gBAAgB,CAAChQ,MAAM,EAAEG,SAAS,EAAEyE,OAAO,CAAC;IAClE,MAAMuL,uBAAuB,GAAGF,qBAAqB,CAACnG,iBAAiB,EAAEJ,aAAa,EAAEvJ,SAAS,CAAC;IAElG,IAAIiQ,iBAAiB,GAAG,EAAE;IAC1B/Y,OAAO,CAACC,GAAG,CAAC2D,MAAM,CAAC+E,MAAM,CAAC,CAAC;IAC3B3I,OAAO,CAACC,GAAG,CAAC2D,MAAM,CAAC+E,MAAM,CAAC,GAAG,CAAC,CAAC;IAC/B,IAAI0M,UAAU,EAAE;MACf,IAAIzR,MAAM,CAAC+E,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QAC7B3I,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClC8Y,iBAAiB,GAAGA,iBAAiB,GAAG,YAAY;MACrD;IACD;IAEA/Y,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGqN,OAAO,CAAC;IACxCtN,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAG8Y,iBAAiB,CAAC;IACxD/Y,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAAGwS,iBAAiB,CAAC;IACzDzS,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGoS,aAAa,CAAC;IAC7CrS,OAAO,CAACC,GAAG,CAAC,6BAA6B,GAAG6Y,uBAAuB,CAAC;IAEpE,OACCtY,oDAAA,CAAAC,2CAAA,QACEiY,QAAQ,IACRlY,oDAAA;MACC0H,EAAE,EAAEoF,OAAQ;MACZ1I,WAAW,EAAE9D,CAAC,IAAI8W,kBAAkB,CAAC9O,SAAS,EAAEH,MAAM,EAAE3B,KAAK,EAAElG,CAAC,CAAE;MAClE4D,SAAS,EAAEsI;IAAQ,GAClB6L,aAAa,EACbC,uBAAuB,IACvBtY,oDAAA,CAAClB,oDAAU;MACVM,OAAO,EAAEqH,QAAS;MAClBpH,QAAQ,EAAEiJ,SAAU;MACpBhJ,WAAW,EAAE+Y,aAAc;MAC3BnZ,gBAAgB,EAAEA,gBAAiB;MACnCK,aAAa,EAAE2X;IAAe,CACnB,CAET,CACL,EACA,CAACgB,QAAQ,IACTlY,oDAAA,CAAC2Q,6DAAQ;MACRjJ,EAAE,EAAEoF,OAAQ;MACZ5I,SAAS,EAAE,YAAY,GAAGqU,iBAAiB,GAAG/L,OAAQ;MACtDgM,QAAQ,EAAC,GAAG;MACZC,OAAO,EAAC;MACR;MACA;MAAA;MACApU,QAAQ,EAAE/D,CAAC,IAAIkT,kBAAkB,CAAC/M,QAAQ,EAAE,MAAM,EAAEqG,OAAO,EAAE,SAAS,EAAExM,CAAC,CAAE;MAC3EyC,KAAK,EAAEgK;IAAQ,CACN,CAEV,CAAC;EAEL,CAAC,CACG,CACa,CAClB,CACF,EAEA,CAAC4G,UAAU,IAAIK,gBAAgB,IAC/BhU,oDAAA,CAACwQ,0DAAO,QAAC,uBAA8B,CACvC,EAGAmD,UAAU,IACV3T,oDAAA,CAACyQ,8DAAW;IACXtQ,KAAK,EAAE+P,mDAAE,CAAC,eAAe,CAAE;IAC3B/R,IAAI,EAAE6B,oDAAA,CAAC4Q,8DAAS;MAACzS,IAAI,EAAEA,yDAAK;MAACua,UAAU;IAAA,CAAE,CAAE;IAC3CC,YAAY,EAAEzI,mDAAE,CAAC,6BAA6B;EAAE,GAEhDlQ,oDAAA;IACCkE,SAAS,EAAC,gCAAgC;IAC1CC,QAAQ,EAAE0S;EAAc,GAGxB7W,oDAAA,CAACgB,8EAAa;IACbuD,uBAAuB;IACvBpE,KAAK,EAAE+P,mDAAE,CAAC,eAAe,CAAE;IAC3B7L,QAAQ,EAAE/D,CAAC,IAAIwW,0BAA0B,CAACxW,CAAC,CAAE;IAC7CyC,KAAK,EAAE8P,UAAW;IAClB3O,SAAS,EAAC;EAAiC,CAC3C,CAAC,EAEFlE,oDAAA,CAACgB,8EAAa;IACbuD,uBAAuB;IACvBpE,KAAK,EAAE+P,mDAAE,CAAC,YAAY,CAAE;IACxB7L,QAAQ,EAAE/D,CAAC,IAAI0W,uBAAuB,CAAC1W,CAAC,CAAE;IAC1CyC,KAAK,EAAEgQ,OAAQ;IACf7O,SAAS,EAAC;EAAiC,CAC3C,CAAC,EACFlE,oDAAA,CAACY,yDAAM;IACNsD,SAAS,EAAC,kCAAkC;IAC5CQ,OAAO,EAAC,SAAS;IACjBC,IAAI,EAAC;EAAQ,GAEZuL,mDAAE,CAAC,cAAc,CACX,CACH,CACM,CAGV,CAAC;AAER;;;;;;;;;;;;;;;;;;;;ACz/ByD;AACR;AACL;;AAE5C;AACA;AACA;AACA;AACA;AACO,MAAMc,mBAAmB,GAAGA,CAAA,KAAM;EACrCxR,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EAEjC,MAAM,CAACmZ,eAAe,EAAEC,kBAAkB,CAAC,GAAGhb,4DAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM;IAAEib;EAAkB,CAAC,GAAGhJ,0DAAS,CAAEzI,MAAM,IAAK;IAChD;IACA,OAAO;MACHyR,iBAAiB,EAAEzR,MAAM,CAAC,aAAa,CAAC,CAAC0R,iBAAiB,CAAC;IAC/D,CAAC;EACL,CAAC,CAAC;EACF,MAAMC,iBAAiB,GAAG/I,+DAAW,CAAC6I,iBAAiB,CAAC;EAExDlb,6DAAS,CAAC,MAAM;IACZ,IAAI,CAACkb,iBAAiB,IAAIE,iBAAiB,EAAE;MACzCH,kBAAkB,CAAC,IAAI,CAAC;IAC5B;IACA,IAAIC,iBAAiB,EAAE;MACnBD,kBAAkB,CAAC,KAAK,CAAC;IAC7B;EAEJ,CAAC,EAAE,CAACC,iBAAiB,EAAEE,iBAAiB,CAAC,CAAC;;EAE1C;EACA,OAAOJ,eAAe;AAC1B,CAAC;;;;;;;;;;;;;;;;ACjCqD;AAChC;AACI;AACU;AAEpCK,oEAAiB,CAACC,6CAAa,EAAE;EAChC;EACA;EACAC,IAAI,EAAE1H,6CAAI;EACV2H,IAAI,EAAE,SAAAA,CAAUra,KAAK,EAAE;IACtB,OAAO,IAAI;EACZ;AACD,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACZK,SAAS2M,cAAcA,CAAC2N,YAAY,EAAE;EAEzC,MAAMC,SAAS,GAAG,CACd;IAAEC,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,EACzB;IAAED,GAAG,EAAE,GAAG;IAAEC,MAAM,EAAE;EAAI,CAAC,CAC5B;EAED,IAAIH,YAAY,KAAK,CAAC,EAAE;IACpB7Z,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAE/B,OAAO,GAAG;EACd;EAEA,IAAIga,YAAY,GAAGJ,YAAY,CAACK,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,EAAE,CAAC;EACtD,IAAIC,WAAW,GAAG,EAAE;EAEpBH,YAAY,CAACpD,GAAG,CAAEtT,KAAK,IAAK;IACxB6W,WAAW,GAAGA,WAAW,GAAGN,SAAS,CAAC/B,IAAI,CAACsC,CAAC,IAAIA,CAAC,CAACN,GAAG,KAAKxW,KAAK,CAAC,CAACyW,MAAM;EAC3E,CAAC,CAAC;EAEF,OAAQI,WAAW;AACvB;AAEO,SAASjO,WAAWA,CAACmO,OAAO,EAAE3Q,GAAG,EAAEzB,EAAE,EAAEqS,WAAW,EAAE;EACvD;EACA;EACA;EACA;EACA;EACA,OAAOD,OAAO,CAACzD,GAAG,CAAE2D,IAAI,IACpBA,IAAI,CAAC7Q,GAAG,CAAC,KAAKzB,EAAE,GAAG;IAAE,GAAGsS,IAAI;IAAE,GAAGD;EAAY,CAAC,GAAGC,IACrD,CAAC;AACL;AAGO,SAASpO,SAASA,CAACqO,SAAS,EAAEC,UAAU,EAAE;EAE7C1a,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC5BD,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGwa,SAAS,CAAC;EACxCza,OAAO,CAACC,GAAG,CAACya,UAAU,CAAC;EAEvB,IAAID,SAAS,KAAK,MAAM,EAAE;IACtB,IAAIE,UAAU,GAAG,CAAC,GAAGD,UAAU,CAAC;IAChCC,UAAU,CAACpE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACtB,IAAI,CAACD,CAAC,CAAC7N,MAAM,CAAC,GAAG,CAAC8N,CAAC,CAAC9N,MAAM,CAAC,EAAE;QACzB,OAAO,CAAC,CAAC;MACb,CAAC,MAAM;QACH,OAAO,CAAC;MACZ;IACJ,CAAC,CAAC;IACF,OAAOgS,UAAU;EACrB;EAEA,IAAIF,SAAS,KAAK,SAAS,EAAE;IACzBza,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjC,IAAIgN,aAAa,GAAG,CAAC,GAAGyN,UAAU,CAAC;IACnCzN,aAAa,CAACsJ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACzB,IAAI,CAACD,CAAC,CAAC1N,SAAS,CAAC,GAAG,CAAC2N,CAAC,CAAC3N,SAAS,CAAC,EAAE;QAC/B,OAAO,CAAC,CAAC;MACb,CAAC,MAAM;QACH,OAAO,CAAC;MACZ;IACJ,CAAC,CAAC;IACF9I,OAAO,CAACC,GAAG,CAACgN,aAAa,CAAC;IAC1B,OAAOA,aAAa;EACxB;EAEA,IAAIwN,SAAS,KAAK,OAAO,EAAE;IACvBza,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,IAAIwN,WAAW,GAAG,CAAC,GAAGiN,UAAU,CAAC;IACjCjN,WAAW,CAAC8I,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACvB,IAAI,CAAC,CAACD,CAAC,CAAC7N,MAAM,CAAC,EAAE,CAAC6N,CAAC,CAAC1N,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC2N,CAAC,CAAC9N,MAAM,CAAC,EAAE,CAAC8N,CAAC,CAAC3N,SAAS,CAAC,CAAC,EAAE;QAC3D,OAAO,CAAC,CAAC;MACb,CAAC,MAAM;QACH,OAAO,CAAC;MACZ;IACJ,CAAC,CAAC;IACF9I,OAAO,CAACC,GAAG,CAACwN,WAAW,CAAC;IACxB,OAAOA,WAAW;EACtB;EACAzN,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;AACtC;AAEO,SAASwR,qBAAqBA,CAAA,EAAG;EACpC,MAAMmJ,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EAC5B,OAAOF,SAAS,CAACV,QAAQ,CAAC,EAAE,CAAC;AACjC;AAEO,SAASxI,SAASA,CAAC0F,gBAAgB,EAAEF,WAAW,EAAEC,QAAQ,EAAE;EAE/DnX,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACtCD,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGkX,QAAQ,CAAC;EACxCnX,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGiX,WAAW,CAAC;EAE9C,IAAI5L,UAAU,GAAGqG,cAAc,CAAC/N,MAAM,CAACsT,WAAW,CAAC,EAAEtT,MAAM,CAACuT,QAAQ,CAAC,CAAC;EACtE,IAAI4D,QAAQ,GAAG,EAAE;EAEjB,KAAK,IAAIpF,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIwB,QAAQ,EAAExB,CAAC,EAAE,EAAE;IAChC3V,OAAO,CAACC,GAAG,CAAC,aAAa,GAAG0V,CAAC,CAAC;IAC9B,IAAIjN,GAAG,GAAGkJ,aAAa,CAAC,GAAG,EAAE+D,CAAC,CAAC;IAC/B;IACAoF,QAAQ,CAAClO,IAAI,CAACnE,GAAG,CAAC;IAClB;EACJ;;EAEA,IAAIsS,WAAW,GAAG,EAAE;EAEpB,KAAK,IAAIrF,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIuB,WAAW,EAAEvB,CAAC,EAAE,EAAE;IACnC3V,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAG0V,CAAC,CAAC;IACjC,IAAI9M,MAAM,GAAGgJ,gBAAgB,CAAC,GAAG,EAAE8D,CAAC,CAAC;IACrC;IACAqF,WAAW,CAACnO,IAAI,CAAChE,MAAM,CAAC;IACxB;EACJ;;EAEA,MAAMb,QAAQ,GAAG;IACbhB,KAAK,EAAE;MACHC,QAAQ,EAAE,GAAG;MACbE,eAAe,EAAEiQ,gBAAgB;MACjChQ,OAAO,EAAE,GAAG;MACZO,YAAY,EAAE,KAAK;MACnBN,UAAU,EAAE,YAAY;MACxBC,gBAAgB,EAAE0K,yBAAyB,CAAC,OAAO,CAAC;MACpDzK,aAAa,EAAEwK,sBAAsB,CAAC,OAAO,CAAC;MAC9CvK,IAAI,EAAEuT,QAAQ;MACdtT,OAAO,EAAEuT,WAAW;MACpBtT,KAAK,EAAE4D;IACX;EACJ,CAAC;EAED,OAAOtD,QAAQ;AACnB;AAEO,SAAS2J,cAAcA,CAACsJ,gBAAgB,EAAEC,aAAa,EAAE;EAC5Dlb,OAAO,CAACC,GAAG,CAACib,aAAa,CAAC;EAC1B,IAAI5P,UAAU,GAAG,EAAE;EAEnB,IAAI+O,CAAC,GAAG,CAAC;EACT,IAAIc,CAAC,GAAG,CAAC;EAET,OAAOA,CAAC,IAAID,aAAa,EAAE;IACvB,OAAOb,CAAC,IAAIY,gBAAgB,EAAE;MAC1B,IAAI7N,YAAY,GAAGlB,cAAc,CAACmO,CAAC,CAAC;MACpC,IAAIc,CAAC,IAAI,CAAC,EAAE;QACR,IAAInS,IAAI,GAAG8I,cAAc,CAAC,GAAG,EAAElH,MAAM,CAACyP,CAAC,CAAC,EAAEzP,MAAM,CAACuQ,CAAC,CAAC,CAAC;QACpD7P,UAAU,CAACuB,IAAI,CAAC7D,IAAI,CAAC;MACzB,CAAC,MAAM;QACH,IAAIA,IAAI,GAAG8I,cAAc,CAAC,GAAG,EAAElH,MAAM,CAACyP,CAAC,CAAC,EAAEzP,MAAM,CAACuQ,CAAC,CAAC,CAAC;QACpD7P,UAAU,CAACuB,IAAI,CAAC7D,IAAI,CAAC;MACzB;MACAqR,CAAC,EAAE;IACP;IACA,IAAIA,CAAC,GAAG,CAAC;IACTc,CAAC,EAAE;EACP;EAEA,OAAO7P,UAAU;AACrB;AAEO,SAASsG,aAAaA,CAAChS,OAAO,EAAEmL,KAAK,EAAEqQ,WAAW,GAAG,MAAM,EAAE;EAChEpb,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAC/BD,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGL,OAAO,CAAC;EACtCI,OAAO,CAACC,GAAG,CAAC,aAAa,GAAG8K,KAAK,CAAC;EAClC/K,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGmb,WAAW,CAAC;EAE9C,IAAI1S,GAAG;EACP,IAAI0S,WAAW,KAAK,QAAQ,EAAE;IAC1B1S,GAAG,GAAG;MACFzB,QAAQ,EAAE2D,MAAM,CAAChL,OAAO,CAAC;MACzB+I,MAAM,EAAEiC,MAAM,CAACG,KAAK,CAAC;MACrBgC,UAAU,EAAEiF,yBAAyB,CAAC,MAAM,EAAEoJ,WAAW,CAAC;MAC1DpO,OAAO,EAAE+E,sBAAsB,CAAC,MAAM;IAC1C,CAAC;EACL,CAAC,MAAM;IACHrJ,GAAG,GAAG;MACFzB,QAAQ,EAAE2D,MAAM,CAAChL,OAAO,CAAC;MACzB+I,MAAM,EAAEiC,MAAM,CAACG,KAAK,CAAC;MACrBgC,UAAU,EAAEiF,yBAAyB,CAAC,MAAM,EAAEoJ,WAAW,CAAC;MAC1DpO,OAAO,EAAE+E,sBAAsB,CAAC,MAAM;IAC1C,CAAC;EACL;EAEA/R,OAAO,CAACC,GAAG,CAACyI,GAAG,CAAC;EAChB,OAAOA,GAAG;AACd;AAGO,SAASmJ,gBAAgBA,CAACjS,OAAO,EAAEC,QAAQ,EAAEwb,cAAc,GAAG,MAAM,EAAE;EAEzE,IAAIxS,MAAM;EACV,IAAIwS,cAAc,KAAK,QAAQ,EAAE;IAC7BxS,MAAM,GAAG;MACL5B,QAAQ,EAAE2D,MAAM,CAAChL,OAAO,CAAC;MACzBkJ,SAAS,EAAE8B,MAAM,CAAC/K,QAAQ,CAAC;MAC3BiN,WAAW,EAAE,QAAQ;MACrBC,UAAU,EAAEiF,yBAAyB,CAAC,SAAS,EAAEqJ,cAAc,CAAC;MAChErO,OAAO,EAAE;IACb,CAAC;EACL,CAAC,MAAM;IACHnE,MAAM,GAAG;MACL5B,QAAQ,EAAE2D,MAAM,CAAChL,OAAO,CAAC;MACzBkJ,SAAS,EAAE8B,MAAM,CAAC/K,QAAQ,CAAC;MAC3BiN,WAAW,EAAE,UAAU;MACvBC,UAAU,EAAEiF,yBAAyB,CAAC,SAAS,EAAEqJ,cAAc,CAAC;MAChErO,OAAO,EAAE+E,sBAAsB,CAAC,SAAS;IAC7C,CAAC;EACL;EAEA,OAAOlJ,MAAM;AACjB;AAEO,SAASiJ,cAAcA,CAAClS,OAAO,EAAEC,QAAQ,EAAEkL,KAAK,EAAEuQ,YAAY,GAAG,MAAM,EAAE;EAE5E,IAAItS,IAAI;EACR,IAAIoE,YAAY,GAAGlB,cAAc,CAACrM,QAAQ,CAAC;EAE3C,IAAIyb,YAAY,KAAK,QAAQ,EAAE;IAC3BtS,IAAI,GAAG;MACH/B,QAAQ,EAAE2D,MAAM,CAAChL,OAAO,CAAC;MACzBkJ,SAAS,EAAE8B,MAAM,CAAC/K,QAAQ,CAAC;MAC3B8I,MAAM,EAAEiC,MAAM,CAACG,KAAK,CAAC;MACrBuC,OAAO,EAAEF,YAAY,GAAGrC,KAAK;MAC7BgC,UAAU,EAAEiF,yBAAyB,CAAC,OAAO,EAAEsJ,YAAY,CAAC;MAC5DtO,OAAO,EAAE,cAAc;MACvBO,OAAO,EAAEH;IACb,CAAC;EACL,CAAC,MAAM;IACHpE,IAAI,GAAG;MACH/B,QAAQ,EAAE2D,MAAM,CAAChL,OAAO,CAAC;MACzBkJ,SAAS,EAAE8B,MAAM,CAAC/K,QAAQ,CAAC;MAC3B8I,MAAM,EAAEiC,MAAM,CAACG,KAAK,CAAC;MACrBuC,OAAO,EAAEF,YAAY,GAAGrC,KAAK;MAC7BgC,UAAU,EAAEiF,yBAAyB,CAAC,OAAO,EAAEsJ,YAAY,CAAC;MAC5DtO,OAAO,EAAE+E,sBAAsB,CAAC,OAAO,CAAC;MACxCxE,OAAO,EAAE,MAAM,GAAGrB,cAAc,CAACrM,QAAQ,CAAC,GAAGkL;IACjD,CAAC;EACL;EACA,OAAO/B,IAAI;AACf;AAEO,SAASgJ,yBAAyBA,CAACuJ,cAAc,EAAEC,iBAAiB,GAAG,MAAM,EAAE;EAElF,MAAMC,mBAAmB,GAAG;IACxBrG,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,KAAK;IACjBC,aAAa,EAAE,CAAC;IAChBnR,mBAAmB,EAAE,MAAM;IAC3BoR,iBAAiB,EAAE;EACvB,CAAC;EAED,MAAM7V,gBAAgB,GAAG;IACrB+B,eAAe,EAAE,cAAc;IAC/BM,QAAQ,EAAE,EAAE;IACZE,aAAa,EAAE,IAAI;IACnBE,QAAQ,EAAE,CAAC;IACXE,aAAa,EAAE,IAAI;IACnBE,UAAU,EAAE,CAAC;IACbY,eAAe,EAAE,IAAI;IACrBP,gBAAgB,EAAE,KAAK;IACvBF,eAAe,EAAE,KAAK;IACtBwB,sBAAsB,EAAE,KAAK;IAC7BC,mBAAmB,EAAE;EACzB,CAAC;EAED,MAAMuX,sBAAsB,GAAG;IAC3Bja,eAAe,EAAE,OAAO;IACxBM,QAAQ,EAAE,CAAC;IACXE,aAAa,EAAE,EAAE;IACjBE,QAAQ,EAAE,CAAC;IACXE,aAAa,EAAE,EAAE;IACjBE,UAAU,EAAE,EAAE;IACdY,eAAe,EAAE,IAAI;IACrBP,gBAAgB,EAAE,KAAK;IACvBF,eAAe,EAAE,KAAK;IACtBwB,sBAAsB,EAAE,KAAK;IAC7BC,mBAAmB,EAAE;EACzB,CAAC;EAED,MAAM4O,aAAa,GAAG;IAClB4I,aAAa,EAAE,MAAM;IACrBC,SAAS,EAAE,CAAC;IACZC,cAAc,EAAE,IAAI;IACpBC,SAAS,EAAE,CAAC;IACZC,cAAc,EAAE,IAAI;IACpBC,WAAW,EAAE,CAAC;IACdC,gBAAgB,EAAE,IAAI;IACtBC,QAAQ,EAAE,OAAO;IACjB3G,iBAAiB,EAAE;EACvB,CAAC;EAED,MAAM4G,mBAAmB,GAAG;IACxBR,aAAa,EAAE,MAAM;IACrBC,SAAS,EAAE,CAAC;IACZC,cAAc,EAAE,IAAI;IACpBC,SAAS,EAAE,CAAC;IACZC,cAAc,EAAE,IAAI;IACpBC,WAAW,EAAE,CAAC;IACdC,gBAAgB,EAAE,IAAI;IACtBC,QAAQ,EAAE,OAAO;IACjB3G,iBAAiB,EAAE;EACvB,CAAC;EAED,MAAMY,cAAc,GAAG;IACnBC,MAAM,EAAE;EACZ,CAAC;EAED,MAAMgG,oBAAoB,GAAG;IACzBhG,MAAM,EAAE;EACZ,CAAC;EAED,QAAQmF,cAAc;IAClB,KAAK,OAAO;MACR,OAAOE,mBAAmB;MAC1B;IAEJ,KAAK,SAAS;MACV,IAAID,iBAAiB,KAAK,QAAQ,EAAE;QAChC,OAAOE,sBAAsB;MACjC;MACA,OAAOhc,gBAAgB;MACvB;IAEJ,KAAK,MAAM;MACP,IAAI8b,iBAAiB,KAAK,QAAQ,EAAE;QAChC,OAAOW,mBAAmB;MAC9B;MACA,OAAOpJ,aAAa;MACpB;IAEJ,KAAK,OAAO;MACR,IAAIyI,iBAAiB,KAAK,QAAQ,EAAE;QAChC,OAAOY,oBAAoB;MAC/B;MACA,OAAOjG,cAAc;MACrB;IAEJ;MACI;EACR;AACJ;AAEO,SAASpE,sBAAsBA,CAACwJ,cAAc,EAAE;EAGnD,MAAMc,gBAAgB,GAAG,EAExB;EAED,MAAMC,aAAa,GAAG,EAErB;EAGD,MAAMC,UAAU,GAAG,EAElB;EAED,MAAMC,WAAW,GAAG,CAChB,WAAW,CACd;EAED,QAAQjB,cAAc;IAClB,KAAK,OAAO;MACR,OAAOc,gBAAgB;MACvB;IAEJ,KAAK,SAAS;MACV,OAAOC,aAAa;MACpB;IAEJ,KAAK,MAAM;MACP,OAAOC,UAAU;MACjB;IAEJ,KAAK,OAAO;MACR,OAAOC,WAAW;MAClB;IAEJ;MACI;EACR;AACJ;;;;;;;;;;;ACrZA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC,oHAAoH,iDAAiD;WACrK;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA,8CAA8C;;WAE9C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,iCAAiC,mCAAmC;WACpE;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEnDA;UACA;UACA;UACA,2FAA2F,+CAA+C;UAC1I","sources":["webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/arrow-down.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/arrow-up.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/block-table.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/more-vertical.js","webpack://dynamic-tables/./node_modules/@wordpress/icons/build-module/library/trash.js","webpack://dynamic-tables/./src/components/column-dropdown-menu/index.js","webpack://dynamic-tables/./src/components/configure-column-width/index.js","webpack://dynamic-tables/./src/components/index.js","webpack://dynamic-tables/./src/data/action-types.js","webpack://dynamic-tables/./src/data/actions.js","webpack://dynamic-tables/./src/data/constants.js","webpack://dynamic-tables/./src/data/index.js","webpack://dynamic-tables/./src/data/reducer.js","webpack://dynamic-tables/./src/data/resolvers.js","webpack://dynamic-tables/./src/data/selectors.js","webpack://dynamic-tables/./src/edit.js","webpack://dynamic-tables/./src/hooks.js","webpack://dynamic-tables/./src/index.js","webpack://dynamic-tables/./src/utils.js","webpack://dynamic-tables/./src/components/configure-column-width/style.scss","webpack://dynamic-tables/./src/editor.scss","webpack://dynamic-tables/./src/style.scss","webpack://dynamic-tables/external window \"React\"","webpack://dynamic-tables/external window [\"wp\",\"apiFetch\"]","webpack://dynamic-tables/external window [\"wp\",\"blockEditor\"]","webpack://dynamic-tables/external window [\"wp\",\"blocks\"]","webpack://dynamic-tables/external window [\"wp\",\"components\"]","webpack://dynamic-tables/external window [\"wp\",\"compose\"]","webpack://dynamic-tables/external window [\"wp\",\"coreData\"]","webpack://dynamic-tables/external window [\"wp\",\"data\"]","webpack://dynamic-tables/external window [\"wp\",\"dataControls\"]","webpack://dynamic-tables/external window [\"wp\",\"element\"]","webpack://dynamic-tables/external window [\"wp\",\"i18n\"]","webpack://dynamic-tables/external window [\"wp\",\"primitives\"]","webpack://dynamic-tables/external window [\"wp\",\"url\"]","webpack://dynamic-tables/webpack/bootstrap","webpack://dynamic-tables/webpack/runtime/chunk loaded","webpack://dynamic-tables/webpack/runtime/compat get default export","webpack://dynamic-tables/webpack/runtime/define property getters","webpack://dynamic-tables/webpack/runtime/hasOwnProperty shorthand","webpack://dynamic-tables/webpack/runtime/make namespace object","webpack://dynamic-tables/webpack/runtime/jsonp chunk loading","webpack://dynamic-tables/webpack/before-startup","webpack://dynamic-tables/webpack/startup","webpack://dynamic-tables/webpack/after-startup"],"sourcesContent":["import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst arrowDown = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"m16.5 13.5-3.7 3.7V4h-1.5v13.2l-3.8-3.7-1 1 5.5 5.6 5.5-5.6z\"\n}));\nexport default arrowDown;\n//# sourceMappingURL=arrow-down.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst arrowUp = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M12 3.9 6.5 9.5l1 1 3.8-3.7V20h1.5V6.8l3.7 3.7 1-1z\"\n}));\nexport default arrowUp;\n//# sourceMappingURL=arrow-up.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { Path, SVG } from '@wordpress/primitives';\nconst blockTable = createElement(SVG, {\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, createElement(Path, {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM5 4.5h14c.3 0 .5.2.5.5v3.5h-15V5c0-.3.2-.5.5-.5zm8 5.5h6.5v3.5H13V10zm-1.5 3.5h-7V10h7v3.5zm-7 5.5v-4h7v4.5H5c-.3 0-.5-.2-.5-.5zm14.5.5h-6V15h6.5v4c0 .3-.2.5-.5.5z\"\n}));\nexport default blockTable;\n//# sourceMappingURL=block-table.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst moreVertical = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M13 19h-2v-2h2v2zm0-6h-2v-2h2v2zm0-6h-2V5h2v2z\"\n}));\nexport default moreVertical;\n//# sourceMappingURL=more-vertical.js.map","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst trash = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M12 5.5A2.25 2.25 0 0 0 9.878 7h4.244A2.251 2.251 0 0 0 12 5.5ZM12 4a3.751 3.751 0 0 0-3.675 3H5v1.5h1.27l.818 8.997a2.75 2.75 0 0 0 2.739 2.501h4.347a2.75 2.75 0 0 0 2.738-2.5L17.73 8.5H19V7h-3.325A3.751 3.751 0 0 0 12 4Zm4.224 4.5H7.776l.806 8.861a1.25 1.25 0 0 0 1.245 1.137h4.347a1.25 1.25 0 0 0 1.245-1.137l.805-8.861Z\"\n}));\nexport default trash;\n//# sourceMappingURL=trash.js.map","import { useEffect, useState } from \"@wordpress/element\"\r\nimport {\r\n    DropdownMenu,\r\n    MenuGroup,\r\n    MenuItem\r\n} from '@wordpress/components';\r\nimport {\r\n    AlignmentToolbar\r\n\r\n} from '@wordpress/block-editor';\r\nimport {\r\n    blockTable as icon,\r\n    moreVertical,\r\n    more,\r\n    arrowLeft,\r\n    arrowRight,\r\n    arrowUp,\r\n    arrowDown,\r\n    trash\r\n} from '@wordpress/icons';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as tableStore } from \"../../data\"\r\nimport { ConfigureColumnWidth } from '../configure-column-width';\r\nimport '../../editor.scss';\r\n\r\n\r\nfunction ColumnMenu(props) {\r\n\r\n    const [openModalColumnWidth, setOpenModalColumnWidth] = useState(false);\r\n    const [columnAttributes, setColumnAttributes] = useState({})\r\n\r\n    const {\r\n        tableId,\r\n        columnId,\r\n        columnLabel,\r\n        updatedColumn\r\n    } = props\r\n\r\n    useEffect(() => {\r\n        setColumnAttributes(props.columnAttributes)\r\n    }, [props.columnAttributes])\r\n\r\n    console.log('In Component ColumnMenu')\r\n    console.log(props)\r\n\r\n    function onInsertColumn(event, columnId) {\r\n        console.log('    ...onInsertColumn');\r\n        console.log(event);\r\n        console.log('columnId = ' + columnId)\r\n        updatedColumn(event, 'insert', tableId, columnId, '')\r\n    }\r\n\r\n    function onDeleteColumn(event, columnId) {\r\n        console.log('    ...onInsertColumn');\r\n        console.log(event);\r\n        console.log('columnId = ' + columnId)\r\n        updatedColumn(event, 'delete', tableId, columnId, '')\r\n    }\r\n\r\n    function onUpdateColumnWidth(event, updatedColumnAttributes) {\r\n        console.log('    ...onUpdateColumn Width');\r\n        console.log(event);\r\n        console.log(updatedColumnAttributes);\r\n        if (openModalColumnWidth) {\r\n            setOpenModalColumnWidth(false)\r\n            updatedColumn(event, 'attributes', tableId, columnId, updatedColumnAttributes)\r\n        } else {\r\n            event.preventDefault()\r\n            setOpenModalColumnWidth(true)\r\n        }\r\n    }\r\n\r\n    console.log('Open column width page = ' + openModalColumnWidth)\r\n\r\n    return (\r\n        <>\r\n            <DropdownMenu\r\n                // style={{ display: \"none\" }}\r\n                icon={moreVertical}\r\n                defaultOpen=\"true\"\r\n                label={columnLabel}>\r\n                {({ onClose }) => (\r\n                    <>\r\n                        <MenuGroup>\r\n                            <MenuItem icon={arrowUp} onClick={onUpdateColumnWidth}>\r\n                                Update Column Width\r\n                            </MenuItem>\r\n                        </MenuGroup>\r\n                        <MenuGroup>\r\n                            <MenuItem icon={arrowDown} onClick={e => onInsertColumn(e, columnId)}>\r\n                                Insert Column\r\n                            </MenuItem>\r\n                            <MenuItem icon={trash} onClick={e => onDeleteColumn(e, columnId)}>\r\n                                Delete Column\r\n                            </MenuItem>\r\n                        </MenuGroup>\r\n                    </>\r\n                )}\r\n            </DropdownMenu>\r\n\r\n            {openModalColumnWidth && (\r\n                <ConfigureColumnWidth\r\n                    columnId={columnId}\r\n                    columnLabel={columnLabel}\r\n                    columnAttributes={columnAttributes}\r\n                    openColumnWidth={onUpdateColumnWidth}>\r\n                </ConfigureColumnWidth>\r\n            )}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport { ColumnMenu };","import { useEffect, useState } from \"@wordpress/element\"\r\n/**\r\n * WordPress dependencies\r\n */\r\n\r\nimport {\r\n    Modal,\r\n    SelectControl,\r\n    CheckboxControl,\r\n    TabbableContainer,\r\n    Button,\r\n    __experimentalInputControl as InputControl,\r\n    __experimentalNumberControl as NumberControl\r\n} from '@wordpress/components';\r\n\r\nimport {\r\n    AlignmentToolbar\r\n\r\n} from '@wordpress/block-editor';\r\n\r\nimport {\r\n    blockTable as icon,\r\n    moreVertical,\r\n    more,\r\n    arrowLeft,\r\n    arrowRight,\r\n    arrowUp,\r\n    arrowDown,\r\n    trash\r\n} from '@wordpress/icons';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as tableStore } from \"../../data\"\r\nimport './style.scss';\r\n\r\nfunction ConfigureColumnWidth(props) {\r\n\r\n    const { openColumnWidth,\r\n        columnId,\r\n        columnLabel,\r\n        columnAttributes\r\n    } = props;\r\n    //    const [closePage, setClosePage] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        switch (columnAttributes.columnWidthType) {\r\n            case 'Proportional':\r\n                {\r\n                    setHideProportional(false)\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Auto':\r\n                {\r\n                    setHideProportional(true)\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Fixed':\r\n                {\r\n                    setHideProportional(true)\r\n                    setHideCustom(true)\r\n                    setHideFixed(false)\r\n                    break;\r\n                }\r\n\r\n            case 'Custom':\r\n                {\r\n                    setHideProportional(true)\r\n                    setHideCustom(false)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n        }\r\n\r\n        setColumnWidthType(columnAttributes.columnWidthType)\r\n        setMinWidth(columnAttributes.minWidth)\r\n        setMinWidthUnits(columnAttributes.minWidthUnits)\r\n        setMaxWidth(columnAttributes.maxWidth)\r\n        setMaxWidthUnits(columnAttributes.maxWidthUnits)\r\n        setFixedWidth(columnAttributes.fixedWidth)\r\n        setFixedWidthUnits(columnAttributes.fixedWidth)\r\n        setDisableForPhone(columnAttributes.disableForPhone)\r\n        setDisableForTablet(columnAttributes.disableForTablet)\r\n    }, [columnAttributes])\r\n\r\n    function stopProp(event) {\r\n        event.stopPropagation()\r\n    }\r\n\r\n    function handleCancel(event) {\r\n        openColumnWidth(false)\r\n    }\r\n\r\n    const [columnWidthType, setColumnWidthType] = useState();\r\n    const [hideProportional, setHideProportional] = useState(true);\r\n    const [hideCustom, setHideCustom] = useState(true);\r\n    const [hideFixed, setHideFixed] = useState(true);\r\n    const [minWidth, setMinWidth] = useState(0);\r\n    const [minWidthUnits, setMinWidthUnits] = useState();\r\n    const [maxWidth, setMaxWidth] = useState(1);\r\n    const [maxWidthUnits, setMaxWidthUnits] = useState();\r\n    const [fixedWidth, setFixedWidth] = useState(0);\r\n    const [fixedWidthUnits, setFixedWidthUnits] = useState();\r\n    const [disableForTablet, setDisableForTablet] = useState(false);\r\n    const [disableForPhone, setDisableForPhone] = useState(false);\r\n\r\n    console.log('In Component ConfigureColumnWidth')\r\n    console.log(props)\r\n\r\n    function onWidthType(event) {\r\n        console.log('...In Width Type Update');\r\n        console.log(event);\r\n\r\n        switch (event) {\r\n            case 'Proportional':\r\n                {\r\n                    setMaxWidth(1)\r\n                    setMaxWidthUnits('fr')\r\n                    setMinWidth(20)\r\n                    setMinWidthUnits('ch')\r\n                    setFixedWidth(0)\r\n                    setFixedWidthUnits('px')\r\n                    setHideProportional(false)\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Auto':\r\n                {\r\n                    setMaxWidth(0)\r\n                    setMaxWidthUnits('fr')\r\n                    setMinWidth(0)\r\n                    setMinWidthUnits('ch')\r\n                    setFixedWidth(0)\r\n                    setFixedWidthUnits('px')\r\n                    setHideProportional(true)\r\n                    setHideCustom(true)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n\r\n            case 'Fixed':\r\n                {\r\n                    setMaxWidth(0)\r\n                    setMaxWidthUnits('fr')\r\n                    setMinWidth(0)\r\n                    setMinWidthUnits('ch')\r\n                    setFixedWidth(40)\r\n                    setFixedWidthUnits('px')\r\n                    setHideProportional(true)\r\n                    setHideCustom(true)\r\n                    setHideFixed(false)\r\n                    break;\r\n                }\r\n\r\n            case 'Custom':\r\n                {\r\n                    setMaxWidth(40)\r\n                    setMaxWidthUnits('ch')\r\n                    setMinWidth(20)\r\n                    setMinWidthUnits('ch')\r\n                    setFixedWidth(0)\r\n                    setFixedWidthUnits('px')\r\n                    setHideProportional(true)\r\n                    setHideCustom(false)\r\n                    setHideFixed(true)\r\n                    break;\r\n                }\r\n        }\r\n\r\n        setColumnWidthType(event)\r\n    }\r\n\r\n    function onMinimumWidth(event) {\r\n        console.log('...In MixWidth Update');\r\n        console.log(event);\r\n        setMinWidth(event.target.value)\r\n    }\r\n\r\n    function onMinimumWidthUnits(event) {\r\n        console.log('...In MixWidth Units Update');\r\n        console.log(event);\r\n        setMinWidthUnits(event)\r\n    }\r\n\r\n    function onMaximumWidth(event) {\r\n        console.log('...In Max Width Update');\r\n        console.log(event);\r\n        setMaxWidth(event.target.value)\r\n    }\r\n\r\n    function onMaximumWidthUnits(event) {\r\n        console.log('...In Max Width  Update');\r\n        console.log(event);\r\n        setMaxWidthUnits(event)\r\n    }\r\n\r\n    function onFixedWidth(event) {\r\n        console.log('...In Max Width Update');\r\n        console.log(event);\r\n        setFixedWidth(Number(event.target.value))\r\n    }\r\n\r\n    function onFixedWidthUnits(event) {\r\n        console.log('...In Max Width Units Update');\r\n        console.log(event);\r\n        setFixedWidthUnits(event)\r\n    }\r\n\r\n    function onTablet(checked) {\r\n        console.log('...In Tablet Update');\r\n        console.log(checked);\r\n\r\n        setDisableForTablet(checked)\r\n    }\r\n\r\n    function onPhone(checked) {\r\n        console.log('...In Phone Update');\r\n        console.log(checked);\r\n\r\n        setDisableForPhone(checked)\r\n    }\r\n\r\n    function onUpdate(event) {\r\n        // event.preventDefault()\r\n        console.log('COLUMN WIDTH UPDATED...')\r\n        console.log(event)\r\n        console.log('...Max Width = ' + maxWidth)\r\n\r\n        var updatedColumnAttributes =\r\n        {\r\n            columnWidthType: columnWidthType,\r\n            minWidth: minWidth,\r\n            minWidthUnits: minWidthUnits,\r\n            maxWidth: Number(maxWidth),\r\n            maxWidthUnits: maxWidthUnits,\r\n            fixedWidth: fixedWidth,\r\n            fixedWidthUnits: fixedWidthUnits,\r\n            disableForTablet: disableForTablet,\r\n            disableForPhone: disableForPhone,\r\n            isFixedLeftColumnGroup: false,\r\n            horizontalAlignment: \"none\"\r\n        }\r\n\r\n        console.log(updatedColumnAttributes)\r\n\r\n        openColumnWidth(false, updatedColumnAttributes)\r\n    }\r\n\r\n    console.log('RENDER PROPS');\r\n    console.log('...Disable Proportional Input = ' + hideProportional);\r\n    console.log('...Disable Fixed Input = ' + hideFixed);\r\n    console.log('...Disable Custom Input = ' + hideCustom);\r\n\r\n    return (\r\n        <>\r\n            {(openColumnWidth) && (\r\n                <Modal\r\n                    title=\"Configure Column Width\"\r\n                    onRequestClose={handleCancel}\r\n                    focusOnMount=\"firstContentElement\"\r\n                    isDismissible=\"false\"\r\n                    shouldCloseOnClickOutside=\"false\"\r\n                    size=\"large\">\r\n                    <p className=\"column-label\">\r\n                        For column {columnLabel}\r\n                    </p>\r\n\r\n                    <form\r\n                        // className=\"blocks-table__placeholder-form\"\r\n                        onSubmit={onUpdate}\r\n                        onMouseDown={stopProp}\r\n\r\n                    >\r\n                        <SelectControl\r\n                            label=\"Width Type\"\r\n                            value={columnWidthType}\r\n                            onChange={e => onWidthType(e)}\r\n                            options={[\r\n                                { value: \"Proportional\", label: \"Proportional\" },\r\n                                { value: \"Auto\", label: \"Automatic\" },\r\n                                { value: \"Fixed\", label: \"Fixed width\" },\r\n                                { value: \"Custom\", label: \"Custom\" }\r\n                            ]}\r\n                            __nextHasNoMarginBottom\r\n                        />\r\n\r\n                        <fieldset\r\n                            className={(hideProportional === true ? \" column-width--not-visible\" : \"\")}>\r\n                            <legend>Set Proportional Width</legend>\r\n                            <NumberControl\r\n                                className=\"column-width-value-input\"\r\n                                label=\"Number of portions\"\r\n                                labelPosition=\"side\"\r\n                                onBlur={e => onMaximumWidth(e)}\r\n                                value={maxWidth}\r\n                            />\r\n\r\n                            <span\r\n                                className=\"column-width-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"column-width-value-input\"\r\n                                    label=\"Minimum width\"\r\n                                    labelPosition=\"left\"\r\n                                    value={minWidth}\r\n                                    onBlur={e => onMinimumWidth(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"column-width-unit-input\"\r\n                                    labelPosition=\"left\"\r\n                                    label=\"Units\"\r\n                                    value={minWidthUnits}\r\n                                    onChange={e => onMinimumWidthUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"characters\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n                        </fieldset>\r\n\r\n                        <fieldset\r\n                            className={(hideFixed === true ? \"column-width--not-visible\" : \"\")}>\r\n                            <legend>Set Fixed Width</legend>\r\n\r\n                            <span\r\n                                className=\"column-width-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"column-width-input\"\r\n                                    label=\"Fixed width\"\r\n                                    labelPosition=\"left\"\r\n                                    value={fixedWidth}\r\n                                    onBlur={e => onFixedWidth(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"column-width-unit-input\"\r\n                                    label=\"Units\"\r\n                                    labelPosition=\"left\"\r\n                                    value={fixedWidthUnits}\r\n                                    onChange={e => onFixedWidthUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"font\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n                        </fieldset>\r\n\r\n                        <fieldset\r\n                            className={(hideCustom === true ? \"column-width--not-visible\" : \"\")}>\r\n                            <legend>Set Custom Width</legend>\r\n                            <span\r\n                                className=\"column-width-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"column-width-input\"\r\n                                    label=\"Minimum width\"\r\n                                    labelPosition=\"left\"\r\n                                    value={minWidth}\r\n                                    onBlur={e => onMinimumWidth(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"column-width-unit-input\"\r\n                                    labelPosition=\"left\"\r\n                                    label=\"Units\"\r\n                                    value={minWidthUnits}\r\n                                    onChange={e => onMinimumWidthUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"characters\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n\r\n                            <span\r\n                                className=\"column-width-span-input\"\r\n                            >\r\n                                <NumberControl\r\n                                    className=\"column-width-input\"\r\n                                    label=\"Maximum width\"\r\n                                    labelPosition=\"left\"\r\n                                    value={maxWidth}\r\n                                    onBlur={e => onMaximumWidth(e)}\r\n                                />\r\n\r\n                                <SelectControl\r\n                                    className=\"column-width-unit-input\"\r\n                                    labelPosition=\"left\"\r\n                                    label=\"Units\"\r\n                                    value={maxWidthUnits}\r\n                                    onChange={e => onMaximumWidthUnits(e)}\r\n                                    options={[\r\n                                        { value: \"px\", label: \"pixels\" },\r\n                                        { value: \"ch\", label: \"characters\" },\r\n                                        { value: \"pt\", label: \"points\" },\r\n                                        { value: \"in\", label: \"inches\" },\r\n                                        { value: \"fr\", label: \"proportional\" },\r\n                                    ]}\r\n                                    __nextHasNoMarginBottom\r\n                                />\r\n                            </span>\r\n                        </fieldset>\r\n\r\n                        <CheckboxControl\r\n                            label=\"Hide for tablet\"\r\n                            checked={disableForTablet}\r\n                            onChange={onTablet}\r\n                        />\r\n                        <CheckboxControl\r\n                            label=\"Hide for phone\"\r\n                            checked={disableForPhone}\r\n                            onChange={onPhone}\r\n                        />\r\n\r\n                        <span>\r\n                            <Button variant=\"secondary\" onClick={handleCancel}>\r\n                                Cancel\r\n                            </Button>\r\n\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </span>\r\n                    </form>\r\n                </Modal >\r\n            )\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport { ConfigureColumnWidth };","export { ColumnMenu } from './column-dropdown-menu';\r\nexport { ConfigureColumnWidth } from './configure-column-width';\r\n","const TYPES = {\r\n    CREATE_TABLE: \"CREATE_TABLE\",\r\n    INSERT_COLUMN: \"INSERT_COLUMN\",\r\n    INSERT_ROW: \"INSERT_ROW\",\r\n    DELETE_TABLE: \"DELETE_TABLE\",\r\n    DELETE_COLUMN: \"DELETE_COLUMN\",\r\n    DELETE_ROW: \"DELETE_ROW\",\r\n    CHANGE_TABLE_ID: \"CHANGE_TABLE_ID\",\r\n    UPDATE_TABLE_PROP: \"UPDATE_TABLE_PROP\",\r\n    REMOVE_TABLE_PROP: \"REMOVE_TABLE_PROP\",\r\n    UPDATE_ROW: \"UPDATE_ROW\",\r\n    UPDATE_COLUMN: \"UPDATE_COLUMN\",\r\n    UPDATE_CELL: \"UPDATE_CELL\",\r\n    RECEIVE_HYDRATE: \"RECEIVE_HYDRATE\",\r\n    RECEIVE_HYDRATE_TEST: \"RECEIVE_HYDRATE_TEST\",\r\n    PERSIST: \"PERSIST\",\r\n    PROCESS_BORDERS: \"PROCESS_BORDERS\"\r\n};\r\n\r\nexport default TYPES;","import { addEntities } from '@wordpress/core-data';\r\nimport { addQueryArgs } from \"@wordpress/url\";\r\nimport { apiFetch } from \"@wordpress/data-controls\";\r\nimport { store as coreStore } from \"@wordpress/core-data\"\r\nimport { store as blockEditorStore } from \"@wordpress/block-editor\"\r\nimport TYPES from \"./action-types.js\";\r\n\r\nconst {\r\n    CREATE_TABLE,\r\n    INSERT_COLUMN,\r\n    INSERT_ROW,\r\n    DELETE_TABLE,\r\n    DELETE_COLUMN,\r\n    DELETE_ROW,\r\n    CHANGE_TABLE_ID,\r\n    UPDATE_TABLE_PROP,\r\n    REMOVE_TABLE_PROP,\r\n    UPDATE_ROW,\r\n    UPDATE_COLUMN,\r\n    UPDATE_CELL,\r\n    RECEIVE_HYDRATE,\r\n    RECEIVE_HYDRATE_TEST,\r\n    PERSIST,\r\n    PROCESS_BORDERS\r\n} = TYPES;\r\n\r\nexport function addTableEntity() {\r\n    ({ registry }) => {\r\n        // let configs = select.getEntitiesConfig(kind);\r\n        // if (configs && configs.length !== 0) {\r\n        //     return configs;\r\n        // }\r\n        registry.dispatch(coreStore).addEntities(tableEntityConfig);\r\n\r\n        return configs;\r\n    };\r\n}\r\n\r\n/**\r\n * @example wp.data.dispatch( 'mfw/table').refreshPost\r\n * @example wp.data.dispatch( 'mfw/table' ).table\r\n * \r\n * \r\n * \r\n */\r\n\r\nexport function receiveNewTable(table) {\r\n    console.log('Receiving New Table')\r\n    console.log(table)\r\n    console.log(table.table.table_id)\r\n\r\n    return {\r\n        type: CREATE_TABLE,\r\n        tableId: table.table.table_id,\r\n        ...table\r\n    }\r\n}\r\n\r\nexport function receiveTable(table_id, block_table_ref, post_id, table_name, table_attributes, table_classes, rows, columns, cells) {\r\n    console.log('            ...Action - In receiveTable')\r\n    //console.log(table);\r\n    console.log('                - id: ' + table_id)\r\n    //console.log('                - table: ' + JSON.stringify(table));\r\n    //console.log('                - tableId ' + tableId);\r\n\r\n    return {\r\n        type: RECEIVE_HYDRATE,\r\n        tableId: table_id,\r\n        table: {\r\n            table_id,\r\n            block_table_ref,\r\n            post_id,\r\n            table_status: 'saved',\r\n            table_name,\r\n            table_attributes,\r\n            table_classes,\r\n            rows,\r\n            columns,\r\n            cells\r\n        }\r\n    }\r\n}\r\n\r\nexport const createTableEntity =\r\n    () =>\r\n        async ({ select, dispatch, registry }) => {\r\n\r\n            const { table_id, block_table_ref, post_id, table_name, table_attributes, table_classes, rows, columns, cells } = select.getTable('0', 'Saved');\r\n            const testTable = select.getTable('0', 'Saved');\r\n            console.log(testTable);\r\n            const newTable = {\r\n                header: {\r\n                    id: table_id,\r\n                    block_table_ref: block_table_ref,\r\n                    post_id: post_id,\r\n                    table_name: table_name,\r\n                    table_attributes: table_attributes,\r\n                    table_classes: table_classes\r\n                },\r\n                rows: [...rows],\r\n                columns: [...columns],\r\n                cells: [...cells]\r\n            }\r\n\r\n            console.log('CREATING TABLE ENTITY')\r\n            console.log(newTable)\r\n\r\n            try {\r\n                const tableEntity = await registry\r\n                    .dispatch(coreStore)\r\n                    .saveEntityRecord(\r\n                        'dynamic-tables/v1',\r\n                        'table',\r\n                        newTable\r\n                    );\r\n\r\n                dispatch.assignTableId(tableEntity.id);\r\n\r\n                return tableEntity.id\r\n\r\n            } catch (error) {\r\n                console.log('            ...Resolver - async error - ' + error);\r\n            }\r\n            console.log('            Resolver - async completed');\r\n        };\r\n\r\n\r\nexport const updateTableEntity =\r\n    (tableId) =>\r\n        ({ select, registry }) => {\r\n\r\n            const testTable = select.getTable(tableId, 'Saved')\r\n            console.log(testTable)\r\n            const {\r\n                table_id,\r\n                block_table_ref,\r\n                post_id,\r\n                table_name,\r\n                table_attributes,\r\n                table_classes,\r\n                rows,\r\n                columns,\r\n                cells\r\n            } = select.getTable(tableId, 'Saved')\r\n\r\n            // Remove border row if it exists\r\n            var filteredRows = rows\r\n                .filter((row) =>\r\n                    row.row_id !== '0'\r\n                )\r\n\r\n            // Remove border column if it exists\r\n            var filteredColumns = columns\r\n                .filter((column) =>\r\n                    column.column_id !== '0'\r\n                )\r\n\r\n            // Remove border cells if they exists\r\n            var filteredCells = cells\r\n                .filter((cell) =>\r\n                    cell.row_id !== '0' && cell.column_id !== '0'\r\n                )\r\n\r\n            const updatedTable = {\r\n                id: tableId,\r\n                header: {\r\n                    id: table_id,\r\n                    block_table_ref: block_table_ref,\r\n                    post_id: post_id,\r\n                    table_name: table_name,\r\n                    table_attributes: table_attributes,\r\n                    table_classes: table_classes\r\n                },\r\n                rows: [...filteredRows],\r\n                columns: [...filteredColumns],\r\n                cells: [...filteredCells]\r\n            }\r\n\r\n            console.log('UPDATING TABLE ENTITY')\r\n            console.log(updatedTable)\r\n\r\n\r\n            /**\r\n             * Options: isCached: Bool\r\n             *          undoIgnore: Bool\r\n             */\r\n            registry\r\n                .dispatch(coreStore)\r\n                .editEntityRecord(\r\n                    'dynamic-tables/v1',\r\n                    'table',\r\n                    table_id,\r\n                    updatedTable\r\n                );\r\n        };\r\n\r\nexport const deleteTableEntity =\r\n    (tableId) =>\r\n        async ({ select, dispatch, registry }) => {\r\n            console.log('In Action deleteTableEntity')\r\n\r\n            try {\r\n                const deletedTableEntity = await registry\r\n                    .dispatch(coreStore)\r\n                    .deleteEntityRecord(\r\n                        'dynamic-tables/v1',\r\n                        'table',\r\n                        tableId\r\n                    );\r\n\r\n                dispatch({\r\n                    type: DELETE_TABLE,\r\n                    tableId\r\n                })\r\n            } catch (error) {\r\n                console.log('            ...Resolver - async error - ' + error);\r\n            }\r\n            console.log('            Resolver - async completed');\r\n        };\r\n\r\nexport const processDeletedTables =\r\n    (deletedTables) =>\r\n        ({ dispatch, registry }) => {\r\n            Object.keys(deletedTables).forEach(key => {\r\n                const deletedTableId = deletedTables[key].table_id\r\n                console.log(deletedTableId)\r\n                dispatch.deleteTableEntity(deletedTables[key].table_id)\r\n            })\r\n        }\r\n\r\nexport const processUnmountedTables =\r\n    (unmountedTables) =>\r\n        ({ dispatch, registry }) => {\r\n            Object.keys(unmountedTables).forEach(key => {\r\n                const unmountedTableBlockId = unmountedTables[key].unmounted_blockid\r\n                const tableBlock = registry.select(blockEditorStore).getBlock(unmountedTableBlockId)\r\n                console.log(tableBlock)\r\n                if (tableBlock) {\r\n                    dispatch.removeTableProp(unmountedTables[key].table_id, 'unmounted_blockid')\r\n                } else {\r\n                    dispatch.removeTableProp(unmountedTables[key].table_id, 'unmounted_blockid')\r\n                    dispatch.updateTableProp(unmountedTables[key].table_id, 'table_status', 'deleted');\r\n                }\r\n            })\r\n        }\r\n\r\nexport const addColumn =\r\n    (\r\n        columnId,\r\n        newColumn,\r\n        columnCells\r\n    ) =>\r\n\r\n        async ({ dispatch }) => {\r\n            await dispatch({\r\n                type: INSERT_COLUMN,\r\n                columnId,\r\n                newColumn,\r\n                columnCells\r\n            })\r\n        }\r\n\r\nexport const addRow = () => {\r\n    return {\r\n        type: INSERT_ROW\r\n    }\r\n}\r\n\r\nexport const removeColumn =\r\n    (\r\n        columnId\r\n    ) =>\r\n        async ({ dispatch }) => {\r\n            console.log('In Action removeColumn')\r\n            await dispatch({\r\n                type: DELETE_COLUMN,\r\n                columnId\r\n            })\r\n\r\n        }\r\n\r\nexport const removeRow = () => {\r\n    return {\r\n        type: DELETE_ROW\r\n    }\r\n}\r\n\r\nexport const assignTableId = (tableId) => {\r\n    console.log('In Action updateTableProp')\r\n    return {\r\n        type: CHANGE_TABLE_ID,\r\n        tableId: '0',\r\n        newTableId: String(tableId),\r\n    }\r\n}\r\n\r\nexport const updateTableProp = (tableId, attribute, value) => {\r\n    console.log('In Action updateTableProp')\r\n    return {\r\n        type: UPDATE_TABLE_PROP,\r\n        tableId: tableId,\r\n        attribute,\r\n        value\r\n    }\r\n}\r\n\r\nexport const removeTableProp = (tableId, attribute) => {\r\n    console.log('In Action updateTableProp')\r\n    return {\r\n        type: REMOVE_TABLE_PROP,\r\n        tableId: tableId,\r\n        attribute\r\n    }\r\n}\r\n\r\nexport const updateRow = (rowId, attribute, value) => {\r\n\r\n    console.log('In Action updateRow')\r\n    return {\r\n        type: UPDATE_ROW,\r\n        rowId,\r\n        attribute,\r\n        value\r\n    }\r\n}\r\n\r\nexport const updateColumn = (columnId, attribute, value) => {\r\n\r\n    console.log('In Action updateColumn')\r\n    return {\r\n        type: UPDATE_COLUMN,\r\n        columnId,\r\n        attribute,\r\n        value\r\n    }\r\n}\r\n\r\nexport const updateCell = (tableId, cellId, attribute, value) => {\r\n    console.log('In Action updateCell')\r\n    return {\r\n        type: UPDATE_CELL,\r\n        tableId,\r\n        cellId,\r\n        attribute,\r\n        value\r\n    }\r\n}\r\n\r\n// async ({ dispatch }) => {\r\n//     console.log('In Action updateCell')\r\n\r\n//     await dispatch({\r\n//         type: UPDATE_CELL,\r\n//         cellId,\r\n//         attribute,\r\n//         value\r\n//     })\r\n// }\r\n\r\nexport const updateTableBorder =\r\n    (\r\n        tableId,\r\n        tableRows,\r\n        tableColumns,\r\n        tableCells\r\n    ) =>\r\n\r\n        async ({ dispatch }) => {\r\n            console.log('Updating Border')\r\n\r\n            await dispatch({\r\n                type: PROCESS_BORDERS,\r\n                tableId: tableId,\r\n                rows: tableRows,\r\n                columns: tableColumns,\r\n                cells: tableCells\r\n            })\r\n        }\r\n\r\n\r\n// Hold in case needed\r\nexport function receiveTableTest(tableEntity) {\r\n    console.log('            ...Action - In receiveTableTest')\r\n    //console.log(table);\r\n    // console.log('                - id: ' + table_id)\r\n    //console.log('                - table: ' + JSON.stringify(table));\r\n    //console.log('                - tableId ' + tableId);\r\n\r\n    return {\r\n        type: RECEIVE_HYDRATE_TEST,\r\n        tableEntity\r\n        // tableTest: {\r\n        //     testTable\r\n        // }\r\n    }\r\n}\r\n\r\nconst tableEntityConfig = [\r\n    {\r\n        name: 'dynamicTable',\r\n        kind: 'dynamic-tables/v1',\r\n        baseURL: '/dynamic-tables/v1/table',\r\n        // baseURLParams: { tableId: '18' },\r\n\r\n        // plural: 'taxonomies',\r\n        // label: __('Taxonomy'),\r\n        // syncConfig: {\r\n        //     fetch: async () => {\r\n        //         return apiFetch({ path: '/' });\r\n        //     },\r\n        //     applyChangesToDoc: (doc, changes) => {\r\n        //         const document = doc.getMap('document');\r\n        //         Object.entries(changes).forEach(([key, value]) => {\r\n        //             if (document.get(key) !== value) {\r\n        //                 document.set(key, value);\r\n        //             }\r\n        //         });\r\n        //     },\r\n        //     fromCRDTDoc: (doc) => {\r\n        //         return doc.getMap('document').toJSON();\r\n        //     },\r\n        // },\r\n        // syncObjectType: 'root/base',\r\n        // getSyncObjectId: () => 'index',\r\n    },\r\n\r\n];","const STORE_NAME = \"dynamic-tables/table\";\r\nexport default STORE_NAME;","import { createReduxStore, register } from '@wordpress/data';\r\n\r\nimport reducer from \"./reducer\";\r\nimport * as selectors from \"./selectors\";\r\nimport * as actions from \"./actions\";\r\nimport * as resolvers from \"./resolvers\";\r\nimport STORE_NAME from \"./constants\";\r\n\r\n// const storeConfig = () => ({\r\n//     selectors,\r\n//     actions,\r\n//     reducer,\r\n//     resolvers\r\n// });\r\n\r\n// export const store = createReduxStore(STORE_NAME, storeConfig());\r\nexport const store = createReduxStore(STORE_NAME, {\r\n    reducer,\r\n    selectors,\r\n    actions,\r\n    resolvers\r\n});\r\n\r\nregister(store);\r\n\r\n// Register store after unlocking private selectors to allow resolvers to use them.\r\n","import TYPES from \"./action-types\";\r\nimport {\r\n    numberToLetter,\r\n    updateArray,\r\n    tableSort\r\n} from '../utils';\r\n\r\nconst {\r\n    CREATE_TABLE,\r\n    INSERT_COLUMN,\r\n    INSERT_ROW,\r\n    DELETE_TABLE,\r\n    DELETE_COLUMN,\r\n    DELETE_ROW,\r\n    CHANGE_TABLE_ID,\r\n    UPDATE_TABLE_PROP,\r\n    REMOVE_TABLE_PROP,\r\n    UPDATE_ROW,\r\n    UPDATE_COLUMN,\r\n    UPDATE_CELL,\r\n    RECEIVE_HYDRATE,\r\n    RECEIVE_HYDRATE_TEST,\r\n    PERSIST,\r\n    PROCESS_BORDERS\r\n} = TYPES;\r\n\r\nconst table = (\r\n    state = {\r\n        table: {}\r\n    },\r\n\r\n    action) => {\r\n\r\n    console.log('      Reducer. state: ' + JSON.stringify(state));\r\n    console.log('      Reducer. type: ' + action.type);\r\n\r\n    switch (action.type) {\r\n        case CREATE_TABLE:\r\n            console.log('In Reducer CREATE_TABLE')\r\n            console.log(action.table)\r\n\r\n            return {\r\n                table: {\r\n                    ...action.table\r\n                }\r\n            }\r\n\r\n        case CHANGE_TABLE_ID:\r\n            console.log('In Reducer UPDATE_TABLE_PROP')\r\n            const updatedTableId = {\r\n                ...state,\r\n                table_id: action.newTableId\r\n            }\r\n            console.log(updatedTableId)\r\n\r\n            return {\r\n                table: updatedTableId\r\n            }\r\n\r\n        case UPDATE_TABLE_PROP:\r\n            console.log('In Reducer UPDATE_TABLE_PROP')\r\n            const updatedTable = {\r\n                ...state,\r\n                [action.attribute]: action.value\r\n            }\r\n            console.log(updatedTable)\r\n\r\n            return {\r\n                table: updatedTable\r\n            }\r\n\r\n        case REMOVE_TABLE_PROP:\r\n            const tablePropRemoved = { ...state }\r\n            // const removedAttribute = action.attribute\r\n            delete tablePropRemoved[action.attribute]\r\n\r\n            return {\r\n                table: tablePropRemoved\r\n            }\r\n\r\n        case INSERT_COLUMN:\r\n            console.log('In Reducer INSERT_COLUMN')\r\n            let insertColumnState = { ...state.table }\r\n\r\n            /**\r\n             * Insert new column and update existing column_id's\r\n             */\r\n            var columnsWithNewId = []\r\n            insertColumnState.columns.forEach((column) => {\r\n                if (column.column_id < action.columnId) {\r\n                    columnsWithNewId.push(column)\r\n                } else {\r\n                    let newColumn = {\r\n                        table_id: column.table_id,\r\n                        column_id: String(Number(column.column_id) + 1),\r\n                        column_name: column.column_name,\r\n                        attributes: column.attributes,\r\n                        classes: column.classes\r\n                    }\r\n                    columnsWithNewId.push(newColumn)\r\n                }\r\n            })\r\n            columnsWithNewId.push(action.newColumn)\r\n            var sortedColumns = tableSort('columns', columnsWithNewId)\r\n\r\n            /**\r\n             * Insert new cells and update existing column_id's\r\n             */\r\n            var cellsWithNewId = []\r\n            insertColumnState.cells.forEach((cell) => {\r\n                if (cell.column_id < action.columnId) {\r\n                    cellsWithNewId.push(cell)\r\n                } else {\r\n\r\n                    let newColumnId = String(Number(cell.column_id) + 1)\r\n                    let columnLetter = numberToLetter(newColumnId)\r\n                    let newCell = {\r\n                        table_id: cell.table_id,\r\n                        column_id: newColumnId,\r\n                        row_id: cell.row_id,\r\n                        cell_id: columnLetter + cell.row_id,\r\n                        attributes: cell.attributes,\r\n                        classes: cell.classes,\r\n                        content: cell.content\r\n                    }\r\n                    cellsWithNewId.push(newCell)\r\n                }\r\n            })\r\n\r\n            var allNewColumnCells = [...cellsWithNewId, ...action.columnCells]\r\n            var sortedCells = tableSort('cells', allNewColumnCells)\r\n\r\n            var returnedTableNewColumn =\r\n            {\r\n                ...insertColumnState,\r\n                rows: [...insertColumnState.rows],\r\n                columns: [...sortedColumns],\r\n                cells: [...sortedCells]\r\n            }\r\n\r\n            console.log(returnedTableNewColumn)\r\n            return returnedTableNewColumn;\r\n\r\n        case INSERT_ROW:\r\n\r\n        case DELETE_COLUMN:\r\n            console.log('In Reducer DELETE_COLUMN')\r\n            let deleteColumnState = { ...state.table }\r\n\r\n            /**\r\n             * Delete new column and update existing column_id's\r\n             */\r\n            var columnsWithNewId = []\r\n            deleteColumnState.columns.forEach((column) => {\r\n                if (column.column_id < action.columnId) {\r\n                    columnsWithNewId.push(column)\r\n                } else if (column.column_id > action.columnId) {\r\n                    let newColumn = {\r\n                        table_id: column.table_id,\r\n                        column_id: String(Number(column.column_id) - 1),\r\n                        column_name: column.column_name,\r\n                        attributes: column.attributes,\r\n                        classes: column.classes\r\n                    }\r\n                    columnsWithNewId.push(newColumn)\r\n                }\r\n            })\r\n            // columnsWithNewId.push(action.newColumn)\r\n            // var sortedColumns = tableSort('columns', columnsWithNewId)\r\n\r\n            /**\r\n             * Delete new cells and update existing column_id's\r\n             */\r\n            var cellsWithNewId = []\r\n            deleteColumnState.cells.forEach((cell) => {\r\n                if (cell.column_id < action.columnId) {\r\n                    cellsWithNewId.push(cell)\r\n                } else if (cell.column_id > action.columnId) {\r\n                    let newColumnId = String(Number(cell.column_id) - 1)\r\n                    let columnLetter = numberToLetter(newColumnId)\r\n                    let newCell = {\r\n                        table_id: cell.table_id,\r\n                        column_id: newColumnId,\r\n                        row_id: cell.row_id,\r\n                        cell_id: columnLetter + cell.row_id,\r\n                        attributes: cell.attributes,\r\n                        classes: cell.classes,\r\n                        content: cell.content\r\n                    }\r\n                    cellsWithNewId.push(newCell)\r\n                }\r\n            })\r\n\r\n            // var allNewColumnCells = [...cellsWithNewId, ...action.columnCells]\r\n            // var sortedCells = tableSort('cells', allNewColumnCells)\r\n\r\n            var returnedTableNewColumn =\r\n            {\r\n                ...deleteColumnState,\r\n                rows: [...deleteColumnState.rows],\r\n                columns: [...columnsWithNewId],\r\n                cells: [...cellsWithNewId]\r\n            }\r\n\r\n            console.log(returnedTableNewColumn)\r\n            return returnedTableNewColumn;\r\n\r\n        case DELETE_ROW:\r\n            return state\r\n\r\n        case UPDATE_ROW:\r\n            console.log('In Reducer UPDATE_COLUMN')\r\n            let newRowsState = { ...state.table }\r\n            let updatedRowData = JSON.parse('{ \"' + action.attribute + '\" : \"' + action.value + '\"}')\r\n            let updatedRows = updateArray(newRowsState.rows, 'row_id', action.rowId, updatedRowData)\r\n\r\n            var returnedUpdatedTableRow =\r\n            {\r\n                ...newRowsState,\r\n                rows: [...updatedRows],\r\n                columns: [...newRowsState.columns],\r\n                cells: [...newRowsState.cells]\r\n            }\r\n            return {\r\n                table: returnedUpdatedTableRow\r\n            }\r\n\r\n        case UPDATE_COLUMN:\r\n            console.log('In Reducer UPDATE_COLUMN')\r\n\r\n            let transformedValue = ' \"' + action.value + '\"';\r\n\r\n            if (action.attribute === 'attributes') {\r\n                transformedValue = JSON.stringify(action.value)\r\n            }\r\n\r\n            console.log(transformedValue)\r\n            let newColumnsState = { ...state.table }\r\n            let updatedColumnData = JSON.parse('{ \"' + action.attribute + '\" :' + transformedValue + '}')\r\n            let updatedColumns = updateArray(newColumnsState.columns, 'column_id', action.columnId, updatedColumnData)\r\n\r\n            console.log(updatedColumnData)\r\n            console.log(updatedColumns)\r\n\r\n            var returnedUpdatedTableColumn =\r\n            {\r\n                ...newColumnsState,\r\n                rows: [...newColumnsState.rows],\r\n                columns: [...updatedColumns],\r\n                cells: [...newColumnsState.cells]\r\n            }\r\n            return {\r\n\r\n                table: returnedUpdatedTableColumn\r\n            }\r\n\r\n        case UPDATE_CELL:\r\n            console.log('In Reducer UPDATE_CELL')\r\n            let newCellsState = { ...state }\r\n            console.log(state)\r\n            console.log(newCellsState)\r\n            let updatedCellData = JSON.parse('{ \"' + action.attribute + '\" : \"' + action.value + '\"}')\r\n            let updatedCells = updateArray(newCellsState.cells, 'cell_id', action.cellId, updatedCellData)\r\n\r\n            let returnedCellState =\r\n            {\r\n                ...state,\r\n                rows: [...newCellsState.rows],\r\n                columns: [...newCellsState.columns],\r\n                cells: [...updatedCells]\r\n            }\r\n            console.log(returnedCellState)\r\n            return {\r\n                table: returnedCellState\r\n            }\r\n\r\n        case PROCESS_BORDERS:\r\n            console.log('In Reducer PROCESS_BORDERS')\r\n            const newBaseTableState = { ...state }\r\n\r\n            let returnedBorderState =\r\n            {\r\n                ...newBaseTableState,\r\n                rows: [...action.rows],\r\n                columns: [...action.columns],\r\n                cells: [...action.cells]\r\n            }\r\n\r\n            console.log(newBaseTableState)\r\n            console.log(returnedBorderState)\r\n\r\n            return {\r\n                table: returnedBorderState\r\n            }\r\n\r\n        case RECEIVE_HYDRATE:\r\n            console.log('RECEIVE_HYDATE...')\r\n            console.log(state);\r\n            console.log(action.table);\r\n\r\n            return {\r\n                table: {\r\n                    ...state.table,\r\n                    ...action.table\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst reducer = (\r\n    state = {\r\n        tables: {}\r\n    },\r\n    action) => {\r\n    console.log('MAIN REDUCER')\r\n    console.log(state)\r\n    console.log('  Action Table ID = ' + action.tableId)\r\n    console.log(action)\r\n\r\n    let tableKey = action.tableId\r\n    console.log(state.tables[tableKey])\r\n    let newTableState = table(state.tables[tableKey], action)\r\n    let returnedTable =\r\n    {\r\n        [action.tableId]:\r\n            newTableState.table\r\n    }\r\n\r\n    if (JSON.stringify(newTableState.table) === '{}') {\r\n        return state\r\n    }\r\n    console.log(returnedTable)\r\n\r\n    const newTablesState = { ...state.tables }\r\n    // let newTablesStateKeys = Object.keys(state.tables)\r\n\r\n    switch (action.type) {\r\n        case CHANGE_TABLE_ID:\r\n            console.log('In Reducer CHANGE_TABLE_ID for state')\r\n\r\n            const returnedTableNewId =\r\n            {\r\n                [action.newTableId]:\r\n                    newTableState.table\r\n            }\r\n            console.log(returnedTableNewId)\r\n\r\n            const filteredTablesState = Object.keys(state.tables)\r\n                .reduce((acc, key) => {\r\n                    console.log(state.tables[key])\r\n                    if (state.tables[key].table_id !== action.tableId) {\r\n                        acc[key] = { ...state.tables[key] }\r\n                    }\r\n                    return acc\r\n                }, {})\r\n            // const filteredTablesState = Object.keys(state.tables)\r\n            // .filter((key) =>\r\n            //     state.tables[key] !== '0'\r\n            // )\r\n            console.log(filteredTablesState)\r\n\r\n            return {\r\n                tables: {\r\n                    ...filteredTablesState,\r\n                    ...returnedTableNewId\r\n                }\r\n            }\r\n\r\n        case DELETE_TABLE:\r\n            console.log('In Reducer DELETE_TABLE...')\r\n\r\n            const deleteTablesState = Object.keys(state.tables)\r\n                .reduce((acc, key) => {\r\n                    console.log('Reducer key = ' + key)\r\n                    console.log('TableId to delete = ' + String(action.tableId))\r\n                    console.log(acc)\r\n                    if (key !== String(action.tableId)) {\r\n                        acc[key] = {\r\n                            ...state.tables[key],\r\n                            rows: [...state.tables[key].rows],\r\n                            columns: [...state.tables[key].columns],\r\n                            cells: [...state.tables[key].cells],\r\n                        }\r\n                    }\r\n                    return acc\r\n                }, {})\r\n\r\n            console.log(deleteTablesState)\r\n            return {\r\n                tables: {\r\n                    ...deleteTablesState\r\n                }\r\n            }\r\n\r\n        default:\r\n            console.log('In Reducer Default State Handling')\r\n            const returnedTableDefault =\r\n            {\r\n                [action.tableId]:\r\n                    newTableState.table\r\n            }\r\n\r\n            return {\r\n                tables: {\r\n                    ...newTablesState,\r\n                    ...returnedTableDefault\r\n                }\r\n            }\r\n    }\r\n\r\n\r\n\r\n    // if (action.type === 'UPDATE_TABLE_PROP' && action.attribute === 'table_id') {\r\n    //     newTablesState = Object.keys(state.tables)\r\n    //         .filter((key) =>\r\n    //             state.tables[key] !== '0'\r\n    //         )\r\n    // }\r\n\r\n    // if (action.type === 'DELETE_TABLE') {\r\n    //     console.log('DELETE_TABLE...')\r\n\r\n    //     const deleteTablesState = Object.keys(state.tables)\r\n    //         .reduce((acc, key) => {\r\n    //             console.log('Reducer key = ' + key)\r\n    //             console.log('TableId to delete = ' + String(action.tableId))\r\n    //             console.log(acc)\r\n    //             if (key !== String(action.tableId)) {\r\n    //                 acc[key] = {\r\n    //                     ...state.tables[key],\r\n    //                     rows: [...state.tables[key].rows],\r\n    //                     columns: [...state.tables[key].columns],\r\n    //                     cells: [...state.tables[key].cells],\r\n    //                 }\r\n    //             }\r\n    //             return acc\r\n    //         }, {})\r\n\r\n    //     console.log(deleteTablesState)\r\n    //     return {\r\n    //         tables: {\r\n    //             ...deleteTablesState\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // if (action.type === 'PERSIST') {\r\n    //     console.log('PERSIST...')\r\n    // console.log('...Deleted table key = ' + JSON.stringify(newTablesState, null, 4))\r\n\r\n    // }\r\n}\r\n\r\nexport default reducer;\r\n","/**\r\n * Get Wordpress Dependencies\r\n */\r\nimport { addQueryArgs } from \"@wordpress/url\";\r\nimport apiFetch from \"@wordpress/api-fetch\";\r\nimport { store as coreStore } from \"@wordpress/core-data\"\r\nimport { numberToLetter } from '../utils';\r\n\r\n\r\n// import { hydrate } from \"./actions\";\r\n\r\nfunction computeCellId(fetchedCells) {\r\n    fetchedCells.forEach((cell) => {\r\n        cell.cell_id = numberToLetter(cell.column_id) + cell.row_id\r\n        console.log(cell)\r\n    });\r\n    return {\r\n        fetchedCells\r\n    }\r\n}\r\n\r\nexport const getTable =\r\n    (tableId, isTableStale) =>\r\n        async ({ dispatch, registry }) => {\r\n            console.log('            ...Resolver - Before fetch')\r\n            console.log('            ...Table ID = ' + tableId)\r\n            console.log('            ...Table Stale = ' + isTableStale)\r\n            // if (blockTableStatus === 'New' || blockTableStatus === 'Saved' || tableId == '0') {\r\n            if (!isTableStale || tableId == '0') {\r\n                console.log('Bypassing API Call')\r\n                return\r\n            }\r\n            try {\r\n                const tableEntity =\r\n                    await registry\r\n                        .resolveSelect(coreStore)\r\n                        .getEntityRecord(\r\n                            'dynamic-tables/v1',\r\n                            'table',\r\n                            tableId\r\n                        )\r\n\r\n                const table = tableEntity\r\n                const table_id = table.id;\r\n                const block_table_ref = table.header.block_table_ref;\r\n                const post_id = table.header.post_id;\r\n                const table_name = table.header.table_name;\r\n                const table_attributes = table.header.attributes;\r\n                const table_classes = table.header.classes;\r\n                const rows = table.rows;\r\n                const columns = table.columns;\r\n                computeCellId(table.cells);\r\n                const cells = table.cells;\r\n\r\n                dispatch.receiveTable(table_id, block_table_ref, post_id, table_name, table_attributes, table_classes, rows, columns, cells);\r\n            } catch (error) {\r\n                console.log('            ...Resolver - async error - ' + JSON.stringify(error, null, 4));\r\n            }\r\n            console.log('            Resolver - async completed');\r\n\r\n        }\r\n","import { createRegistrySelector } from \"@wordpress/data\";\r\nimport { store as coreStore } from \"@wordpress/core-data\"\r\n\r\nexport function getTable(state, tableId, isTableStale) {\r\n\r\n    console.log('Selector...GetTable ' + tableId)\r\n    console.log('        ...Current Table Stale ' + isTableStale)\r\n    console.log(state)\r\n\r\n    if (!state.tables.hasOwnProperty(tableId)) {\r\n        console.log('State not defined')\r\n        return {\r\n            table_id: tableId,\r\n            block_table_ref: '',\r\n            post_id: '',\r\n            table_status: '',\r\n            table_name: '',\r\n            table_attributes: [],\r\n            table_classes: '',\r\n            rows: [],\r\n            columns: [],\r\n            cells: []\r\n        }\r\n    }\r\n\r\n    return state.tables[tableId]\r\n}\r\n\r\nexport function getTables(state) {\r\n    return state.tables\r\n\r\n}\r\n\r\nexport function getNewTableIdByBlock(state, block_table_ref) {\r\n    const newTable = Object.keys(state.tables)\r\n        .reduce((acc, key) => {\r\n            if (state.tables[key]?.block_table_ref === block_table_ref) {\r\n                console.log({ ...state.tables[key]?.block_table_ref })\r\n                acc[key] = { ...state.tables[key] }\r\n            }\r\n            return acc\r\n        }, {})\r\n\r\n    if (newTable.length === 0) {\r\n        return false\r\n    }\r\n    return Object.keys(newTable)\r\n}\r\n\r\n/**\r\n * Return all tables that are associated with unmounted blocks\r\n * \r\n * @param {*} state \r\n * @returns \r\n */\r\nexport function getUnmountedTables(state) {\r\n    console.log(state.tables)\r\n    const unmountedTables = Object.keys(state.tables)\r\n        .reduce((acc, key) => {\r\n            if (state.tables[key].unmounted_blockid) {\r\n                acc[key] = { ...state.tables[key] }\r\n            }\r\n            return acc\r\n        }, {})\r\n    return unmountedTables\r\n}\r\n\r\nexport function getDeletedTables(state) {\r\n    const deletedTables = Object.keys(state.tables)\r\n        .reduce((acc, key) => {\r\n            console.log(state.tables[key].table_status)\r\n            if (state.tables[key].table_status === 'deleted') {\r\n                acc[key] = { ...state.tables[key] }\r\n            }\r\n            return acc\r\n        }, {})\r\n    return deletedTables\r\n}\r\n\r\nexport function getUnsavedTables(state) {\r\n    const deletedTables = Object.keys(state.tables)\r\n        .reduce((acc, key) => {\r\n            console.log(state.tables[key].table_status)\r\n            if (state.tables[key].table_status === 'new') {\r\n                acc[key] = { ...state.tables[key] }\r\n            }\r\n            return acc\r\n        }, {})\r\n    return deletedTables\r\n}\r\n\r\nexport function getTableBlockId(state) {\r\n\r\n}\r\n\r\nexport const getTableTest = createRegistrySelector(\r\n    // (select) => (state, tableId) => {\r\n    (select) => () => {\r\n\r\n        return select(coreStore).getEntityRecord(\r\n            'dynamic-tables/v1',\r\n            'table',\r\n            '18'\r\n        )\r\n    });\r\n","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n */\nimport { useSelect, useDispatch, dispatch } from \"@wordpress/data\";\nimport { useState, useEffect, useRef } from \"@wordpress/element\"\nimport { usePrevious } from \"@wordpress/compose\";\nimport { __ } from '@wordpress/i18n';\nimport {\n\tForwardedRef\n} from 'react';\nimport {\n\tPanel,\n\tPanelBody,\n\tPanelRow,\n\tTabbableContainer,\n\tButton,\n\tTextControl,\n\tSpinner,\n\tPlaceholder,\n\tToggleControl,\n\tCheckboxControl,\n\tDropdownMenu,\n\tMenuGroup,\n\tMenuItem,\n\t__experimentalNumberControl as NumberControl\n} from '@wordpress/components';\nimport {\n\tRichText,\n\tBlockIcon,\n\tAlignmentToolbar,\n\tInspectorControls,\n\tBlockControls,\n\tuseBlockProps\n} from '@wordpress/block-editor';\nimport {\n\tcolumn,\n\t// alignLeft,\n\t// alignRight,\n\t// alignCenter,\n\tblockTable as icon\n\t// tableColumnAfter,\n\t// tableColumnBefore,\n\t// tableColumnDelete,\n\t// tableRowAfter,\n\t// tableRowBefore,\n\t// tableRowDelete,\n\t// table,\n\t// moreVertical,\n\t// more,\n\t// arrowLeft,\n\t// arrowRight,\n\t// arrowUp,\n\t// arrowDown,\n\t// trash\n} from '@wordpress/icons';\n\n\n/**\n *  * Internal Dependencies\n */\nimport { store as tableStore } from './data';\nimport { usePostChangesSaved } from './hooks';\nimport {\n\tnumberToLetter,\n\tgenerateBlockTableRef,\n\tinitTable,\n\tinitTableCells,\n\tgetDefaultRow,\n\tgetDefaultColumn,\n\tgetDefaultCell,\n\tgetDefaultTableClasses,\n\tgetDefaultTableAttributes\n} from './utils';\nimport { ColumnMenu } from './components';\n// import TABLE_ATTRIBUTE_TYPES from './constants'\nimport './editor.scss';\n\nexport default function Edit(props) {\n\n\tconst blockProps = useBlockProps({\n\t\tclassName: \"dynamic-table-edit-block\"\n\t})\n\n\t/**\n\t * Table Store Action useDispatch declarations\n\t */\n\tconst { receiveNewTable } = useDispatch(tableStore);\n\tconst { createTableEntity } = useDispatch(tableStore);\n\tconst { deleteTable } = useDispatch(tableStore);\n\tconst { addColumn } = useDispatch(tableStore);\n\tconst { addRow } = useDispatch(tableStore);\n\tconst { removeColumn } = useDispatch(tableStore);\n\tconst { removeRow } = useDispatch(tableStore);\n\tconst { updateTableProp } = useDispatch(tableStore);\n\tconst { removeTableProp } = useDispatch(tableStore);\n\tconst { updateRow } = useDispatch(tableStore);\n\tconst { updateColumn } = useDispatch(tableStore);\n\tconst { updateCell } = useDispatch(tableStore);\n\tconst { updateTableEntity } = useDispatch(tableStore);\n\tconst { updateTableBorder } = useDispatch(tableStore);\n\tconst { processUnmountedTables } = useDispatch(tableStore);\n\tconst { processDeletedTables } = useDispatch(tableStore);\n\n\t/**\n\t * Local State declarations\n\t */\n\tconst [isTableStale, setTableStale] = useState(true);\n\tconst [openColumnRow, setOpenColumnRow] = useState(0);\n\tconst [tablePropAttributes, setTablePropAttributes] = useState({});\n\tconst [columnAttributes, setColumnAttributes] = useState({});\n\tconst [columnMenuVisible, setColumnMenuVisible] = useState(false);\n\tconst [rowMenuVisible, setRowMenuVisible] = useState(false);\n\tconst [openRowColumn, setOpenRowColumn] = useState(0);\n\tconst [rowAttributes, setRowAttributes] = useState({});\n\tconst [render, setRender] = useState(0);\n\tconst [showBorders, setShowBorders] = useState(false);\n\t// const [showBandedRows, setshowBandedRows] = useState(false);\n\tconst [numColumns, setNumColumns] = useState(2);\n\tconst [numRows, setNumRows] = useState(2);\n\tconst [gridCells, setGridCells] = useState([]);\n\tconst [awaitingTableEntityCreation, setAwaitingTableEntityCreation] = useState(false);\n\n\tconst priorTableRef = useRef({});\n\tconst { table_id, block_table_ref } = props.attributes;\n\n\tconsole.log('Block Table Ref - ' + block_table_ref)\n\n\t/**\n\t * Load entity framework for table entity type\n\t */\n\tuseEffect(() => {\n\t\tdispatch('core').addEntities([\n\t\t\t{\n\t\t\t\tname: 'table',\n\t\t\t\tkind: 'dynamic-tables/v1',\n\t\t\t\tbaseURL: '/dynamic-tables/v1/table'\n\t\t\t}\n\t\t]);\n\t}, []);\n\n\t/**\n\t * Table blocks unmounted when entering the text editor AND when deleted.  However, \n\t * don't know whether the table was deleted when an unmount is detected.  Therefore, \n\t * we mark them as unmounted at that time, and can identify whether the block was \n\t * truly deleted on the subsequent render.\n\t * \n\t * We mark tables as deleted if they do not identify that the block has been remounted \n\t */\n\tconst { unmountedTables } = useSelect(\n\t\t(select) => {\n\t\t\tconst { getUnmountedTables } = select(tableStore);\n\t\t\treturn {\n\t\t\t\tunmountedTables: getUnmountedTables()\n\t\t\t}\n\t\t})\n\n\tif (Object.keys(unmountedTables).length > 0) {\n\t\tprocessUnmountedTables(unmountedTables)\n\t}\n\n\tconst { deletedTables } = useSelect(\n\t\t(select) => {\n\t\t\tconst { getDeletedTables } = select(tableStore);\n\t\t\treturn {\n\t\t\t\tdeletedTables: getDeletedTables()\n\t\t\t}\n\t\t})\n\n\tconst postChangesAreSaved = usePostChangesSaved()\n\tconsole.log(postChangesAreSaved)\n\tconsole.log(unmountedTables)\n\tuseEffect(() => {\n\t\tif (postChangesAreSaved) {\n\t\t\talert('Sync REST Now')\n\t\t\t/**\n\t\t\t * Remove deleted tables from persisted store\n\t\t\t */\n\t\t\tif (Object.keys(deletedTables).length > 0) {\n\t\t\t\tconsole.log(deletedTables)\n\t\t\t\tprocessDeletedTables(deletedTables)\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Update status of new tables to saved\n\t\t\t */\n\t\t\tif (table.table_status == 'new') {\n\t\t\t\tconsole.log('Saving new table - ' + table.table_id)\n\t\t\t\tsetTableAttributes(table.table_id, 'table_status', '', 'PROP', 'saved')\n\t\t\t\tconsole.log(table)\n\t\t\t}\n\n\t\t}\n\n\t}, [postChangesAreSaved, unmountedTables]);\n\n\tconst setBlockTableStatus = () => {\n\t\tif (block_table_ref === '') {\n\t\t\treturn 'None'\n\t\t}\n\n\t\tif (table_id === '0') {\n\t\t\treturn 'New'\n\t\t}\n\n\t\tif (isTableStale) {\n\t\t\treturn 'Stale'\n\t\t}\n\n\t\treturn 'Saved'\n\t}\n\n\tconst setNewBlock = () => {\n\t\tif (block_table_ref === '') {\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tconst isNewBlock = setNewBlock()\n\tconst blockTableStatus = setBlockTableStatus();\n\n\t/**\n\t * Retrieve table entity from table webservice and load table store\n\t */\n\tconst {\n\t\ttable,\n\t\ttableStatus,\n\t\ttableHasStartedResolving,\n\t\ttableHasFinishedResolving,\n\t\ttableIsResolving\n\t} = useSelect(\n\t\t(select) => {\n\t\t\tconsole.log('Table ID = ' + table_id + ', Stale = ' + isTableStale + ', Block Table Ref = ' + block_table_ref);\n\t\t\tconst { getTable, getNewTableIdByBlock, hasStartedResolution, hasFinishedResolution, isResolving } = select(tableStore);\n\t\t\tconst selectorArgs = [table_id, isTableStale]\n\n\t\t\tif (block_table_ref === '') {\n\t\t\t\treturn {\n\t\t\t\t\ttable: {},\n\t\t\t\t\ttableStatus: '',\n\t\t\t\t\ttableHasStartedResolving: false,\n\t\t\t\t\ttableHasFinishedResolving: false,\n\t\t\t\t\ttableIsResolving: false\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst getBlockTable = (table_id, isTableStale, block_table_ref) => {\n\t\t\t\tlet selectedTable = getTable(table_id, isTableStale);\n\t\t\t\tconsole.log(selectedTable)\n\t\t\t\tif (table_id === '0' && selectedTable.block_table_ref.length === 0 && awaitingTableEntityCreation) {\n\t\t\t\t\tconst newTableId = getNewTableIdByBlock(block_table_ref);\n\t\t\t\t\tselectedTable = getTable(newTableId, isTableStale);\n\t\t\t\t\tsetAwaitingTableEntityCreation(false)\n\t\t\t\t\tprops.setAttributes({ table_id: Number(selectedTable.table_id) })\n\t\t\t\t}\n\t\t\t\treturn selectedTable;\n\t\t\t};\n\n\t\t\tconst blockTable = getBlockTable(table_id, isTableStale, block_table_ref)\n\t\t\tconst tableHasStartedResolving = hasStartedResolution('getTable', selectorArgs)\n\t\t\tconst tableHasFinishedResolving = hasFinishedResolution('getTable', selectorArgs)\n\t\t\tconst tableIsResolving = isResolving('getTable', selectorArgs)\n\n\t\t\tif (tableHasFinishedResolving) {\n\t\t\t\tsetTableStale(() => false)\n\t\t\t}\n\n\t\t\t// console.log('isTableStale = ' + isTableStale)\n\t\t\t// console.log('tableHasStartedResolving = ' + hasStartedResolution('getTable', selectorArgs))\n\t\t\t// console.log('tableHasFinishedResolving = ' + hasFinishedResolution('getTable', selectorArgs))\n\t\t\t// console.log('tableIsResolving = ' + isResolving('getTable', selectorArgs))\n\n\t\t\treturn {\n\t\t\t\ttable: blockTable,\n\t\t\t\ttableStatus: blockTable.table_status,\n\t\t\t\ttableHasStartedResolving: tableHasStartedResolving,\n\t\t\t\ttableHasFinishedResolving: tableHasFinishedResolving,\n\t\t\t\ttableIsResolving: tableIsResolving\n\t\t\t};\n\t\t},\n\t\t[\n\t\t\ttable_id,\n\t\t\tisTableStale,\n\t\t\tblock_table_ref\n\t\t]\n\t);\n\n\tfunction getTablePropAttribute(tableAttributes, attributeName) {\n\t\tconst attributeValue = tableAttributes?.[attributeName]\n\t\treturn attributeValue\n\t}\n\n\tconst showGridLines = getTablePropAttribute(table.table_attributes, 'showGridLines')\n\tconst bandedRows = getTablePropAttribute(table.table_attributes, 'bandedRows')\n\tconst gridLineWidth = getTablePropAttribute(table.table_attributes, 'gridLineWidth')\n\tconst horizontalAlignment = getTablePropAttribute(table.table_attributes, 'horizontalAlignment')\n\tconst verticalAlignment = getTablePropAttribute(table.table_attributes, 'verticalAlignment')\n\n\t/**\n\t * Perform clean-up for deleted table block at time of deletion\n\t */\n\tuseEffect(() => {\n\n\t\treturn () => {\n\t\t\tsetTableAttributes(table.table_id, 'unmounted_blockid', '', 'PROP', blockProps[\"data-block\"], false)\n\t\t};\n\t}, [])\n\n\tconst tableColumnLength = (JSON.stringify(table.table) === '{}' || blockTableStatus == 'None') ? 0 : table.columns.length\n\tconst tableRowLength = (JSON.stringify(table.table) === '{}' || blockTableStatus == 'None') ? 0 : table.rows.length\n\n\t/**\n\t * Set state for number of columns and rows when the number of table rows has changes\n\t * \n\t * TODO: Verify this is still needed following update to table store to track all tables in editor\n\t */\n\tuseEffect(() => {\n\t\tif (tableColumnLength != numColumns) {\n\t\t\tsetNumColumns(tableColumnLength);\n\t\t}\n\t\tif (tableRowLength != numRows) {\n\t\t\tsetNumRows(tableRowLength);\n\t\t}\n\t},\n\t\t[tableColumnLength, tableRowLength]\n\t)\n\n\tconsole.log('Table ID from Block - ' + table_id);\n\tconsole.log('Block Table Ref from Block - ' + block_table_ref);\n\n\t/**\n\t * Called upon event to add a column\n\t * \n\t * @param {*} tableId \n\t * @param {*} columnId \n\t * @returns \n\t */\n\tfunction insertColumn(tableId, columnId) {\n\t\tconst newColumn = getDefaultColumn(tableId, columnId)\n\t\tvar tableCells = []\n\n\t\tfor (let i = 1; i < numRows; i++) {\n\t\t\tconsole.log('Creating column row = ' + i)\n\t\t\tif (i === 0) {\n\t\t\t\tlet cell = getDefaultCell(tableId, columnId, i, 'Border')\n\t\t\t\ttableCells.push(cell)\n\t\t\t} else {\n\t\t\t\tlet cell = getDefaultCell(tableId, columnId, i)\n\t\t\t\ttableCells.push(cell)\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('ADDING COLUMN')\n\t\tconsole.log('ColumnId = ' + columnId)\n\t\tconsole.log(newColumn)\n\t\tconsole.log(tableCells)\n\n\t\taddColumn(columnId, newColumn, tableCells)\n\n\t\tconsole.log('Update coreStore');\n\t\tsetTableStale(false)\n\t\treturn (updateTableEntity(tableId));\n\t}\n\n\t/**\n\t * Called upon event to delete a column\n\t * \n\t * @param {*} tableId \n\t * @param {*} columnId \n\t * @returns \n\t */\n\tfunction deleteColumn(tableId, columnId) {\n\t\tconsole.log('Deleting Column - ' + columnId)\n\t\tremoveColumn(columnId)\n\n\t\tconsole.log('Update coreStore');\n\t\tsetTableStale(false)\n\t\treturn (updateTableEntity(tableId));\n\t}\n\n\t/**\n\t * Update table store to reflect changes made to EXISTING table attributes\n\t * \n\t * \n\t * @param {*} tableId - Id of table to update\n\t * @param {*} attribute - Table Object Attribute\n\t * @param {*} id - Array Index Id\n\t * @param {*} type - See Below\n\t * @param {*} value - New attribute value\n\t * @param {*} persist - Write update to entity record\n\t * @returns \n\t * \n\t * Valid Types:\n\t * - CONTENT - Cell Content\n\t * - ATTRIBUTES - Array of attributes\n\t * - CLASSES - Array of Classes\n\t * - PROP - Table Property\n\t */\n\n\tfunction setTableAttributes(tableId, attribute, id, type, value, persist = true) {\n\n\t\tconsole.log('Table Attribute Change: attribute - ' + attribute + ', id - ' + id + ', type - ' + type + ', value - ' + value)\n\t\tlet updatedTable;\n\n\t\tswitch (type) {\n\t\t\tcase 'CONTENT':\n\t\t\t\t{\n\t\t\t\t\tif (attribute === 'cell') {\n\t\t\t\t\t\tupdateCell(tableId, id, 'content', value)\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'ATTRIBUTES':\n\t\t\t\t{\n\t\t\t\t\tif (attribute === 'cell') {\n\t\t\t\t\t\tconsole.log('...Updating Cell')\n\t\t\t\t\t\tupdateCell(id, 'attributes', value)\n\t\t\t\t\t} else if (attribute === 'column') {\n\t\t\t\t\t\tconsole.log('...Updating Column')\n\t\t\t\t\t\tconsole.log(value)\n\t\t\t\t\t\tsetColumnAttributes(value)\n\t\t\t\t\t\tupdateColumn(id, 'attributes', value)\n\t\t\t\t\t} else if (attribute === 'table') {\n\t\t\t\t\t\tconsole.log('...Updating Table Attributes')\n\t\t\t\t\t\tconsole.log(value)\n\t\t\t\t\t\tupdateTableProp(tableId, 'table_attributes', value)\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'CLASSES':\n\t\t\t\t{\n\t\t\t\t\tif (attribute === 'cell') {\n\t\t\t\t\t\tupdateCell(id, 'classes', value)\n\t\t\t\t\t} else if (attribute === 'column') {\n\t\t\t\t\t\tupdateColumn(id, 'classes', value)\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'PROP':\n\t\t\t\t{\n\t\t\t\t\tupdateTableProp(tableId, attribute, value)\n\t\t\t\t\t// if (attribute === 'table_name') {\n\t\t\t\t\t// \tupdateTableProp(tableId, 'table_name', value)\n\t\t\t\t\t// }\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.log('Unrecognized Attibute Type')\n\t\t}\n\t\tconsole.log('Update coreStore');\n\t\tsetTableStale(false)\n\t\t// console.log(updatedTable);\n\t\tif (persist) {\n\t\t\treturn (updateTableEntity(tableId));\n\t\t}\n\t}\n\n\t/**\n\t * Add/remove grid control column and row when table attribute of \"Show Grid\" is checked\n\t * \n\t * @param {*} table \n\t * @param {*} isChecked \n\t * @returns \n\t */\n\tfunction onToggleBorders(table, isChecked) {\n\n\t\tconsole.log('TOGGLING BORDER')\n\t\tconsole.log(table);\n\t\tconsole.log('Number Columns before update = ' + numColumns)\n\n\t\tif (isChecked === false) {\n\t\t\tsetNumColumns(numColumns - 1)\n\t\t\tsetNumRows(numRows - 1)\n\n\t\t\tvar updatedRows = table.rows\n\t\t\t\t.filter((row) =>\n\t\t\t\t\trow.row_id !== '0'\n\t\t\t\t)\n\n\t\t\tvar updatedColumns = table.columns\n\t\t\t\t.filter((column) =>\n\t\t\t\t\tcolumn.column_id !== '0'\n\t\t\t\t)\n\n\t\t\tvar updatedCells = table.cells\n\t\t\t\t.filter((cell) =>\n\t\t\t\t\tcell.row_id !== '0' && cell.column_id !== '0'\n\t\t\t\t)\n\n\t\t\tconsole.log(updatedCells)\n\t\t\tupdateTableBorder(table.table_id, updatedRows, updatedColumns, updatedCells)\n\n\n\t\t} else {\n\t\t\tsetNumColumns(numColumns + 1)\n\t\t\tsetNumRows(numRows + 1)\n\n\t\t\tvar rowBorder = [{\n\t\t\t\ttable_id: String(table_id),\n\t\t\t\trow_id: '0',\n\t\t\t\trow_name: 'Border',\n\t\t\t\tattributes: '',\n\t\t\t\tclasses: ''\n\t\t\t}]\n\n\t\t\tvar rowCells = []\n\n\t\t\tlet cellAttributes = {\n\t\t\t\tborder: \"true\"\n\t\t\t}\n\n\t\t\tconsole.log('Number Columns = ' + numColumns)\n\t\t\tfor (let i = 0; i <= numColumns; i++) {\n\t\t\t\tlet columnLetter = numberToLetter(i)\n\t\t\t\tconsole.log('Creating Border Column - ' + columnLetter)\n\n\t\t\t\tlet cell = {\n\t\t\t\t\ttable_id: String(table_id),\n\t\t\t\t\tcolumn_id: String(i),\n\t\t\t\t\trow_id: '0',\n\t\t\t\t\tcell_id: columnLetter + '0',\n\t\t\t\t\tattributes: cellAttributes,\n\t\t\t\t\tclasses: 'border hover',\n\t\t\t\t\tcontent: columnLetter\n\t\t\t\t}\n\t\t\t\trowCells.push(cell);\n\t\t\t}\n\n\t\t\tconst borderColumnAttributes = {\n\t\t\t\tcolumnWidthType: 'Fixed',\n\t\t\t\tminWidth: 0,\n\t\t\t\tminWidthUnits: '',\n\t\t\t\tmaxWidth: 0,\n\t\t\t\tmaxWidthUnits: '',\n\t\t\t\tfixedWidth: 20,\n\t\t\t\tfixedWidthUnits: 'px',\n\t\t\t\tdisableForTablet: false,\n\t\t\t\tdisableForPhone: false,\n\t\t\t\tisFixedLeftColumnGroup: false,\n\t\t\t\thorizontalAlignment: 'center'\n\t\t\t}\n\n\t\t\tvar columnBorder = [{\n\t\t\t\ttable_id: String(table_id),\n\t\t\t\tcolumn_id: '0',\n\t\t\t\tcolumn_name: 'Border',\n\t\t\t\tattributes: borderColumnAttributes,\n\t\t\t\tclasses: ''\n\t\t\t}]\n\n\t\t\tvar columnCells = []\n\n\t\t\tfor (let i = 1; i <= numRows; i++) {\n\n\t\t\t\tlet cell = {\n\t\t\t\t\ttable_id: String(table_id),\n\t\t\t\t\tcolumn_id: '0',\n\t\t\t\t\trow_id: String(i),\n\t\t\t\t\tcell_id: '0' + String(i),\n\t\t\t\t\tattributes: cellAttributes,\n\t\t\t\t\tclasses: 'border hover',\n\t\t\t\t\tcontent: String(i)\n\t\t\t\t}\n\t\t\t\tcolumnCells.push(cell);\n\t\t\t}\n\n\t\t\tvar updatedRows = [...table.rows, ...rowBorder]\n\t\t\tupdatedRows.sort((a, b) => {\n\t\t\t\tif ([a.row_id] < [b.row_id]) {\n\t\t\t\t\treturn -1\n\t\t\t\t} else {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tvar updatedColumns = [...table.columns, ...columnBorder]\n\t\t\tupdatedColumns.sort((a, b) => {\n\t\t\t\tif ([a.column_id] < [b.column_id]) {\n\t\t\t\t\treturn -1\n\t\t\t\t} else {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tvar updatedCells = [...table.cells, ...rowCells, ...columnCells]\n\t\t\tupdatedCells.sort((a, b) => {\n\t\t\t\tif ([[a.row_id], [a.column_id]] < [[b.row_id], [b.column_id]]) {\n\t\t\t\t\treturn -1\n\t\t\t\t} else {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tconsole.log('Row border - ' + JSON.stringify(rowBorder, null, 4));\n\t\t\tconsole.log('Column border - ' + JSON.stringify(columnBorder, null, 4));\n\t\t\tconsole.log('Updated columns - ' + JSON.stringify(updatedColumns, null, 4));\n\t\t\tconsole.log('Updated cells - ' + JSON.stringify(updatedCells, null, 4));\n\n\t\t\tupdateTableBorder(table.table_id, updatedRows, updatedColumns, updatedCells)\n\t\t}\n\n\t\tsetShowBorders(isChecked);\n\t\tsetTableStale(false)\n\t\treturn;\n\t}\n\n\t/**\n\t * Establish grid css grid-template-columns based upon attributes associated with columns\n\t * \n\t * @param {*} isNewBlock \n\t * @param {*} tableIsResolving \n\t * @param {*} columns \n\t * @returns \n\t */\n\tfunction processColumns(isNewBlock, tableIsResolving, columns) {\n\t\tif (isNewBlock || tableIsResolving) {\n\t\t\treturn undefined\n\t\t}\n\n\t\tlet newGridColumnStyle = ''\n\t\t{\n\t\t\tcolumns.map(({ column_id, column_name, attributes, classes }) => {\n\t\t\t\tconsole.log('Column ID - ' + newGridColumnStyle)\n\t\t\t\tconsole.log(attributes)\n\t\t\t\tconst { columnWidthType,\n\t\t\t\t\tminWidth,\n\t\t\t\t\tminWidthUnits,\n\t\t\t\t\tmaxWidth,\n\t\t\t\t\tmaxWidthUnits,\n\t\t\t\t\tfixedWidth,\n\t\t\t\t\tfixedWidthUnits,\n\t\t\t\t\tdisableForTablet,\n\t\t\t\t\tdisableForPhone,\n\t\t\t\t\tisFixedLeftColumnGroup,\n\t\t\t\t\thorizontalAlignment\n\t\t\t\t} = attributes;\n\n\t\t\t\tlet sizing = '';\n\n\t\t\t\tswitch (columnWidthType) {\n\t\t\t\t\tcase 'Proportional':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (minWidth > 0) {\n\t\t\t\t\t\t\t\tsizing = 'minmax(' + minWidth + minWidthUnits + ', ' + maxWidth + 'fr) '\n\t\t\t\t\t\t\t} else (\n\t\t\t\t\t\t\t\t// sizing = '1fr '\n\t\t\t\t\t\t\t\tsizing = maxWidth + 'fr '\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tnewGridColumnStyle = newGridColumnStyle + sizing;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'Auto':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewGridColumnStyle = newGridColumnStyle + 'auto ';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'Fixed':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewGridColumnStyle = newGridColumnStyle + fixedWidth + fixedWidthUnits + ' ';\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'Custom':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsizing = 'minmax(' + minWidth + minWidthUnits + ', ' + maxWidth + maxWidthUnits + ') '\n\t\t\t\t\t\t\tnewGridColumnStyle = newGridColumnStyle + sizing;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.log('Unrecognized Attibute Type')\n\t\t\t\t}\n\n\t\t\t\t// if (column_id === '0') {\n\t\t\t\t// \tnewGridColumnStyle = newGridColumnStyle + '20px ';\n\t\t\t\t// } else {\n\t\t\t\t// \tnewGridColumnStyle = newGridColumnStyle + 'auto ';\n\t\t\t\t// }\n\t\t\t})\n\t\t}\n\t\tconsole.log('grid-template-columns = ' + newGridColumnStyle)\n\t\t// setTableStale(false)\n\t\treturn newGridColumnStyle\n\t}\n\n\t/**\n\t * Establish grid css grid-template-rowss based upon attributes associated with rows\n\t * \n\t * @param {*} isNewBlock \n\t * @param {*} tableIsResolving \n\t * @param {*} rows \n\t * @returns \n\t */\n\tfunction processRows(isNewBlock, tableIsResolving, rows) {\n\t\tif (isNewBlock || tableIsResolving) {\n\t\t\treturn undefined\n\t\t}\n\n\t\tlet newGridRowStyle = ''\n\t\t{\n\t\t\trows.map(({ row_id, attributes, classes }) => {\n\t\t\t\tconsole.log('Row ID - ' + newGridRowStyle)\n\t\t\t\tif (row_id === '0') {\n\t\t\t\t\tnewGridRowStyle = newGridRowStyle + '25px ';\n\t\t\t\t} else {\n\t\t\t\t\tnewGridRowStyle = newGridRowStyle + 'auto ';\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\t// setTableStale(false)\n\t\treturn newGridRowStyle\n\t}\n\n\tfunction createTable(columnCount, rowCount) {\n\n\t\tconsole.log('FUNCTION - CREATE TABLE')\n\t\tconsole.log('InitialRows - ' + rowCount)\n\t\tconsole.log('InitialColumns - ' + columnCount)\n\n\t\tvar newBlockTableRef = generateBlockTableRef()\n\t\tconst newTable = initTable(newBlockTableRef, columnCount, rowCount)\n\n\t\tconsole.log(JSON.stringify(newTable, null, 4));\n\t\tprops.setAttributes({ block_table_ref: newBlockTableRef })\n\t\treceiveNewTable(newTable)\n\t\tsetAwaitingTableEntityCreation(true)\n\t\tcreateTableEntity();\n\t\t//\t\tsetBlockTableStatus('New');\n\t}\n\n\tfunction onCreateTable(event) {\n\t\tevent.preventDefault();\n\t\tcreateTable(numColumns, numRows)\n\t}\n\n\tfunction onChangeInitialColumnCount(num_columns) {\n\t\tconsole.log(num_columns)\n\t\tsetNumColumns(num_columns)\n\t}\n\n\tfunction onChangeInitialRowCount(num_rows) {\n\t\tconsole.log(num_rows)\n\t\tsetNumRows(num_rows)\n\t}\n\n\tfunction onUpdateColumn(event, updateType, tableId, columnId, updatedColumnAttributes) {\n\t\tconsole.log('    ...onUpdateColumn');\n\t\tconsole.log(event);\n\t\tconsole.log(updatedColumnAttributes);\n\n\t\tswitch (updateType) {\n\t\t\tcase 'attributes':\n\t\t\t\t{\n\t\t\t\t\tsetTableAttributes(tableId, 'column', columnId, 'ATTRIBUTES', updatedColumnAttributes);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'insert':\n\t\t\t\t{\n\t\t\t\t\tonToggleBorders(false)\n\t\t\t\t\tsetOpenColumnRow(0);\n\t\t\t\t\tsetColumnMenuVisible(false);\n\t\t\t\t\tinsertColumn(tableId, columnId);\n\t\t\t\t\t// onToggleBorders(true)\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\t\t\tcase 'delete':\n\t\t\t\t{\n\t\t\t\t\tonToggleBorders(false)\n\t\t\t\t\tsetOpenColumnRow(0);\n\t\t\t\t\tsetColumnMenuVisible(false);\n\t\t\t\t\tdeleteColumn(tableId, columnId);\n\t\t\t\t\t// onToggleBorders(true)\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.log('Unrecognized Column Update Type')\n\t\t}\n\t\tsetShowBorders(false);\n\t\tconsole.log('Show Borders = ' + showBorders)\n\n\t}\n\n\tfunction onMouseColumnClick(column_id, row_id, table, event) {\n\n\t\tconsole.log('MOUSE CLICKED IN BORDER')\n\t\tconsole.log('Column = ' + column_id)\n\t\tconsole.log('Row = ' + row_id)\n\t\tconsole.log(table)\n\t\tconsole.log(event)\n\n\t\tif (row_id === '0' && column_id !== '0') {\n\t\t\tconsole.log('Opening Column ' + column_id)\n\t\t\tlet compareColumnId = column_id\n\t\t\tconst clickedColumn = table.columns.find(({ column_id }) => column_id === compareColumnId)\n\t\t\tconsole.log(clickedColumn)\n\t\t\tsetColumnAttributes(clickedColumn.attributes)\n\t\t\tsetColumnMenuVisible(true)\n\t\t\tsetOpenColumnRow(column_id)\n\t\t}\n\n\t\tif (row_id !== '0' && column_id === '0') {\n\t\t\tconsole.log('Opening Row ' + row_id)\n\t\t\tlet compareRowId = row_id\n\t\t\tconst clickedRow = table.columns.find(({ row_id }) => row_id === compareRowId)\n\t\t\tsetRowAttributes(clickedRow.attributes)\n\t\t\tsetRowMenuVisible(true)\n\t\t\tsetOpenColumnRow(row_id)\n\t\t}\n\t\t// alert('Mouse clicked on column')\n\t\t// return <ColumnMenu>Column Menu</ColumnMenu>\n\t\tsetTableStale(false)\n\n\t}\n\n\t/**\n\t * Show colored bands on even numbered table rows\n\t * \n\t * @param {*} table \n\t * @param {*} isChecked \n\t */\n\tfunction onShowBandedRows(table, isChecked) {\n\t\tconst updatedTableAttributes = {\n\t\t\t...table.table_attributes,\n\t\t\tbandedRows: isChecked\n\t\t}\n\t\tsetTableAttributes(table.table_id, 'table', '', 'ATTRIBUTES', updatedTableAttributes);\n\t\t// setshowBandedRows(isChecked)\n\t}\n\t// const gridStyle = \n\n\tconst gridColumnStyle = processColumns(isNewBlock, tableIsResolving, table.columns)\n\tconst gridRowStyle = processRows(isNewBlock, tableIsResolving, table.rows)\n\n\n\tconsole.log('Grid Column Style = ' + gridColumnStyle)\n\t// const gridStyle = setGridStyle(isNewBlock, tableIsResolving, table)\n\n\tconsole.log('MATCH VALUE FOR TABLE:')\n\tconsole.log(table)\n\t// console.log(isRetrievingTable(table))\n\tconsole.log(JSON.stringify(table))\n\tconsole.log('Is Block New - ' + isNewBlock)\n\tconsole.log('Block Table Status - ' + blockTableStatus);\n\tconsole.log('Is Table Resolving - ' + tableIsResolving);\n\tconsole.log('gridColumnStyle = ' + gridColumnStyle);\n\tconsole.log('gridRowStyle = ' + gridRowStyle);\n\n\tif (!tableIsResolving) {\n\t\t// console.log(table.table_attributes?.bandedRows)\n\t}\n\n\treturn (\n\t\t<div {...blockProps} >\n\n\t\t\t{!isNewBlock && !tableIsResolving && (\n\t\t\t\t<>\n\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t<Panel header=\"Table Definition head\">\n\t\t\t\t\t\t\t<PanelBody title=\"Table Definition\" initialOpen={true}>\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<TextControl label=\"Table Name\"\n\t\t\t\t\t\t\t\t\t\tvalue={table.table_name}\n\t\t\t\t\t\t\t\t\t\tonChange={e => setTableAttributes(table_id, 'table_name', '', 'PROP', e)} />\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<CheckboxControl label=\"Show table borders\"\n\t\t\t\t\t\t\t\t\t\tchecked={showBorders}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onToggleBorders(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<CheckboxControl label=\"Display Banded Rows\"\n\t\t\t\t\t\t\t\t\t\tchecked={table.table_attributes?.bandedRows}\n\t\t\t\t\t\t\t\t\t\t// checked={true}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onShowBandedRows(table, e)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<NumberControl label=\"Table Columns\" value={numColumns} labelPosition=\"side\" onChange={(e) => defineColumns(e)} />\n\t\t\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t\t\t<NumberControl label=\"Table Rows\" value={numRows} labelPosition=\"side\" onChange={(e) => defineRows(e)} />\n\t\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t</Panel>\n\t\t\t\t\t</InspectorControls>\n\n\t\t\t\t\t<div>{table.table_name}</div>\n\n\t\t\t\t\t<TabbableContainer>\n\t\t\t\t\t\t<div className=\"grid-control\" style={{ \"--gridTemplateColumns\": gridColumnStyle, \"--gridTemplateRows\": gridRowStyle }}>\n\n\t\t\t\t\t\t\t{table.cells.map(({ table_id, row_id, column_id, cell_id, content, attributes, classes }) => {\n\t\t\t\t\t\t\t\tconst isBorder = attributes.border;\n\n\t\t\t\t\t\t\t\tfunction setBorderContent(row, column, content) {\n\t\t\t\t\t\t\t\t\tif (row === '0' && column === '0') {\n\t\t\t\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn content\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfunction openCurrentColumnMenu(columnMenuVisible, openColumnRow, column_id) {\n\t\t\t\t\t\t\t\t\tif (columnMenuVisible && openColumnRow === column_id) {\n\t\t\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst borderContent = setBorderContent(row_id, column_id, content)\n\t\t\t\t\t\t\t\tconst isOpenCurrentColumnMenu = openCurrentColumnMenu(columnMenuVisible, openColumnRow, column_id)\n\n\t\t\t\t\t\t\t\tlet calculatedClasses = ''\n\t\t\t\t\t\t\t\tconsole.log(Number(row_id))\n\t\t\t\t\t\t\t\tconsole.log(Number(row_id) % 2)\n\t\t\t\t\t\t\t\tif (bandedRows) {\n\t\t\t\t\t\t\t\t\tif (Number(row_id) % 2 === 0) {\n\t\t\t\t\t\t\t\t\t\tconsole.log('...found banded row')\n\t\t\t\t\t\t\t\t\t\tcalculatedClasses = calculatedClasses + 'bandedRow '\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconsole.log('...Rendering - ' + cell_id)\n\t\t\t\t\t\t\t\tconsole.log('Calculated Classes = ' + calculatedClasses)\n\t\t\t\t\t\t\t\tconsole.log('Column Menu Visible = ' + columnMenuVisible)\n\t\t\t\t\t\t\t\tconsole.log('Open Column = ' + openColumnRow)\n\t\t\t\t\t\t\t\tconsole.log('Open Current Column Menu = ' + isOpenCurrentColumnMenu)\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{isBorder && (\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tid={cell_id}\n\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={e => onMouseColumnClick(column_id, row_id, table, e)}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes}>\n\t\t\t\t\t\t\t\t\t\t\t\t{borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t{isOpenCurrentColumnMenu && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ColumnMenu\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttableId={table_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnId={column_id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnLabel={borderContent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnAttributes={columnAttributes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdatedColumn={onUpdateColumn}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ColumnMenu>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t{!isBorder && (\n\t\t\t\t\t\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\t\t\t\t\t\tid={cell_id}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"grid-cell \" + calculatedClasses + classes}\n\t\t\t\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t\t\t\t\t\ttagName=\"div\"\n\t\t\t\t\t\t\t\t\t\t\t\t//allowedFormats={['core/bold', 'core/italic']}\n\t\t\t\t\t\t\t\t\t\t\t\t//onChange={cellContent => setGridCells([col, row, cellId, componentClass, cellContent])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setTableAttributes(table_id, 'cell', cell_id, 'CONTENT', e)}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={content}>\n\t\t\t\t\t\t\t\t\t\t\t</RichText>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</TabbableContainer>\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t{!isNewBlock && tableIsResolving && (\n\t\t\t\t<Spinner>Retrieving Table Data</Spinner>\n\t\t\t)}\n\n\n\t\t\t{isNewBlock && (\n\t\t\t\t<Placeholder\n\t\t\t\t\tlabel={__('Dynamic Table')}\n\t\t\t\t\ticon={<BlockIcon icon={icon} showColors />}\n\t\t\t\t\tinstructions={__('Create a new dynamic table.')}\n\t\t\t\t>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName=\"blocks-table__placeholder-form\"\n\t\t\t\t\t\tonSubmit={onCreateTable}\n\t\t\t\t\t>\n\n\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\tlabel={__('Table Columns')}\n\t\t\t\t\t\t\tonChange={e => onChangeInitialColumnCount(e)}\n\t\t\t\t\t\t\tvalue={numColumns}\n\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-input\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t\tlabel={__('Table Rows')}\n\t\t\t\t\t\t\tonChange={e => onChangeInitialRowCount(e)}\n\t\t\t\t\t\t\tvalue={numRows}\n\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-input\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-button\"\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{__('Create Table')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</form>\n\t\t\t\t</Placeholder>\n\t\t\t)}\n\n\t\t</div>\n\t)\n}","import { useState, useEffect } from '@wordpress/element';\r\nimport { usePrevious } from \"@wordpress/compose\";\r\nimport { useSelect } from '@wordpress/data';\r\n\r\n/**\r\n * Returns `true` if post changes are saved, otherwise `false`.\r\n * \r\n * @returns {boolean}\r\n */\r\nexport const usePostChangesSaved = () => {\r\n    console.log('In After Save Hook')\r\n\r\n    const [areChangesSaved, setAreChangesSaved] = useState(false);\r\n    const { hasUnsavedChanges } = useSelect((select) => {\r\n        // console.log('Getting Save Post Status')\r\n        return {\r\n            hasUnsavedChanges: select('core/editor').isEditedPostDirty(),\r\n        }\r\n    })\r\n    const hadUnsavedChanges = usePrevious(hasUnsavedChanges)\r\n\r\n    useEffect(() => {\r\n        if (!hasUnsavedChanges && hadUnsavedChanges) {\r\n            setAreChangesSaved(true);\r\n        }\r\n        if (hasUnsavedChanges) {\r\n            setAreChangesSaved(false);\r\n        }\r\n\r\n    }, [hasUnsavedChanges, hadUnsavedChanges]);\r\n\r\n    // console.log('Post Saved = ' + areChangesSaved)\r\n    return areChangesSaved;\r\n};","import { registerBlockType } from '@wordpress/blocks';\nimport './style.scss';\nimport Edit from './edit';\nimport metadata from './block.json';\n\nregisterBlockType(metadata.name, {\n\t// From  edit.js\n\t//apiVersion: 3,\n\tedit: Edit,\n\tsave: function (props) {\n\t\treturn null\n\t},\n});\n","export function numberToLetter(letterNumber) {\r\n\r\n    const letterMap = [\r\n        { nbr: '1', letter: 'A' },\r\n        { nbr: '2', letter: 'B' },\r\n        { nbr: '3', letter: 'C' },\r\n        { nbr: '4', letter: 'D' },\r\n        { nbr: '5', letter: 'E' },\r\n        { nbr: '6', letter: 'F' },\r\n        { nbr: '7', letter: 'G' },\r\n        { nbr: '8', letter: 'H' },\r\n        { nbr: '9', letter: 'I' },\r\n        { nbr: 'a', letter: 'J' },\r\n        { nbr: 'b', letter: 'k' },\r\n        { nbr: 'c', letter: 'L' },\r\n        { nbr: 'd', letter: 'M' },\r\n        { nbr: 'e', letter: 'N' },\r\n        { nbr: 'f', letter: 'O' },\r\n        { nbr: 'g', letter: 'P' },\r\n        { nbr: 'h', letter: 'Q' },\r\n        { nbr: 'i', letter: 'R' },\r\n        { nbr: 'j', letter: 'S' },\r\n        { nbr: 'k', letter: 'T' },\r\n        { nbr: 'l', letter: 'U' },\r\n        { nbr: 'm', letter: 'V' },\r\n        { nbr: 'n', letter: 'W' },\r\n        { nbr: 'o', letter: 'X' },\r\n        { nbr: 'p', letter: 'Y' },\r\n        { nbr: 'q', letter: 'Z' }\r\n    ]\r\n\r\n    if (letterNumber === 0) {\r\n        console.log('...In Letter = 0')\r\n\r\n        return '0'\r\n    }\r\n\r\n    var letterLookup = letterNumber.toString(26).split('')\r\n    let letterDigit = ''\r\n\r\n    letterLookup.map((value) => {\r\n        letterDigit = letterDigit + letterMap.find(x => x.nbr === value).letter\r\n    })\r\n\r\n    return (letterDigit)\r\n}\r\n\r\nexport function updateArray(arrayIn, key, id, updatedData) {\r\n    // console.log('Update Array')\r\n    // console.log(arrayIn)\r\n    // console.log(key)\r\n    // console.log(id)\r\n    // console.log(updatedData)\r\n    return arrayIn.map((item) =>\r\n        item[key] === id ? { ...item, ...updatedData } : item\r\n    )\r\n}\r\n\r\n\r\nexport function tableSort(tablePart, tableArray) {\r\n\r\n    console.log('SORTING TABLE')\r\n    console.log('Table Part = ' + tablePart)\r\n    console.log(tableArray)\r\n\r\n    if (tablePart === 'rows') {\r\n        var sortedRows = [...tableArray];\r\n        sortedRows.sort((a, b) => {\r\n            if ([a.row_id] < [b.row_id]) {\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n        })\r\n        return sortedRows;\r\n    }\r\n\r\n    if (tablePart === 'columns') {\r\n        console.log('...in Columns sort')\r\n        var sortedColumns = [...tableArray];\r\n        sortedColumns.sort((a, b) => {\r\n            if ([a.column_id] < [b.column_id]) {\r\n                return -1\r\n            } else {\r\n                return 1\r\n            }\r\n        })\r\n        console.log(sortedColumns)\r\n        return sortedColumns;\r\n    }\r\n\r\n    if (tablePart === 'cells') {\r\n        console.log('...in Cells sort')\r\n        var sortedCells = [...tableArray];\r\n        sortedCells.sort((a, b) => {\r\n            if ([[a.row_id], [a.column_id]] < [[b.row_id], [b.column_id]]) {\r\n                return -1\r\n            } else {\r\n                return 1\r\n            }\r\n        })\r\n        console.log(sortedCells)\r\n        return sortedCells;\r\n    }\r\n    console.log('...NO SORT RETURNED')\r\n}\r\n\r\nexport function generateBlockTableRef() {\r\n    const timestamp = Date.now();\r\n    return timestamp.toString(16);\r\n}\r\n\r\nexport function initTable(newBlockTableRef, columnCount, rowCount) {\r\n\r\n    console.log('FUNCTION - CREATE TABLE')\r\n    console.log('InitialRows - ' + rowCount)\r\n    console.log('InitialColumns - ' + columnCount)\r\n\r\n    var tableCells = initTableCells(Number(columnCount), Number(rowCount))\r\n    var rowArray = [];\r\n\r\n    for (let i = 1; i <= rowCount; i++) {\r\n        console.log('Row loop - ' + i)\r\n        let row = getDefaultRow('0', i)\r\n        // console.log('...looped row - ' + JSON.stringify(row, null, 4))\r\n        rowArray.push(row)\r\n        // console.log('...row array - ' + JSON.stringify(rowArray, null, 4))\r\n    }\r\n\r\n    var columnArray = [];\r\n\r\n    for (let i = 1; i <= columnCount; i++) {\r\n        console.log('Column loop - ' + i)\r\n        let column = getDefaultColumn('0', i)\r\n        // console.log('...looped column - ' + JSON.stringify(column, null, 4))\r\n        columnArray.push(column)\r\n        // console.log('...column array - ' + JSON.stringify(columnArray, null, 4))\r\n    }\r\n\r\n    const newTable = {\r\n        table: {\r\n            table_id: '0',\r\n            block_table_ref: newBlockTableRef,\r\n            post_id: '0',\r\n            table_status: 'new',\r\n            table_name: 'Test Table',\r\n            table_attributes: getDefaultTableAttributes('table'),\r\n            table_classes: getDefaultTableClasses('table'),\r\n            rows: rowArray,\r\n            columns: columnArray,\r\n            cells: tableCells\r\n        }\r\n    }\r\n\r\n    return newTable\r\n}\r\n\r\nexport function initTableCells(init_num_columns, init_num_rows) {\r\n    console.log(init_num_rows)\r\n    var tableCells = []\r\n\r\n    var x = 1\r\n    var y = 1\r\n\r\n    while (y <= init_num_rows) {\r\n        while (x <= init_num_columns) {\r\n            let columnLetter = numberToLetter(x)\r\n            if (y == 1) {\r\n                let cell = getDefaultCell('0', String(x), String(y))\r\n                tableCells.push(cell)\r\n            } else {\r\n                let cell = getDefaultCell('0', String(x), String(y))\r\n                tableCells.push(cell)\r\n            }\r\n            x++\r\n        }\r\n        var x = 1\r\n        y++\r\n    }\r\n\r\n    return tableCells;\r\n}\r\n\r\nexport function getDefaultRow(tableId, rowId, rowLocation = 'Body') {\r\n    console.log('In GetDefaultRow')\r\n    console.log('...tableId = ' + tableId)\r\n    console.log('...rowId = ' + rowId)\r\n    console.log('...rowLocation = ' + rowLocation)\r\n\r\n    let row\r\n    if (rowLocation === 'Border') {\r\n        row = {\r\n            table_id: String(tableId),\r\n            row_id: String(rowId),\r\n            attributes: getDefaultTableAttributes('rows', rowLocation),\r\n            classes: getDefaultTableClasses('rows')\r\n        }\r\n    } else {\r\n        row = {\r\n            table_id: String(tableId),\r\n            row_id: String(rowId),\r\n            attributes: getDefaultTableAttributes('rows', rowLocation),\r\n            classes: getDefaultTableClasses('rows')\r\n        }\r\n    }\r\n\r\n    console.log(row)\r\n    return row;\r\n}\r\n\r\n\r\nexport function getDefaultColumn(tableId, columnId, columnLocation = 'Body') {\r\n\r\n    let column\r\n    if (columnLocation === 'Border') {\r\n        column = {\r\n            table_id: String(tableId),\r\n            column_id: String(columnId),\r\n            column_name: 'Border',\r\n            attributes: getDefaultTableAttributes('columns', columnLocation),\r\n            classes: ''\r\n        }\r\n    } else {\r\n        column = {\r\n            table_id: String(tableId),\r\n            column_id: String(columnId),\r\n            column_name: 'Comments',\r\n            attributes: getDefaultTableAttributes('columns', columnLocation),\r\n            classes: getDefaultTableClasses('columns')\r\n        }\r\n    }\r\n\r\n    return column;\r\n}\r\n\r\nexport function getDefaultCell(tableId, columnId, rowId, cellLocation = 'Body') {\r\n\r\n    let cell\r\n    let columnLetter = numberToLetter(columnId)\r\n\r\n    if (cellLocation === 'Border') {\r\n        cell = {\r\n            table_id: String(tableId),\r\n            column_id: String(columnId),\r\n            row_id: String(rowId),\r\n            cell_id: columnLetter + rowId,\r\n            attributes: getDefaultTableAttributes('cells', cellLocation),\r\n            classes: 'border hover',\r\n            content: columnLetter\r\n        }\r\n    } else {\r\n        cell = {\r\n            table_id: String(tableId),\r\n            column_id: String(columnId),\r\n            row_id: String(rowId),\r\n            cell_id: columnLetter + rowId,\r\n            attributes: getDefaultTableAttributes('cells', cellLocation),\r\n            classes: getDefaultTableClasses('cells'),\r\n            content: 'Cell' + numberToLetter(columnId) + rowId\r\n        }\r\n    }\r\n    return cell;\r\n}\r\n\r\nexport function getDefaultTableAttributes(tableComponent, componentLocation = 'Body') {\r\n\r\n    const tableBaseAttributes = {\r\n        showGridLines: false,\r\n        bandedRows: false,\r\n        gridLineWidth: 1,\r\n        horizontalAlignment: 'none',\r\n        verticalAlignment: 'none'\r\n    }\r\n\r\n    const columnAttributes = {\r\n        columnWidthType: 'Proportional',\r\n        minWidth: 20,\r\n        minWidthUnits: 'ch',\r\n        maxWidth: 1,\r\n        maxWidthUnits: 'fr',\r\n        fixedWidth: 1,\r\n        fixedWidthUnits: 'fr',\r\n        disableForTablet: false,\r\n        disableForPhone: false,\r\n        isFixedLeftColumnGroup: false,\r\n        horizontalAlignment: 'none'\r\n    }\r\n\r\n    const columnBorderAttributes = {\r\n        columnWidthType: 'Fixed',\r\n        minWidth: 0,\r\n        minWidthUnits: '',\r\n        maxWidth: 0,\r\n        maxWidthUnits: '',\r\n        fixedWidth: 20,\r\n        fixedWidthUnits: 'px',\r\n        disableForTablet: false,\r\n        disableForPhone: false,\r\n        isFixedLeftColumnGroup: false,\r\n        horizontalAlignment: 'center'\r\n    }\r\n\r\n    const rowAttributes = {\r\n        rowHeightType: 'Auto',\r\n        minHeight: 0,\r\n        minHeightUnits: 'em',\r\n        maxHeight: 0,\r\n        maxHeightUnits: 'em',\r\n        fixedHeight: 0,\r\n        fixedHeightUnits: 'em',\r\n        isHeader: 'false',\r\n        verticalAlignment: 'none'\r\n    }\r\n\r\n    const rowBorderAttributes = {\r\n        rowHeightType: 'Auto',\r\n        minHeight: 0,\r\n        minHeightUnits: 'em',\r\n        maxHeight: 0,\r\n        maxHeightUnits: 'em',\r\n        fixedHeight: 0,\r\n        fixedHeightUnits: 'em',\r\n        isHeader: 'false',\r\n        verticalAlignment: 'none'\r\n    }\r\n\r\n    const cellAttributes = {\r\n        border: false\r\n    }\r\n\r\n    const cellBorderAttributes = {\r\n        border: true\r\n    }\r\n\r\n    switch (tableComponent) {\r\n        case 'table':\r\n            return tableBaseAttributes;\r\n            break;\r\n\r\n        case 'columns':\r\n            if (componentLocation === 'Border') {\r\n                return columnBorderAttributes;\r\n            }\r\n            return columnAttributes;\r\n            break;\r\n\r\n        case 'rows':\r\n            if (componentLocation === 'Border') {\r\n                return rowBorderAttributes;\r\n            }\r\n            return rowAttributes;\r\n            break;\r\n\r\n        case 'cells':\r\n            if (componentLocation === 'Border') {\r\n                return cellBorderAttributes;\r\n            }\r\n            return cellAttributes;\r\n            break;\r\n\r\n        default:\r\n            return\r\n    }\r\n}\r\n\r\nexport function getDefaultTableClasses(tableComponent) {\r\n\r\n\r\n    const tableBaseClasses = [\r\n\r\n    ]\r\n\r\n    const columnClasses = [\r\n\r\n    ]\r\n\r\n\r\n    const rowClasses = [\r\n\r\n    ]\r\n\r\n    const cellClasses = [\r\n        'cell-body'\r\n    ]\r\n\r\n    switch (tableComponent) {\r\n        case 'table':\r\n            return tableBaseClasses;\r\n            break;\r\n\r\n        case 'columns':\r\n            return columnClasses;\r\n            break;\r\n\r\n        case 'rows':\r\n            return rowClasses;\r\n            break;\r\n\r\n        case 'cells':\r\n            return cellClasses;\r\n            break;\r\n\r\n        default:\r\n            return\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"dataControls\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"primitives\"];","module.exports = window[\"wp\"][\"url\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdynamic_tables\"] = self[\"webpackChunkdynamic_tables\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], function() { return __webpack_require__(\"./src/index.js\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["useEffect","useState","DropdownMenu","MenuGroup","MenuItem","AlignmentToolbar","blockTable","icon","moreVertical","more","arrowLeft","arrowRight","arrowUp","arrowDown","trash","store","tableStore","ConfigureColumnWidth","ColumnMenu","props","openModalColumnWidth","setOpenModalColumnWidth","columnAttributes","setColumnAttributes","tableId","columnId","columnLabel","updatedColumn","console","log","onInsertColumn","event","onDeleteColumn","onUpdateColumnWidth","updatedColumnAttributes","preventDefault","createElement","Fragment","defaultOpen","label","onClose","onClick","e","openColumnWidth","Modal","SelectControl","CheckboxControl","TabbableContainer","Button","__experimentalInputControl","InputControl","__experimentalNumberControl","NumberControl","columnWidthType","setHideProportional","setHideCustom","setHideFixed","setColumnWidthType","setMinWidth","minWidth","setMinWidthUnits","minWidthUnits","setMaxWidth","maxWidth","setMaxWidthUnits","maxWidthUnits","setFixedWidth","fixedWidth","setFixedWidthUnits","setDisableForPhone","disableForPhone","setDisableForTablet","disableForTablet","stopProp","stopPropagation","handleCancel","hideProportional","hideCustom","hideFixed","fixedWidthUnits","onWidthType","onMinimumWidth","target","value","onMinimumWidthUnits","onMaximumWidth","onMaximumWidthUnits","onFixedWidth","Number","onFixedWidthUnits","onTablet","checked","onPhone","onUpdate","isFixedLeftColumnGroup","horizontalAlignment","title","onRequestClose","focusOnMount","isDismissible","shouldCloseOnClickOutside","size","className","onSubmit","onMouseDown","onChange","options","__nextHasNoMarginBottom","labelPosition","onBlur","variant","type","TYPES","CREATE_TABLE","INSERT_COLUMN","INSERT_ROW","DELETE_TABLE","DELETE_COLUMN","DELETE_ROW","CHANGE_TABLE_ID","UPDATE_TABLE_PROP","REMOVE_TABLE_PROP","UPDATE_ROW","UPDATE_COLUMN","UPDATE_CELL","RECEIVE_HYDRATE","RECEIVE_HYDRATE_TEST","PERSIST","PROCESS_BORDERS","addEntities","addQueryArgs","apiFetch","coreStore","blockEditorStore","addTableEntity","registry","dispatch","tableEntityConfig","configs","receiveNewTable","table","table_id","receiveTable","block_table_ref","post_id","table_name","table_attributes","table_classes","rows","columns","cells","table_status","createTableEntity","select","getTable","testTable","newTable","header","id","tableEntity","saveEntityRecord","assignTableId","error","updateTableEntity","filteredRows","filter","row","row_id","filteredColumns","column","column_id","filteredCells","cell","updatedTable","editEntityRecord","deleteTableEntity","deletedTableEntity","deleteEntityRecord","processDeletedTables","deletedTables","Object","keys","forEach","key","deletedTableId","processUnmountedTables","unmountedTables","unmountedTableBlockId","unmounted_blockid","tableBlock","getBlock","removeTableProp","updateTableProp","addColumn","newColumn","columnCells","addRow","removeColumn","removeRow","newTableId","String","attribute","updateRow","rowId","updateColumn","updateCell","cellId","updateTableBorder","tableRows","tableColumns","tableCells","receiveTableTest","name","kind","baseURL","STORE_NAME","createReduxStore","register","reducer","selectors","actions","resolvers","numberToLetter","updateArray","tableSort","state","action","JSON","stringify","updatedTableId","tablePropRemoved","insertColumnState","columnsWithNewId","push","column_name","attributes","classes","sortedColumns","cellsWithNewId","newColumnId","columnLetter","newCell","cell_id","content","allNewColumnCells","sortedCells","returnedTableNewColumn","deleteColumnState","newRowsState","updatedRowData","parse","updatedRows","returnedUpdatedTableRow","transformedValue","newColumnsState","updatedColumnData","updatedColumns","returnedUpdatedTableColumn","newCellsState","updatedCellData","updatedCells","returnedCellState","newBaseTableState","returnedBorderState","tables","tableKey","newTableState","returnedTable","newTablesState","returnedTableNewId","filteredTablesState","reduce","acc","deleteTablesState","returnedTableDefault","computeCellId","fetchedCells","isTableStale","resolveSelect","getEntityRecord","createRegistrySelector","hasOwnProperty","getTables","getNewTableIdByBlock","length","getUnmountedTables","getDeletedTables","getUnsavedTables","getTableBlockId","getTableTest","useSelect","useDispatch","useRef","usePrevious","__","ForwardedRef","Panel","PanelBody","PanelRow","TextControl","Spinner","Placeholder","ToggleControl","RichText","BlockIcon","InspectorControls","BlockControls","useBlockProps","usePostChangesSaved","generateBlockTableRef","initTable","initTableCells","getDefaultRow","getDefaultColumn","getDefaultCell","getDefaultTableClasses","getDefaultTableAttributes","Edit","blockProps","deleteTable","setTableStale","openColumnRow","setOpenColumnRow","tablePropAttributes","setTablePropAttributes","columnMenuVisible","setColumnMenuVisible","rowMenuVisible","setRowMenuVisible","openRowColumn","setOpenRowColumn","rowAttributes","setRowAttributes","render","setRender","showBorders","setShowBorders","numColumns","setNumColumns","numRows","setNumRows","gridCells","setGridCells","awaitingTableEntityCreation","setAwaitingTableEntityCreation","priorTableRef","postChangesAreSaved","alert","setTableAttributes","setBlockTableStatus","setNewBlock","isNewBlock","blockTableStatus","tableStatus","tableHasStartedResolving","tableHasFinishedResolving","tableIsResolving","hasStartedResolution","hasFinishedResolution","isResolving","selectorArgs","getBlockTable","selectedTable","setAttributes","getTablePropAttribute","tableAttributes","attributeName","attributeValue","showGridLines","bandedRows","gridLineWidth","verticalAlignment","tableColumnLength","tableRowLength","insertColumn","i","deleteColumn","persist","onToggleBorders","isChecked","rowBorder","row_name","rowCells","cellAttributes","border","borderColumnAttributes","columnBorder","sort","a","b","processColumns","undefined","newGridColumnStyle","map","sizing","processRows","newGridRowStyle","createTable","columnCount","rowCount","newBlockTableRef","onCreateTable","onChangeInitialColumnCount","num_columns","onChangeInitialRowCount","num_rows","onUpdateColumn","updateType","onMouseColumnClick","compareColumnId","clickedColumn","find","compareRowId","clickedRow","onShowBandedRows","updatedTableAttributes","gridColumnStyle","gridRowStyle","initialOpen","defineColumns","defineRows","style","isBorder","setBorderContent","openCurrentColumnMenu","borderContent","isOpenCurrentColumnMenu","calculatedClasses","tabIndex","tagName","showColors","instructions","areChangesSaved","setAreChangesSaved","hasUnsavedChanges","isEditedPostDirty","hadUnsavedChanges","registerBlockType","metadata","edit","save","letterNumber","letterMap","nbr","letter","letterLookup","toString","split","letterDigit","x","arrayIn","updatedData","item","tablePart","tableArray","sortedRows","timestamp","Date","now","rowArray","columnArray","init_num_columns","init_num_rows","y","rowLocation","columnLocation","cellLocation","tableComponent","componentLocation","tableBaseAttributes","columnBorderAttributes","rowHeightType","minHeight","minHeightUnits","maxHeight","maxHeightUnits","fixedHeight","fixedHeightUnits","isHeader","rowBorderAttributes","cellBorderAttributes","tableBaseClasses","columnClasses","rowClasses","cellClasses"],"sourceRoot":""}